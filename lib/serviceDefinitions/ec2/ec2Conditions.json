{
    "aws:RequestTag/${TagKey}": {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by a tag key and value pair that is allowed in the request",
        "type": "String"
    },
    "aws:ResourceTag/${TagKey}": {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by a tag key and value pair of a resource",
        "type": "String"
    },
    "aws:TagKeys": {
        "condition": "aws:TagKeys",
        "description": "Filters access by a list of tag keys that are allowed in the request",
        "type": "ArrayOfString"
    },
    "ec2:AccepterVpc": {
        "condition": "ec2:AccepterVpc",
        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
        "type": "ARN"
    },
    "ec2:Add/group": {
        "condition": "ec2:Add/group",
        "description": "Filters access by the group being added to a snapshot",
        "type": "String"
    },
    "ec2:Add/userId": {
        "condition": "ec2:Add/userId",
        "description": "Filters access by the account id being added to a snapshot",
        "type": "String"
    },
    "ec2:AllocationId": {
        "condition": "ec2:AllocationId",
        "description": "Filters access by the allocation ID of the Elastic IP address",
        "type": "String"
    },
    "ec2:AssociatePublicIpAddress": {
        "condition": "ec2:AssociatePublicIpAddress",
        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
        "type": "Bool"
    },
    "ec2:Attribute": {
        "condition": "ec2:Attribute",
        "description": "Filters access by an attribute of a resource",
        "type": "String"
    },
    "ec2:Attribute/${AttributeName}": {
        "condition": "ec2:Attribute/${AttributeName}",
        "description": "Filters access by an attribute being set on a resource",
        "type": "String"
    },
    "ec2:AuthenticationType": {
        "condition": "ec2:AuthenticationType",
        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
        "type": "String"
    },
    "ec2:AuthorizedService": {
        "condition": "ec2:AuthorizedService",
        "description": "Filters access by the AWS service that has permission to use a resource",
        "type": "String"
    },
    "ec2:AuthorizedUser": {
        "condition": "ec2:AuthorizedUser",
        "description": "Filters access by an IAM principal that has permission to use a resource",
        "type": "String"
    },
    "ec2:AutoPlacement": {
        "condition": "ec2:AutoPlacement",
        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
        "type": "String"
    },
    "ec2:AvailabilityZone": {
        "condition": "ec2:AvailabilityZone",
        "description": "Filters access by the name of an Availability Zone in an AWS Region",
        "type": "String"
    },
    "ec2:CapacityReservationFleet": {
        "condition": "ec2:CapacityReservationFleet",
        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
        "type": "ARN"
    },
    "ec2:ClientRootCertificateChainArn": {
        "condition": "ec2:ClientRootCertificateChainArn",
        "description": "Filters access by the ARN of the client root certificate chain",
        "type": "ARN"
    },
    "ec2:CloudwatchLogGroupArn": {
        "condition": "ec2:CloudwatchLogGroupArn",
        "description": "Filters access by the ARN of the CloudWatch Logs log group",
        "type": "ARN"
    },
    "ec2:CloudwatchLogStreamArn": {
        "condition": "ec2:CloudwatchLogStreamArn",
        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
        "type": "ARN"
    },
    "ec2:CreateAction": {
        "condition": "ec2:CreateAction",
        "description": "Filters access by the name of a resource-creating API action",
        "type": "String"
    },
    "ec2:DPDTimeoutSeconds": {
        "condition": "ec2:DPDTimeoutSeconds",
        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
        "type": "Numeric"
    },
    "ec2:DhcpOptionsID": {
        "condition": "ec2:DhcpOptionsID",
        "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
        "type": "String"
    },
    "ec2:DirectoryArn": {
        "condition": "ec2:DirectoryArn",
        "description": "Filters access by the ARN of the directory",
        "type": "ARN"
    },
    "ec2:Domain": {
        "condition": "ec2:Domain",
        "description": "Filters access by the domain of the Elastic IP address",
        "type": "String"
    },
    "ec2:EbsOptimized": {
        "condition": "ec2:EbsOptimized",
        "description": "Filters access by whether the instance is enabled for EBS optimization",
        "type": "Bool"
    },
    "ec2:ElasticGpuType": {
        "condition": "ec2:ElasticGpuType",
        "description": "Filters access by the type of Elastic Graphics accelerator",
        "type": "String"
    },
    "ec2:Encrypted": {
        "condition": "ec2:Encrypted",
        "description": "Filters access by whether the EBS volume is encrypted",
        "type": "Bool"
    },
    "ec2:GatewayType": {
        "condition": "ec2:GatewayType",
        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
        "type": "String"
    },
    "ec2:HostRecovery": {
        "condition": "ec2:HostRecovery",
        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
        "type": "String"
    },
    "ec2:IKEVersions": {
        "condition": "ec2:IKEVersions",
        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
        "type": "String"
    },
    "ec2:ImageID": {
        "condition": "ec2:ImageID",
        "description": "Filters access by the ID of an image",
        "type": "String"
    },
    "ec2:ImageType": {
        "condition": "ec2:ImageType",
        "description": "Filters access by the type of image (machine, aki, or ari)",
        "type": "String"
    },
    "ec2:InsideTunnelCidr": {
        "condition": "ec2:InsideTunnelCidr",
        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
        "type": "String"
    },
    "ec2:InsideTunnelIpv6Cidr": {
        "condition": "ec2:InsideTunnelIpv6Cidr",
        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
        "type": "String"
    },
    "ec2:InstanceAutoRecovery": {
        "condition": "ec2:InstanceAutoRecovery",
        "description": "Filters access by whether the instance type supports auto recovery",
        "type": "String"
    },
    "ec2:InstanceID": {
        "condition": "ec2:InstanceID",
        "description": "Filters access by the ID of an instance",
        "type": "String"
    },
    "ec2:InstanceMarketType": {
        "condition": "ec2:InstanceMarketType",
        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
        "type": "String"
    },
    "ec2:InstanceMetadataTags": {
        "condition": "ec2:InstanceMetadataTags",
        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
        "type": "String"
    },
    "ec2:InstanceProfile": {
        "condition": "ec2:InstanceProfile",
        "description": "Filters access by the ARN of an instance profile",
        "type": "ARN"
    },
    "ec2:InstanceType": {
        "condition": "ec2:InstanceType",
        "description": "Filters access by the type of instance",
        "type": "String"
    },
    "ec2:InternetGatewayID": {
        "condition": "ec2:InternetGatewayID",
        "description": "Filters access by the ID of an internet gateway",
        "type": "String"
    },
    "ec2:Ipv4IpamPoolId": {
        "condition": "ec2:Ipv4IpamPoolId",
        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
        "type": "String"
    },
    "ec2:Ipv6IpamPoolId": {
        "condition": "ec2:Ipv6IpamPoolId",
        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
        "type": "String"
    },
    "ec2:IsLaunchTemplateResource": {
        "condition": "ec2:IsLaunchTemplateResource",
        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
        "type": "Bool"
    },
    "ec2:KeyPairName": {
        "condition": "ec2:KeyPairName",
        "description": "Filters access by the name of a key pair",
        "type": "String"
    },
    "ec2:KeyPairType": {
        "condition": "ec2:KeyPairType",
        "description": "Filters access by the type of a key pair",
        "type": "String"
    },
    "ec2:KmsKeyId": {
        "condition": "ec2:KmsKeyId",
        "description": "Filters access by the ID of an AWS KMS key",
        "type": "String"
    },
    "ec2:LaunchTemplate": {
        "condition": "ec2:LaunchTemplate",
        "description": "Filters access by the ARN of a launch template",
        "type": "ARN"
    },
    "ec2:MetadataHttpEndpoint": {
        "condition": "ec2:MetadataHttpEndpoint",
        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
        "type": "String"
    },
    "ec2:MetadataHttpPutResponseHopLimit": {
        "condition": "ec2:MetadataHttpPutResponseHopLimit",
        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
        "type": "Numeric"
    },
    "ec2:MetadataHttpTokens": {
        "condition": "ec2:MetadataHttpTokens",
        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
        "type": "String"
    },
    "ec2:NetworkAclID": {
        "condition": "ec2:NetworkAclID",
        "description": "Filters access by the ID of a network access control list (ACL)",
        "type": "String"
    },
    "ec2:NetworkInterfaceID": {
        "condition": "ec2:NetworkInterfaceID",
        "description": "Filters access by the ID of an elastic network interface",
        "type": "String"
    },
    "ec2:NewInstanceProfile": {
        "condition": "ec2:NewInstanceProfile",
        "description": "Filters access by the ARN of the instance profile being attached",
        "type": "ARN"
    },
    "ec2:OutpostArn": {
        "condition": "ec2:OutpostArn",
        "description": "Filters access by the ARN of the Outpost",
        "type": "ARN"
    },
    "ec2:Owner": {
        "condition": "ec2:Owner",
        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
        "type": "String"
    },
    "ec2:ParentSnapshot": {
        "condition": "ec2:ParentSnapshot",
        "description": "Filters access by the ARN of the parent snapshot",
        "type": "ARN"
    },
    "ec2:ParentVolume": {
        "condition": "ec2:ParentVolume",
        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
        "type": "ARN"
    },
    "ec2:Permission": {
        "condition": "ec2:Permission",
        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
        "type": "String"
    },
    "ec2:Phase1DHGroup": {
        "condition": "ec2:Phase1DHGroup",
        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
        "type": "Numeric"
    },
    "ec2:Phase1EncryptionAlgorithms": {
        "condition": "ec2:Phase1EncryptionAlgorithms",
        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
        "type": "String"
    },
    "ec2:Phase1IntegrityAlgorithms": {
        "condition": "ec2:Phase1IntegrityAlgorithms",
        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
        "type": "String"
    },
    "ec2:Phase1LifetimeSeconds": {
        "condition": "ec2:Phase1LifetimeSeconds",
        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
        "type": "Numeric"
    },
    "ec2:Phase2DHGroup": {
        "condition": "ec2:Phase2DHGroup",
        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
        "type": "Numeric"
    },
    "ec2:Phase2EncryptionAlgorithms": {
        "condition": "ec2:Phase2EncryptionAlgorithms",
        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
        "type": "String"
    },
    "ec2:Phase2IntegrityAlgorithms": {
        "condition": "ec2:Phase2IntegrityAlgorithms",
        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
        "type": "String"
    },
    "ec2:Phase2LifetimeSeconds": {
        "condition": "ec2:Phase2LifetimeSeconds",
        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
        "type": "Numeric"
    },
    "ec2:PlacementGroup": {
        "condition": "ec2:PlacementGroup",
        "description": "Filters access by the ARN of the placement group",
        "type": "ARN"
    },
    "ec2:PlacementGroupName": {
        "condition": "ec2:PlacementGroupName",
        "description": "Filters access by the name of a placement group",
        "type": "String"
    },
    "ec2:PlacementGroupStrategy": {
        "condition": "ec2:PlacementGroupStrategy",
        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
        "type": "String"
    },
    "ec2:PreSharedKeys": {
        "condition": "ec2:PreSharedKeys",
        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
        "type": "String"
    },
    "ec2:ProductCode": {
        "condition": "ec2:ProductCode",
        "description": "Filters access by the product code that is associated with the AMI",
        "type": "String"
    },
    "ec2:Public": {
        "condition": "ec2:Public",
        "description": "Filters access by whether the image has public launch permissions",
        "type": "Bool"
    },
    "ec2:PublicIpAddress": {
        "condition": "ec2:PublicIpAddress",
        "description": "Filters access by a public IP address",
        "type": "String"
    },
    "ec2:Quantity": {
        "condition": "ec2:Quantity",
        "description": "Filters access by the number of Dedicated Hosts in a request",
        "type": "Numeric"
    },
    "ec2:Region": {
        "condition": "ec2:Region",
        "description": "Filters access by the name of the AWS Region",
        "type": "String"
    },
    "ec2:RekeyFuzzPercentage": {
        "condition": "ec2:RekeyFuzzPercentage",
        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
        "type": "Numeric"
    },
    "ec2:RekeyMarginTimeSeconds": {
        "condition": "ec2:RekeyMarginTimeSeconds",
        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
        "type": "Numeric"
    },
    "ec2:Remove/group": {
        "condition": "ec2:Remove/group",
        "description": "Filters access by the group being removed from a snapshot",
        "type": "String"
    },
    "ec2:Remove/userId": {
        "condition": "ec2:Remove/userId",
        "description": "Filters access by the account id being removed from a snapshot",
        "type": "String"
    },
    "ec2:ReplayWindowSizePackets": {
        "condition": "ec2:ReplayWindowSizePackets",
        "description": "Filters access by the number of packets in an IKE replay window",
        "type": "String"
    },
    "ec2:RequesterVpc": {
        "condition": "ec2:RequesterVpc",
        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
        "type": "ARN"
    },
    "ec2:ReservedInstancesOfferingType": {
        "condition": "ec2:ReservedInstancesOfferingType",
        "description": "Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)",
        "type": "String"
    },
    "ec2:ResourceTag/${TagKey}": {
        "condition": "ec2:ResourceTag/${TagKey}",
        "description": "Filters access by a tag key and value pair of a resource",
        "type": "String"
    },
    "ec2:RoleDelivery": {
        "condition": "ec2:RoleDelivery",
        "description": "Filters access by the version of the instance metadata service for retrieving IAM role credentials for EC2",
        "type": "Numeric"
    },
    "ec2:RootDeviceType": {
        "condition": "ec2:RootDeviceType",
        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
        "type": "String"
    },
    "ec2:RouteTableID": {
        "condition": "ec2:RouteTableID",
        "description": "Filters access by the ID of a route table",
        "type": "String"
    },
    "ec2:RoutingType": {
        "condition": "ec2:RoutingType",
        "description": "Filters access by the routing type for the VPN connection",
        "type": "String"
    },
    "ec2:SamlProviderArn": {
        "condition": "ec2:SamlProviderArn",
        "description": "Filters access by the ARN of the IAM SAML identity provider",
        "type": "ARN"
    },
    "ec2:SecurityGroupID": {
        "condition": "ec2:SecurityGroupID",
        "description": "Filters access by the ID of a security group",
        "type": "String"
    },
    "ec2:ServerCertificateArn": {
        "condition": "ec2:ServerCertificateArn",
        "description": "Filters access by the ARN of the server certificate",
        "type": "ARN"
    },
    "ec2:SnapshotID": {
        "condition": "ec2:SnapshotID",
        "description": "Filters access by the ID of a snapshot",
        "type": "String"
    },
    "ec2:SnapshotTime": {
        "condition": "ec2:SnapshotTime",
        "description": "Filters access by the initiation time of a snapshot",
        "type": "String"
    },
    "ec2:SourceInstanceARN": {
        "condition": "ec2:SourceInstanceARN",
        "description": "Filters access by the ARN of the instance from which the request originated",
        "type": "ARN"
    },
    "ec2:SourceOutpostArn": {
        "condition": "ec2:SourceOutpostArn",
        "description": "Filters access by the ARN of the Outpost from which the request originated",
        "type": "ARN"
    },
    "ec2:Subnet": {
        "condition": "ec2:Subnet",
        "description": "Filters access by the ARN of the subnet",
        "type": "ARN"
    },
    "ec2:SubnetID": {
        "condition": "ec2:SubnetID",
        "description": "Filters access by the ID of a subnet",
        "type": "String"
    },
    "ec2:Tenancy": {
        "condition": "ec2:Tenancy",
        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
        "type": "String"
    },
    "ec2:VolumeID": {
        "condition": "ec2:VolumeID",
        "description": "Filters access by the ID of a volume",
        "type": "String"
    },
    "ec2:VolumeIops": {
        "condition": "ec2:VolumeIops",
        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
        "type": "Numeric"
    },
    "ec2:VolumeSize": {
        "condition": "ec2:VolumeSize",
        "description": "Filters access by the size of the volume, in GiB",
        "type": "Numeric"
    },
    "ec2:VolumeThroughput": {
        "condition": "ec2:VolumeThroughput",
        "description": "Filters access by the throughput of the volume, in MiBps",
        "type": "Numeric"
    },
    "ec2:VolumeType": {
        "condition": "ec2:VolumeType",
        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
        "type": "String"
    },
    "ec2:Vpc": {
        "condition": "ec2:Vpc",
        "description": "Filters access by the ARN of the VPC",
        "type": "ARN"
    },
    "ec2:VpcID": {
        "condition": "ec2:VpcID",
        "description": "Filters access by the ID of a virtual private cloud (VPC)",
        "type": "String"
    },
    "ec2:VpcPeeringConnectionID": {
        "condition": "ec2:VpcPeeringConnectionID",
        "description": "Filters access by the ID of a VPC peering connection",
        "type": "String"
    },
    "ec2:VpceServiceName": {
        "condition": "ec2:VpceServiceName",
        "description": "Filters access by the name of the VPC endpoint service",
        "type": "String"
    },
    "ec2:VpceServiceOwner": {
        "condition": "ec2:VpceServiceOwner",
        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
        "type": "String"
    },
    "ec2:VpceServicePrivateDnsName": {
        "condition": "ec2:VpceServicePrivateDnsName",
        "description": "Filters access by the private DNS name of the VPC endpoint service",
        "type": "String"
    }
}
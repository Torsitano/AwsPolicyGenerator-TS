{
    "elasticIp": {
        "resourceName": "elastic-ip",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:AllocationId": {
                "condition": "ec2:AllocationId",
                "description": "Filters access by the allocation ID of the Elastic IP address",
                "type": "String"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Domain": {
                "condition": "ec2:Domain",
                "description": "Filters access by the domain of the Elastic IP address",
                "type": "String"
            },
            "ec2:PublicIpAddress": {
                "condition": "ec2:PublicIpAddress",
                "description": "Filters access by a public IP address",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeAddressesAttribute": {
                "privilege": "DescribeAddressesAttribute",
                "description": "Grants permission to describe the attributes of the specified Elastic IP addresses",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddressesAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "AllocateAddress": {
                "privilege": "AllocateAddress",
                "description": "Grants permission to allocate an Elastic IP address (EIP) to your account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateAddress.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AssociateAddress": {
                "privilege": "AssociateAddress",
                "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateAddress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateNatGateway": {
                "privilege": "CreateNatGateway",
                "description": "Grants permission to create a NAT gateway in a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNatGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateAddress": {
                "privilege": "DisassociateAddress",
                "description": "Grants permission to disassociate an Elastic IP address from an instance or network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateAddress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyAddressAttribute": {
                "privilege": "ModifyAddressAttribute",
                "description": "Grants permission to modify an attribute of the specified Elastic IP address",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyAddressAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReleaseAddress": {
                "privilege": "ReleaseAddress",
                "description": "Grants permission to release an Elastic IP address",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseAddress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ResetAddressAttribute": {
                "privilege": "ResetAddressAttribute",
                "description": "Grants permission to reset the attribute of the specified IP address",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetAddressAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "capacityReservationFleet": {
        "resourceName": "capacity-reservation-fleet",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CancelCapacityReservationFleets": {
                "privilege": "CancelCapacityReservationFleets",
                "description": "Grants permission to cancel one or more Capacity Reservation Fleets",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservationFleets.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateCapacityReservationFleet": {
                "privilege": "CreateCapacityReservationFleet",
                "description": "Grants permission to create a Capacity Reservation Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservationFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "ModifyCapacityReservationFleet": {
                "privilege": "ModifyCapacityReservationFleet",
                "description": "Grants permission to modify a Capacity Reservation Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservationFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "capacityReservation": {
        "resourceName": "capacity-reservation",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:CapacityReservationFleet": {
                "condition": "ec2:CapacityReservationFleet",
                "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                "type": "ARN"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "GetGroupsForCapacityReservation": {
                "privilege": "GetGroupsForCapacityReservation",
                "description": "Grants permission to list the resource groups to which a Capacity Reservation has been added",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetGroupsForCapacityReservation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetCapacityReservationUsage": {
                "privilege": "GetCapacityReservationUsage",
                "description": "Grants permission to get usage information about a Capacity Reservation",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCapacityReservationUsage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CancelCapacityReservation": {
                "privilege": "CancelCapacityReservation",
                "description": "Grants permission to cancel a Capacity Reservation and release the reserved capacity",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateCapacityReservation": {
                "privilege": "CreateCapacityReservation",
                "description": "Grants permission to create a Capacity Reservation",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservation.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "ModifyCapacityReservation": {
                "privilege": "ModifyCapacityReservation",
                "description": "Grants permission to modify a Capacity Reservation's capacity and the conditions under which it is to be released",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstanceCapacityReservationAttributes": {
                "privilege": "ModifyInstanceCapacityReservationAttributes",
                "description": "Grants permission to modify the Capacity Reservation settings for a stopped instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCapacityReservationAttributes.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "carrierGateway": {
        "resourceName": "carrier-gateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:Tenancy": {
                "condition": "ec2:Tenancy",
                "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                "type": "String"
            },
            "ec2:Vpc": {
                "condition": "ec2:Vpc",
                "description": "Filters access by the ARN of the VPC",
                "type": "ARN"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateCarrierGateway": {
                "privilege": "CreateCarrierGateway",
                "description": "Grants permission to create a carrier gateway and provides CSP connectivity to VPC customers",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCarrierGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteCarrierGateway": {
                "privilege": "DeleteCarrierGateway",
                "description": "Grants permission to delete a carrier gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCarrierGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "certificate": {
        "resourceName": "certificate",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetAssociatedEnclaveCertificateIamRoles": {
                "privilege": "GetAssociatedEnclaveCertificateIamRoles",
                "description": "Grants permission to get the list of roles associated with an ACM certificate",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAssociatedEnclaveCertificateIamRoles.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "AssociateEnclaveCertificateIamRole": {
                "privilege": "AssociateEnclaveCertificateIamRole",
                "description": "Grants permission to associate an ACM certificate with an IAM role to be used in an EC2 Enclave",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateEnclaveCertificateIamRole.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateEnclaveCertificateIamRole": {
                "privilege": "DisassociateEnclaveCertificateIamRole",
                "description": "Grants permission to disassociate an ACM certificate from a IAM role",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateEnclaveCertificateIamRole.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "clientVpnEndpoint": {
        "resourceName": "client-vpn-endpoint",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:ClientRootCertificateChainArn": {
                "condition": "ec2:ClientRootCertificateChainArn",
                "description": "Filters access by the ARN of the client root certificate chain",
                "type": "ARN"
            },
            "ec2:CloudwatchLogGroupArn": {
                "condition": "ec2:CloudwatchLogGroupArn",
                "description": "Filters access by the ARN of the CloudWatch Logs log group",
                "type": "ARN"
            },
            "ec2:CloudwatchLogStreamArn": {
                "condition": "ec2:CloudwatchLogStreamArn",
                "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                "type": "ARN"
            },
            "ec2:DirectoryArn": {
                "condition": "ec2:DirectoryArn",
                "description": "Filters access by the ARN of the directory",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:SamlProviderArn": {
                "condition": "ec2:SamlProviderArn",
                "description": "Filters access by the ARN of the IAM SAML identity provider",
                "type": "ARN"
            },
            "ec2:ServerCertificateArn": {
                "condition": "ec2:ServerCertificateArn",
                "description": "Filters access by the ARN of the server certificate",
                "type": "ARN"
            }
        },
        "listPrivileges": {
            "DescribeClientVpnAuthorizationRules": {
                "privilege": "DescribeClientVpnAuthorizationRules",
                "description": "Grants permission to describe the authorization rules for a Client VPN endpoint",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnAuthorizationRules.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeClientVpnConnections": {
                "privilege": "DescribeClientVpnConnections",
                "description": "Grants permission to describe active client connections and connections that have been terminated within the last 60 minutes for a Client VPN endpoint",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnConnections.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeClientVpnEndpoints": {
                "privilege": "DescribeClientVpnEndpoints",
                "description": "Grants permission to describe one or more Client VPN endpoints",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnEndpoints.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeClientVpnRoutes": {
                "privilege": "DescribeClientVpnRoutes",
                "description": "Grants permission to describe the routes for a Client VPN endpoint",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnRoutes.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeClientVpnTargetNetworks": {
                "privilege": "DescribeClientVpnTargetNetworks",
                "description": "Grants permission to describe the target networks that are associated with a Client VPN endpoint",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnTargetNetworks.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {
            "ExportClientVpnClientCertificateRevocationList": {
                "privilege": "ExportClientVpnClientCertificateRevocationList",
                "description": "Grants permission to download the client certificate revocation list for a Client VPN endpoint",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientCertificateRevocationList.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ExportClientVpnClientConfiguration": {
                "privilege": "ExportClientVpnClientConfiguration",
                "description": "Grants permission to download the contents of the Client VPN endpoint configuration file for a Client VPN endpoint",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientConfiguration.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "ApplySecurityGroupsToClientVpnTargetNetwork": {
                "privilege": "ApplySecurityGroupsToClientVpnTargetNetwork",
                "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ApplySecurityGroupsToClientVpnTargetNetwork.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateClientVpnTargetNetwork": {
                "privilege": "AssociateClientVpnTargetNetwork",
                "description": "Grants permission to associate a target network with a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateClientVpnTargetNetwork.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AuthorizeClientVpnIngress": {
                "privilege": "AuthorizeClientVpnIngress",
                "description": "Grants permission to add an inbound authorization rule to a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeClientVpnIngress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateClientVpnEndpoint": {
                "privilege": "CreateClientVpnEndpoint",
                "description": "Grants permission to create a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateClientVpnRoute": {
                "privilege": "CreateClientVpnRoute",
                "description": "Grants permission to add a network route to a Client VPN endpoint's route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteClientVpnEndpoint": {
                "privilege": "DeleteClientVpnEndpoint",
                "description": "Grants permission to delete a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteClientVpnRoute": {
                "privilege": "DeleteClientVpnRoute",
                "description": "Grants permission to delete a route from a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateClientVpnTargetNetwork": {
                "privilege": "DisassociateClientVpnTargetNetwork",
                "description": "Grants permission to disassociate a target network from a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateClientVpnTargetNetwork.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportClientVpnClientCertificateRevocationList": {
                "privilege": "ImportClientVpnClientCertificateRevocationList",
                "description": "Grants permission to upload a client certificate revocation list to a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportClientVpnClientCertificateRevocationList.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyClientVpnEndpoint": {
                "privilege": "ModifyClientVpnEndpoint",
                "description": "Grants permission to modify a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyClientVpnEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RevokeClientVpnIngress": {
                "privilege": "RevokeClientVpnIngress",
                "description": "Grants permission to remove an inbound authorization rule from a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeClientVpnIngress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "TerminateClientVpnConnections": {
                "privilege": "TerminateClientVpnConnections",
                "description": "Grants permission to terminate active Client VPN endpoint connections",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateClientVpnConnections.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "customerGateway": {
        "resourceName": "customer-gateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateCustomerGateway": {
                "privilege": "CreateCustomerGateway",
                "description": "Grants permission to create a customer gateway, which provides information to AWS about your customer gateway device",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateVpnConnection": {
                "privilege": "CreateVpnConnection",
                "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteCustomerGateway": {
                "privilege": "DeleteCustomerGateway",
                "description": "Grants permission to delete a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "dedicatedHost": {
        "resourceName": "dedicated-host",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AutoPlacement": {
                "condition": "ec2:AutoPlacement",
                "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                "type": "String"
            },
            "ec2:AvailabilityZone": {
                "condition": "ec2:AvailabilityZone",
                "description": "Filters access by the name of an Availability Zone in an AWS Region",
                "type": "String"
            },
            "ec2:HostRecovery": {
                "condition": "ec2:HostRecovery",
                "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                "type": "String"
            },
            "ec2:InstanceType": {
                "condition": "ec2:InstanceType",
                "description": "Filters access by the type of instance",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Quantity": {
                "condition": "ec2:Quantity",
                "description": "Filters access by the number of Dedicated Hosts in a request",
                "type": "Numeric"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AllocateHosts": {
                "privilege": "AllocateHosts",
                "description": "Grants permission to allocate a Dedicated Host to your account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateHosts.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "ModifyHosts": {
                "privilege": "ModifyHosts",
                "description": "Grants permission to modify a Dedicated Host",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyHosts.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstancePlacement": {
                "privilege": "ModifyInstancePlacement",
                "description": "Grants permission to modify the placement attributes for an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstancePlacement.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "PurchaseHostReservation": {
                "privilege": "PurchaseHostReservation",
                "description": "Grants permission to purchase a reservation with configurations that match those of a Dedicated Host",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseHostReservation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "ReleaseHosts": {
                "privilege": "ReleaseHosts",
                "description": "Grants permission to release one or more On-Demand Dedicated Hosts",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseHosts.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "dhcpOptions": {
        "resourceName": "dhcp-options",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:DhcpOptionsID": {
                "condition": "ec2:DhcpOptionsID",
                "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateDhcpOptions": {
                "privilege": "AssociateDhcpOptions",
                "description": "Grants permission to associate or disassociate a set of DHCP options with a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateDhcpOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateDhcpOptions": {
                "privilege": "CreateDhcpOptions",
                "description": "Grants permission to create a set of DHCP options for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDhcpOptions.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteDhcpOptions": {
                "privilege": "DeleteDhcpOptions",
                "description": "Grants permission to delete a set of DHCP options",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteDhcpOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "egressOnlyInternetGateway": {
        "resourceName": "egress-only-internet-gateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateEgressOnlyInternetGateway": {
                "privilege": "CreateEgressOnlyInternetGateway",
                "description": "Grants permission to create an egress-only internet gateway for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateEgressOnlyInternetGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteEgressOnlyInternetGateway": {
                "privilege": "DeleteEgressOnlyInternetGateway",
                "description": "Grants permission to delete an egress-only internet gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteEgressOnlyInternetGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "elasticGpu": {
        "resourceName": "elastic-gpu",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:ElasticGpuType": {
                "condition": "ec2:ElasticGpuType",
                "description": "Filters access by the type of Elastic Graphics accelerator",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "elasticInference": {
        "resourceName": "elastic-inference",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${ElasticInferenceAcceleratorId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "exportImageTask": {
        "resourceName": "export-image-task",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CancelExportTask": {
                "privilege": "CancelExportTask",
                "description": "Grants permission to cancel an active export task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelExportTask.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ExportImage": {
                "privilege": "ExportImage",
                "description": "Grants permission to export an Amazon Machine Image (AMI) to a VM file",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "exportInstanceTask": {
        "resourceName": "export-instance-task",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CancelExportTask": {
                "privilege": "CancelExportTask",
                "description": "Grants permission to cancel an active export task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelExportTask.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateInstanceExportTask": {
                "privilege": "CreateInstanceExportTask",
                "description": "Grants permission to export a running or stopped instance to an Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceExportTask.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "fleet": {
        "resourceName": "fleet",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeFleetHistory": {
                "privilege": "DescribeFleetHistory",
                "description": "Grants permission to describe the events for an EC2 Fleet during a specified time",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetHistory.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeFleetInstances": {
                "privilege": "DescribeFleetInstances",
                "description": "Grants permission to describe the running instances for an EC2 Fleet",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteFleets": {
                "privilege": "DeleteFleets",
                "description": "Grants permission to delete one or more EC2 Fleets",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFleets.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "fpgaImage": {
        "resourceName": "fpga-image",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Owner": {
                "condition": "ec2:Owner",
                "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                "type": "String"
            },
            "ec2:Public": {
                "condition": "ec2:Public",
                "description": "Filters access by whether the image has public launch permissions",
                "type": "Bool"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeFpgaImageAttribute": {
                "privilege": "DescribeFpgaImageAttribute",
                "description": "Grants permission to describe the attributes of an Amazon FPGA Image (AFI)",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFpgaImageAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "CopyFpgaImage": {
                "privilege": "CopyFpgaImage",
                "description": "Grants permission to copy a source Amazon FPGA image (AFI) to the current Region. Resource-level permissions specified for this action apply to the new AFI only. They do not apply to the source AFI",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyFpgaImage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateFpgaImage": {
                "privilege": "CreateFpgaImage",
                "description": "Grants permission to create an Amazon FPGA Image (AFI) from a design checkpoint (DCP)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFpgaImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteFpgaImage": {
                "privilege": "DeleteFpgaImage",
                "description": "Grants permission to delete an Amazon FPGA Image (AFI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFpgaImage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyFpgaImageAttribute": {
                "privilege": "ModifyFpgaImageAttribute",
                "description": "Grants permission to modify an attribute of an Amazon FPGA Image (AFI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFpgaImageAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ResetFpgaImageAttribute": {
                "privilege": "ResetFpgaImageAttribute",
                "description": "Grants permission to reset an attribute of an Amazon FPGA Image (AFI) to its default value",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetFpgaImageAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "hostReservation": {
        "resourceName": "host-reservation",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/${HostReservationId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "image": {
        "resourceName": "image",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:ImageID": {
                "condition": "ec2:ImageID",
                "description": "Filters access by the ID of an image",
                "type": "String"
            },
            "ec2:ImageType": {
                "condition": "ec2:ImageType",
                "description": "Filters access by the type of image (machine, aki, or ari)",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Owner": {
                "condition": "ec2:Owner",
                "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                "type": "String"
            },
            "ec2:Public": {
                "condition": "ec2:Public",
                "description": "Filters access by whether the image has public launch permissions",
                "type": "Bool"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:RootDeviceType": {
                "condition": "ec2:RootDeviceType",
                "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeFastLaunchImages": {
                "privilege": "DescribeFastLaunchImages",
                "description": "Grants permission to describe fast-launch enabled Windows AMIs",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFastLaunchImages.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeImageAttribute": {
                "privilege": "DescribeImageAttribute",
                "description": "Grants permission to describe an attribute of an Amazon Machine Image (AMI)",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeStoreImageTasks": {
                "privilege": "DescribeStoreImageTasks",
                "description": "Grants permission to describe the progress of the AMI store tasks",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeStoreImageTasks.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ListImagesInRecycleBin": {
                "privilege": "ListImagesInRecycleBin",
                "description": "Grants permission to list Amazon Machine Images (AMIs) that are currently in the Recycle Bin",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ListImagesInRecycleBin.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "CopyImage": {
                "privilege": "CopyImage",
                "description": "Grants permission to copy an Amazon Machine Image (AMI) from a source Region to the current Region. Resource-level permissions specified for this action apply to the new AMI only. They do not apply to the source AMI",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyImage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateImage": {
                "privilege": "CreateImage",
                "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateRestoreImageTask": {
                "privilege": "CreateRestoreImageTask",
                "description": "Grants permission to start a task that restores an AMI from an S3 object previously created by using CreateStoreImageTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRestoreImageTask.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateStoreImageTask": {
                "privilege": "CreateStoreImageTask",
                "description": "Grants permission to store an AMI as a single object in an S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeregisterImage": {
                "privilege": "DeregisterImage",
                "description": "Grants permission to deregister an Amazon Machine Image (AMI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterImage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableFastLaunch": {
                "privilege": "DisableFastLaunch",
                "description": "Grants permission to disable faster launching for Windows AMIs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastLaunch.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisableImageDeprecation": {
                "privilege": "DisableImageDeprecation",
                "description": "Grants permission to cancel the deprecation of the specified AMI",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableImageDeprecation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableFastLaunch": {
                "privilege": "EnableFastLaunch",
                "description": "Grants permission to enable faster launching for Windows AMIs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastLaunch.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "EnableImageDeprecation": {
                "privilege": "EnableImageDeprecation",
                "description": "Grants permission to enable deprecation of the specified AMI at the specified date and time",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableImageDeprecation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ExportImage": {
                "privilege": "ExportImage",
                "description": "Grants permission to export an Amazon Machine Image (AMI) to a VM file",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportImage": {
                "privilege": "ImportImage",
                "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyImageAttribute": {
                "privilege": "ModifyImageAttribute",
                "description": "Grants permission to modify an attribute of an Amazon Machine Image (AMI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RegisterImage": {
                "privilege": "RegisterImage",
                "description": "Grants permission to register an Amazon Machine Image (AMI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterImage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ResetImageAttribute": {
                "privilege": "ResetImageAttribute",
                "description": "Grants permission to reset an attribute of an Amazon Machine Image (AMI) to its default value",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetImageAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RestoreImageFromRecycleBin": {
                "privilege": "RestoreImageFromRecycleBin",
                "description": "Grants permission to restore an Amazon Machine Image (AMI) from the Recycle Bin",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreImageFromRecycleBin.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunScheduledInstances": {
                "privilege": "RunScheduledInstances",
                "description": "Grants permission to launch one or more Scheduled Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "importImageTask": {
        "resourceName": "import-image-task",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CancelImportTask": {
                "privilege": "CancelImportTask",
                "description": "Grants permission to cancel an in-process import virtual machine or import snapshot task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelImportTask.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ImportImage": {
                "privilege": "ImportImage",
                "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "importSnapshotTask": {
        "resourceName": "import-snapshot-task",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CancelImportTask": {
                "privilege": "CancelImportTask",
                "description": "Grants permission to cancel an in-process import virtual machine or import snapshot task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelImportTask.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ImportSnapshot": {
                "privilege": "ImportSnapshot",
                "description": "Grants permission to import a disk into an EBS snapshot",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportSnapshot.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "instanceEventWindow": {
        "resourceName": "instance-event-window",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateInstanceEventWindow": {
                "privilege": "AssociateInstanceEventWindow",
                "description": "Grants permission to associate one or more targets with an event window",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateInstanceEventWindow.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateInstanceEventWindow": {
                "privilege": "CreateInstanceEventWindow",
                "description": "Grants permission to create an event window in which scheduled events for the associated Amazon EC2 instances can run",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceEventWindow.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteInstanceEventWindow": {
                "privilege": "DeleteInstanceEventWindow",
                "description": "Grants permission to delete the specified event window",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInstanceEventWindow.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateInstanceEventWindow": {
                "privilege": "DisassociateInstanceEventWindow",
                "description": "Grants permission to disassociate one or more targets from an event window",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateInstanceEventWindow.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstanceEventWindow": {
                "privilege": "ModifyInstanceEventWindow",
                "description": "Grants permission to modify the specified event window",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventWindow.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "instance": {
        "resourceName": "instance",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AvailabilityZone": {
                "condition": "ec2:AvailabilityZone",
                "description": "Filters access by the name of an Availability Zone in an AWS Region",
                "type": "String"
            },
            "ec2:EbsOptimized": {
                "condition": "ec2:EbsOptimized",
                "description": "Filters access by whether the instance is enabled for EBS optimization",
                "type": "Bool"
            },
            "ec2:InstanceAutoRecovery": {
                "condition": "ec2:InstanceAutoRecovery",
                "description": "Filters access by whether the instance type supports auto recovery",
                "type": "String"
            },
            "ec2:InstanceID": {
                "condition": "ec2:InstanceID",
                "description": "Filters access by the ID of an instance",
                "type": "String"
            },
            "ec2:InstanceMarketType": {
                "condition": "ec2:InstanceMarketType",
                "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                "type": "String"
            },
            "ec2:InstanceMetadataTags": {
                "condition": "ec2:InstanceMetadataTags",
                "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                "type": "String"
            },
            "ec2:InstanceProfile": {
                "condition": "ec2:InstanceProfile",
                "description": "Filters access by the ARN of an instance profile",
                "type": "ARN"
            },
            "ec2:InstanceType": {
                "condition": "ec2:InstanceType",
                "description": "Filters access by the type of instance",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:MetadataHttpEndpoint": {
                "condition": "ec2:MetadataHttpEndpoint",
                "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                "type": "String"
            },
            "ec2:MetadataHttpPutResponseHopLimit": {
                "condition": "ec2:MetadataHttpPutResponseHopLimit",
                "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                "type": "Numeric"
            },
            "ec2:MetadataHttpTokens": {
                "condition": "ec2:MetadataHttpTokens",
                "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                "type": "String"
            },
            "ec2:NewInstanceProfile": {
                "condition": "ec2:NewInstanceProfile",
                "description": "Filters access by the ARN of the instance profile being attached",
                "type": "ARN"
            },
            "ec2:PlacementGroup": {
                "condition": "ec2:PlacementGroup",
                "description": "Filters access by the ARN of the placement group",
                "type": "ARN"
            },
            "ec2:ProductCode": {
                "condition": "ec2:ProductCode",
                "description": "Filters access by the product code that is associated with the AMI",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:RootDeviceType": {
                "condition": "ec2:RootDeviceType",
                "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                "type": "String"
            },
            "ec2:Tenancy": {
                "condition": "ec2:Tenancy",
                "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeInstanceAttribute": {
                "privilege": "DescribeInstanceAttribute",
                "description": "Grants permission to describe the attributes of an instance",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {
            "GetConsoleOutput": {
                "privilege": "GetConsoleOutput",
                "description": "Grants permission to get the console output for an instance",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetConsoleScreenshot": {
                "privilege": "GetConsoleScreenshot",
                "description": "Grants permission to retrieve a JPG-format screenshot of a running instance",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleScreenshot.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "GetInstanceUefiData": {
                "privilege": "GetInstanceUefiData",
                "description": "Grants permission to retrieve the binary representation of the UEFI variable store",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetLaunchTemplateData": {
                "privilege": "GetLaunchTemplateData",
                "description": "Grants permission to get the configuration data of the specified instance for use with a new launch template or launch template version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetLaunchTemplateData.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetPasswordData": {
                "privilege": "GetPasswordData",
                "description": "Grants permission to retrieve the encrypted administrator password for a running Windows instance",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "AssociateAddress": {
                "privilege": "AssociateAddress",
                "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateAddress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AssociateIamInstanceProfile": {
                "privilege": "AssociateIamInstanceProfile",
                "description": "Grants permission to associate an IAM instance profile with a running or stopped instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            },
            "AttachClassicLinkVpc": {
                "privilege": "AttachClassicLinkVpc",
                "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachClassicLinkVpc.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AttachNetworkInterface": {
                "privilege": "AttachNetworkInterface",
                "description": "Grants permission to attach a network interface to an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachNetworkInterface.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AttachVolume": {
                "privilege": "AttachVolume",
                "description": "Grants permission to attach an EBS volume to a running or stopped instance and expose it to the instance with the specified device name",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVolume.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateImage": {
                "privilege": "CreateImage",
                "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateInstanceExportTask": {
                "privilege": "CreateInstanceExportTask",
                "description": "Grants permission to export a running or stopped instance to an Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceExportTask.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateReplaceRootVolumeTask": {
                "privilege": "CreateReplaceRootVolumeTask",
                "description": "Grants permission to create a root volume replacement task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReplaceRootVolumeTask.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateSnapshots": {
                "privilege": "CreateSnapshots",
                "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachClassicLinkVpc": {
                "privilege": "DetachClassicLinkVpc",
                "description": "Grants permission to unlink (detach) a linked EC2-Classic instance from a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachClassicLinkVpc.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachNetworkInterface": {
                "privilege": "DetachNetworkInterface",
                "description": "Grants permission to detach a network interface from an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachNetworkInterface.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachVolume": {
                "privilege": "DetachVolume",
                "description": "Grants permission to detach an EBS volume from an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVolume.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateIamInstanceProfile": {
                "privilege": "DisassociateIamInstanceProfile",
                "description": "Grants permission to disassociate an IAM instance profile from a running or stopped instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportInstance": {
                "privilege": "ImportInstance",
                "description": "Grants permission to create an import instance task using metadata from a disk image",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyInstanceAttribute": {
                "privilege": "ModifyInstanceAttribute",
                "description": "Grants permission to modify an attribute of an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyInstanceCapacityReservationAttributes": {
                "privilege": "ModifyInstanceCapacityReservationAttributes",
                "description": "Grants permission to modify the Capacity Reservation settings for a stopped instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCapacityReservationAttributes.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyInstanceCreditSpecification": {
                "privilege": "ModifyInstanceCreditSpecification",
                "description": "Grants permission to modify the credit option for CPU usage on an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstanceEventStartTime": {
                "privilege": "ModifyInstanceEventStartTime",
                "description": "Grants permission to modify the start time for a scheduled EC2 instance event",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventStartTime.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstanceMaintenanceOptions": {
                "privilege": "ModifyInstanceMaintenanceOptions",
                "description": "Grants permission to modify the recovery behaviour for an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMaintenanceOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstanceMetadataOptions": {
                "privilege": "ModifyInstanceMetadataOptions",
                "description": "Grants permission to modify the metadata options for an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstancePlacement": {
                "privilege": "ModifyInstancePlacement",
                "description": "Grants permission to modify the placement attributes for an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstancePlacement.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyNetworkInterfaceAttribute": {
                "privilege": "ModifyNetworkInterfaceAttribute",
                "description": "Grants permission to modify an attribute of a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyNetworkInterfaceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyPrivateDnsNameOptions": {
                "privilege": "ModifyPrivateDnsNameOptions",
                "description": "Grants permission to modify the options for instance hostnames for the specified instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyPrivateDnsNameOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "MonitorInstances": {
                "privilege": "MonitorInstances",
                "description": "Grants permission to enable detailed monitoring for a running instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MonitorInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RebootInstances": {
                "privilege": "RebootInstances",
                "description": "Grants permission to request a reboot of one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RebootInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplaceIamInstanceProfileAssociation": {
                "privilege": "ReplaceIamInstanceProfileAssociation",
                "description": "Grants permission to replace an IAM instance profile for an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceIamInstanceProfileAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            },
            "ResetInstanceAttribute": {
                "privilege": "ResetInstanceAttribute",
                "description": "Grants permission to reset an attribute of an instance to its default value",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetInstanceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "SendDiagnosticInterrupt": {
                "privilege": "SendDiagnosticInterrupt",
                "description": "Grants permission to send a diagnostic interrupt to an Amazon EC2 instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SendDiagnosticInterrupt.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "SendSpotInstanceInterruptions": {
                "privilege": "SendSpotInstanceInterruptions",
                "description": "Grants permission to interrupt a Spot Instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html#send-spot-instance-interruptions",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "StartInstances": {
                "privilege": "StartInstances",
                "description": "Grants permission to start a stopped instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "StopInstances": {
                "privilege": "StopInstances",
                "description": "Grants permission to stop an Amazon EBS-backed instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StopInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "TerminateInstances": {
                "privilege": "TerminateInstances",
                "description": "Grants permission to shut down one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UnmonitorInstances": {
                "privilege": "UnmonitorInstances",
                "description": "Grants permission to disable detailed monitoring for a running instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "internetGateway": {
        "resourceName": "internet-gateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:InternetGatewayID": {
                "condition": "ec2:InternetGatewayID",
                "description": "Filters access by the ID of an internet gateway",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateRouteTable": {
                "privilege": "AssociateRouteTable",
                "description": "Grants permission to associate a subnet or gateway with a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AttachInternetGateway": {
                "privilege": "AttachInternetGateway",
                "description": "Grants permission to attach an internet gateway to a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateInternetGateway": {
                "privilege": "CreateInternetGateway",
                "description": "Grants permission to create an internet gateway for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteInternetGateway": {
                "privilege": "DeleteInternetGateway",
                "description": "Grants permission to delete an internet gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachInternetGateway": {
                "privilege": "DetachInternetGateway",
                "description": "Grants permission to detach an internet gateway from a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "ipam": {
        "resourceName": "ipam",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateIpam": {
                "privilege": "CreateIpam",
                "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpam.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags",
                    "iam:CreateServiceLinkedRole"
                ],
                "required": true
            },
            "CreateIpamScope": {
                "privilege": "CreateIpamScope",
                "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM) scope, which is the highest-level container within IPAM",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamScope.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteIpam": {
                "privilege": "DeleteIpam",
                "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) and remove all monitored data associated with the IPAM including the historical data for CIDRs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpam.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyIpam": {
                "privilege": "ModifyIpam",
                "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpam.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "ipamPool": {
        "resourceName": "ipam-pool",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "GetIpamPoolAllocations": {
                "privilege": "GetIpamPoolAllocations",
                "description": "Grants permission to get a list of all the CIDR allocations in an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolAllocations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetIpamPoolCidrs": {
                "privilege": "GetIpamPoolCidrs",
                "description": "Grants permission to get the CIDRs provisioned to an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolCidrs.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetIpamResourceCidrs": {
                "privilege": "GetIpamResourceCidrs",
                "description": "Grants permission to get information about the resources in an Amazon VPC IP Address Manager (IPAM) scope",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamResourceCidrs.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetResourcePolicy": {
                "privilege": "GetResourcePolicy",
                "description": "Grants permission to describe an IAM policy that enables cross-account sharing",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AllocateIpamPoolCidr": {
                "privilege": "AllocateIpamPoolCidr",
                "description": "Grants permission to allocate a CIDR from an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateIpamPoolCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateVpcCidrBlock": {
                "privilege": "AssociateVpcCidrBlock",
                "description": "Grants permission to associate a CIDR block with a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateVpcCidrBlock.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateIpamPool": {
                "privilege": "CreateIpamPool",
                "description": "Grants permission to create an IP address pool for Amazon VPC IP Address Manager (IPAM), which is a collection of contiguous IP address CIDRs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamPool.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateVpc": {
                "privilege": "CreateVpc",
                "description": "Grants permission to create a VPC with a specified CIDR block",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpc.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteIpamPool": {
                "privilege": "DeleteIpamPool",
                "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamPool.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteResourcePolicy": {
                "privilege": "DeleteResourcePolicy",
                "description": "Grants permission to remove an IAM policy that enables cross-account sharing from a resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeprovisionIpamPoolCidr": {
                "privilege": "DeprovisionIpamPoolCidr",
                "description": "Grants permission to deprovision a CIDR provisioned from an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionIpamPoolCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyIpamPool": {
                "privilege": "ModifyIpamPool",
                "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamPool.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "MoveByoipCidrToIpam": {
                "privilege": "MoveByoipCidrToIpam",
                "description": "Grants permission to move a BYOIP IPv4 CIDR to Amazon VPC IP Address Manager (IPAM) from a public IPv4 pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MoveByoipCidrToIpam.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ProvisionIpamPoolCidr": {
                "privilege": "ProvisionIpamPoolCidr",
                "description": "Grants permission to provision a CIDR to an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionIpamPoolCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ProvisionPublicIpv4PoolCidr": {
                "privilege": "ProvisionPublicIpv4PoolCidr",
                "description": "Grants permission to provision a CIDR to a public IPv4 pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionPublicIpv4PoolCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "PutResourcePolicy": {
                "privilege": "PutResourcePolicy",
                "description": "Grants permission to attach an IAM policy that enables cross-account sharing to a resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ReleaseIpamPoolAllocation": {
                "privilege": "ReleaseIpamPoolAllocation",
                "description": "Grants permission to release an allocation within an Amazon VPC IP Address Manager (IPAM) pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "ipamScope": {
        "resourceName": "ipam-scope",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetIpamAddressHistory": {
                "privilege": "GetIpamAddressHistory",
                "description": "Grants permission to retrieve historical information about a CIDR within an Amazon VPC IP Address Manager (IPAM) scope",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamAddressHistory.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetIpamResourceCidrs": {
                "privilege": "GetIpamResourceCidrs",
                "description": "Grants permission to get information about the resources in an Amazon VPC IP Address Manager (IPAM) scope",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamResourceCidrs.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateIpamPool": {
                "privilege": "CreateIpamPool",
                "description": "Grants permission to create an IP address pool for Amazon VPC IP Address Manager (IPAM), which is a collection of contiguous IP address CIDRs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamPool.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateIpamScope": {
                "privilege": "CreateIpamScope",
                "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM) scope, which is the highest-level container within IPAM",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamScope.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteIpamScope": {
                "privilege": "DeleteIpamScope",
                "description": "Grants permission to delete the scope for an Amazon VPC IP Address Manager (IPAM)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamScope.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyIpamResourceCidr": {
                "privilege": "ModifyIpamResourceCidr",
                "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) resource CIDR",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamResourceCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyIpamScope": {
                "privilege": "ModifyIpamScope",
                "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) scope",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamScope.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "coipPool": {
        "resourceName": "coip-pool",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:coip-pool/${Ipv4PoolCoipId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetCoipPoolUsage": {
                "privilege": "GetCoipPoolUsage",
                "description": "Grants permission to describe the allocations from the specified customer-owned address pool",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCoipPoolUsage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateCoipCidr": {
                "privilege": "CreateCoipCidr",
                "description": "Grants permission to create a range of customer-owned IP (CoIP) addresses",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCoipCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteCoipCidr": {
                "privilege": "DeleteCoipCidr",
                "description": "Grants permission to delete a range of customer-owned IP (CoIP) addresses",
                "accessLevel": "Write",
                "apiDocumentationLink": "API_DeleteCoipCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteCoipPool": {
                "privilege": "DeleteCoipPool",
                "description": "Grants permission to delete a pool of customer-owned IP (CoIP) addresses",
                "accessLevel": "Write",
                "apiDocumentationLink": "API_DeleteCoipPool.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "ipv4poolEc2": {
        "resourceName": "ipv4pool-ec2",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AllocateAddress": {
                "privilege": "AllocateAddress",
                "description": "Grants permission to allocate an Elastic IP address (EIP) to your account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateAddress.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeletePublicIpv4Pool": {
                "privilege": "DeletePublicIpv4Pool",
                "description": "Grants permission to delete a public IPv4 address pool for public IPv4 CIDRs that you own and brought to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePublicIpv4Pool.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeprovisionPublicIpv4PoolCidr": {
                "privilege": "DeprovisionPublicIpv4PoolCidr",
                "description": "Grants permission to deprovision a CIDR from a public IPv4 pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionPublicIpv4PoolCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateRouteTable": {
                "privilege": "DisassociateRouteTable",
                "description": "Grants permission to disassociate a subnet from a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ProvisionPublicIpv4PoolCidr": {
                "privilege": "ProvisionPublicIpv4PoolCidr",
                "description": "Grants permission to provision a CIDR to a public IPv4 pool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionPublicIpv4PoolCidr.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ReplaceRouteTableAssociation": {
                "privilege": "ReplaceRouteTableAssociation",
                "description": "Grants permission to change the route table that is associated with a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "ipv6poolEc2": {
        "resourceName": "ipv6pool-ec2",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateVpcCidrBlock": {
                "privilege": "AssociateVpcCidrBlock",
                "description": "Grants permission to associate a CIDR block with a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateVpcCidrBlock.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpc": {
                "privilege": "CreateVpc",
                "description": "Grants permission to create a VPC with a specified CIDR block",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpc.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateRouteTable": {
                "privilege": "DisassociateRouteTable",
                "description": "Grants permission to disassociate a subnet from a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ReplaceRouteTableAssociation": {
                "privilege": "ReplaceRouteTableAssociation",
                "description": "Grants permission to change the route table that is associated with a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "keyPair": {
        "resourceName": "key-pair",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:KeyPairName": {
                "condition": "ec2:KeyPairName",
                "description": "Filters access by the name of a key pair",
                "type": "String"
            },
            "ec2:KeyPairType": {
                "condition": "ec2:KeyPairType",
                "description": "Filters access by the type of a key pair",
                "type": "String"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateKeyPair": {
                "privilege": "CreateKeyPair",
                "description": "Grants permission to create a 2048-bit RSA key pair",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteKeyPair": {
                "privilege": "DeleteKeyPair",
                "description": "Grants permission to delete a key pair by removing the public key from Amazon EC2",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteKeyPair.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ImportKeyPair": {
                "privilege": "ImportKeyPair",
                "description": "Grants permission to import a public key from an RSA key pair that was created with a third-party tool",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunScheduledInstances": {
                "privilege": "RunScheduledInstances",
                "description": "Grants permission to launch one or more Scheduled Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "launchTemplate": {
        "resourceName": "launch-template",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateLaunchTemplate": {
                "privilege": "CreateLaunchTemplate",
                "description": "Grants permission to create a launch template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateLaunchTemplateVersion": {
                "privilege": "CreateLaunchTemplateVersion",
                "description": "Grants permission to create a new version of a launch template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteLaunchTemplate": {
                "privilege": "DeleteLaunchTemplate",
                "description": "Grants permission to delete a launch template and its associated versions",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplate.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteLaunchTemplateVersions": {
                "privilege": "DeleteLaunchTemplateVersions",
                "description": "Grants permission to delete one or more versions of a launch template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplateVersions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableFastLaunch": {
                "privilege": "EnableFastLaunch",
                "description": "Grants permission to enable faster launching for Windows AMIs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastLaunch.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyLaunchTemplate": {
                "privilege": "ModifyLaunchTemplate",
                "description": "Grants permission to modify a launch template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLaunchTemplate.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifySpotFleetRequest": {
                "privilege": "ModifySpotFleetRequest",
                "description": "Grants permission to modify a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "licenseConfiguration": {
        "resourceName": "license-configuration",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration/${LicenseConfigurationId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "StartInstances": {
                "privilege": "StartInstances",
                "description": "Grants permission to start a stopped instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "localGateway": {
        "resourceName": "local-gateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateLocalGatewayRouteTable": {
                "privilege": "CreateLocalGatewayRouteTable",
                "description": "Grants permission to create a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "API_CreateLocalGatewayRouteTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "localGatewayRouteTableVirtualInterfaceGroupAssociation": {
        "resourceName": "local-gateway-route-table-virtual-interface-group-association",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
                "privilege": "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
                "description": "Grants permission to create a local gateway route table virtual interface group association",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
                "privilege": "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
                "description": "Grants permission to delete a local gateway route table virtual interface group association",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "localGatewayRouteTableVpcAssociation": {
        "resourceName": "local-gateway-route-table-vpc-association",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateLocalGatewayRouteTableVpcAssociation": {
                "privilege": "CreateLocalGatewayRouteTableVpcAssociation",
                "description": "Grants permission to associate a VPC with a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVpcAssociation.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteLocalGatewayRouteTableVpcAssociation": {
                "privilege": "DeleteLocalGatewayRouteTableVpcAssociation",
                "description": "Grants permission to delete an association between a VPC and local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRouteTableVpcAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "localGatewayRouteTable": {
        "resourceName": "local-gateway-route-table",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "SearchLocalGatewayRoutes": {
                "privilege": "SearchLocalGatewayRoutes",
                "description": "Grants permission to search for routes in a local gateway route table",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchLocalGatewayRoutes.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "CreateCoipPool": {
                "privilege": "CreateCoipPool",
                "description": "Grants permission to create a pool of customer-owned IP (CoIP) addresses",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCoipPool.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateLocalGatewayRoute": {
                "privilege": "CreateLocalGatewayRoute",
                "description": "Grants permission to create a static route for a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateLocalGatewayRouteTable": {
                "privilege": "CreateLocalGatewayRouteTable",
                "description": "Grants permission to create a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "API_CreateLocalGatewayRouteTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateLocalGatewayRouteTablePermission": {
                "privilege": "CreateLocalGatewayRouteTablePermission",
                "description": "Grants permission to allow a service to access a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
                "privilege": "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
                "description": "Grants permission to create a local gateway route table virtual interface group association",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateLocalGatewayRouteTableVpcAssociation": {
                "privilege": "CreateLocalGatewayRouteTableVpcAssociation",
                "description": "Grants permission to associate a VPC with a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVpcAssociation.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteLocalGatewayRoute": {
                "privilege": "DeleteLocalGatewayRoute",
                "description": "Grants permission to delete a route from a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteLocalGatewayRouteTable": {
                "privilege": "DeleteLocalGatewayRouteTable",
                "description": "Grants permission to delete a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "API_DeleteLocalGatewayRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteLocalGatewayRouteTablePermission": {
                "privilege": "DeleteLocalGatewayRouteTablePermission",
                "description": "Grants permission to deny a service from accessing a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyLocalGatewayRoute": {
                "privilege": "ModifyLocalGatewayRoute",
                "description": "Grants permission to modify a local gateway route",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLocalGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "localGatewayVirtualInterfaceGroup": {
        "resourceName": "local-gateway-virtual-interface-group",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateLocalGatewayRoute": {
                "privilege": "CreateLocalGatewayRoute",
                "description": "Grants permission to create a static route for a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
                "privilege": "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
                "description": "Grants permission to create a local gateway route table virtual interface group association",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyLocalGatewayRoute": {
                "privilege": "ModifyLocalGatewayRoute",
                "description": "Grants permission to modify a local gateway route",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLocalGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "localGatewayVirtualInterface": {
        "resourceName": "local-gateway-virtual-interface",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "natgateway": {
        "resourceName": "natgateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateNatGateway": {
                "privilege": "CreateNatGateway",
                "description": "Grants permission to create a NAT gateway in a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNatGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteNatGateway": {
                "privilege": "DeleteNatGateway",
                "description": "Grants permission to delete a NAT gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNatGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "networkAcl": {
        "resourceName": "network-acl",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:NetworkAclID": {
                "condition": "ec2:NetworkAclID",
                "description": "Filters access by the ID of a network access control list (ACL)",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:Vpc": {
                "condition": "ec2:Vpc",
                "description": "Filters access by the ARN of the VPC",
                "type": "ARN"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateNetworkAcl": {
                "privilege": "CreateNetworkAcl",
                "description": "Grants permission to create a network ACL in a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateNetworkAclEntry": {
                "privilege": "CreateNetworkAclEntry",
                "description": "Grants permission to create a numbered entry (a rule) in a network ACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteNetworkAcl": {
                "privilege": "DeleteNetworkAcl",
                "description": "Grants permission to delete a network ACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteNetworkAclEntry": {
                "privilege": "DeleteNetworkAclEntry",
                "description": "Grants permission to delete an inbound or outbound entry (rule) from a network ACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplaceNetworkAclAssociation": {
                "privilege": "ReplaceNetworkAclAssociation",
                "description": "Grants permission to change which network ACL a subnet is associated with",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplaceNetworkAclEntry": {
                "privilege": "ReplaceNetworkAclEntry",
                "description": "Grants permission to replace an entry (rule) in a network ACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "networkInsightsAccessScopeAnalysis": {
        "resourceName": "network-insights-access-scope-analysis",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "DeleteNetworkInsightsAccessScopeAnalysis": {
                "privilege": "DeleteNetworkInsightsAccessScopeAnalysis",
                "description": "Grants permission to delete a Network Access Scope analysis",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScopeAnalysis.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "StartNetworkInsightsAccessScopeAnalysis": {
                "privilege": "StartNetworkInsightsAccessScopeAnalysis",
                "description": "Grants permission to start a Network Access Scope analysis",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAccessScopeAnalysis.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "networkInsightsAccessScope": {
        "resourceName": "network-insights-access-scope",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateNetworkInsightsAccessScope": {
                "privilege": "CreateNetworkInsightsAccessScope",
                "description": "Grants permission to create a Network Access Scope",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsAccessScope.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreatePublicIpv4Pool": {
                "privilege": "CreatePublicIpv4Pool",
                "description": "Grants permission to create a public IPv4 address pool for public IPv4 CIDRs that you own and bring to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePublicIpv4Pool.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteNetworkInsightsAccessScope": {
                "privilege": "DeleteNetworkInsightsAccessScope",
                "description": "Grants permission to delete a Network Access Scope",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScope.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "StartNetworkInsightsAccessScopeAnalysis": {
                "privilege": "StartNetworkInsightsAccessScopeAnalysis",
                "description": "Grants permission to start a Network Access Scope analysis",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAccessScopeAnalysis.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "networkInsightsAnalysis": {
        "resourceName": "network-insights-analysis",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "DeleteNetworkInsightsAnalysis": {
                "privilege": "DeleteNetworkInsightsAnalysis",
                "description": "Grants permission to delete a network insights analysis",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAnalysis.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "StartNetworkInsightsAnalysis": {
                "privilege": "StartNetworkInsightsAnalysis",
                "description": "Grants permission to start analyzing a specified path",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAnalysis.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "networkInsightsPath": {
        "resourceName": "network-insights-path",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteNetworkInsightsPath": {
                "privilege": "DeleteNetworkInsightsPath",
                "description": "Grants permission to delete a network insights path",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsPath.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "StartNetworkInsightsAnalysis": {
                "privilege": "StartNetworkInsightsAnalysis",
                "description": "Grants permission to start analyzing a specified path",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAnalysis.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "networkInterface": {
        "resourceName": "network-interface",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:AssociatePublicIpAddress": {
                "condition": "ec2:AssociatePublicIpAddress",
                "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                "type": "Bool"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AuthorizedService": {
                "condition": "ec2:AuthorizedService",
                "description": "Filters access by the AWS service that has permission to use a resource",
                "type": "String"
            },
            "ec2:AuthorizedUser": {
                "condition": "ec2:AuthorizedUser",
                "description": "Filters access by an IAM principal that has permission to use a resource",
                "type": "String"
            },
            "ec2:AvailabilityZone": {
                "condition": "ec2:AvailabilityZone",
                "description": "Filters access by the name of an Availability Zone in an AWS Region",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:NetworkInterfaceID": {
                "condition": "ec2:NetworkInterfaceID",
                "description": "Filters access by the ID of an elastic network interface",
                "type": "String"
            },
            "ec2:Permission": {
                "condition": "ec2:Permission",
                "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:Subnet": {
                "condition": "ec2:Subnet",
                "description": "Filters access by the ARN of the subnet",
                "type": "ARN"
            },
            "ec2:Vpc": {
                "condition": "ec2:Vpc",
                "description": "Filters access by the ARN of the VPC",
                "type": "ARN"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssignIpv6Addresses": {
                "privilege": "AssignIpv6Addresses",
                "description": "Grants permission to assign one or more IPv6 addresses to a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignIpv6Addresses.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssignPrivateIpAddresses": {
                "privilege": "AssignPrivateIpAddresses",
                "description": "Grants permission to assign one or more secondary private IP addresses to a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignPrivateIpAddresses.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateAddress": {
                "privilege": "AssociateAddress",
                "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateAddress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AttachNetworkInterface": {
                "privilege": "AttachNetworkInterface",
                "description": "Grants permission to attach a network interface to an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachNetworkInterface.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateFlowLogs": {
                "privilege": "CreateFlowLogs",
                "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateNetworkInterface": {
                "privilege": "CreateNetworkInterface",
                "description": "Grants permission to create a network interface in a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateTrafficMirrorSession": {
                "privilege": "CreateTrafficMirrorSession",
                "description": "Grants permission to create a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTrafficMirrorTarget": {
                "privilege": "CreateTrafficMirrorTarget",
                "description": "Grants permission to create a traffic mirror target",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorTarget.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteNetworkInterface": {
                "privilege": "DeleteNetworkInterface",
                "description": "Grants permission to delete a detached network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterface.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeregisterTransitGatewayMulticastGroupMembers": {
                "privilege": "DeregisterTransitGatewayMulticastGroupMembers",
                "description": "Grants permission to deregister one or more network interface members from a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupMembers.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeregisterTransitGatewayMulticastGroupSources": {
                "privilege": "DeregisterTransitGatewayMulticastGroupSources",
                "description": "Grants permission to deregister one or more network interface sources from a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupSources.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DetachNetworkInterface": {
                "privilege": "DetachNetworkInterface",
                "description": "Grants permission to detach a network interface from an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachNetworkInterface.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateAddress": {
                "privilege": "DisassociateAddress",
                "description": "Grants permission to disassociate an Elastic IP address from an instance or network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateAddress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyLocalGatewayRoute": {
                "privilege": "ModifyLocalGatewayRoute",
                "description": "Grants permission to modify a local gateway route",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLocalGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyNetworkInterfaceAttribute": {
                "privilege": "ModifyNetworkInterfaceAttribute",
                "description": "Grants permission to modify an attribute of a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyNetworkInterfaceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RegisterTransitGatewayMulticastGroupMembers": {
                "privilege": "RegisterTransitGatewayMulticastGroupMembers",
                "description": "Grants permission to register one or more network interfaces as a member of a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupMembers.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RegisterTransitGatewayMulticastGroupSources": {
                "privilege": "RegisterTransitGatewayMulticastGroupSources",
                "description": "Grants permission to register one or more network interfaces as a source of a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupSources.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ResetNetworkInterfaceAttribute": {
                "privilege": "ResetNetworkInterfaceAttribute",
                "description": "Grants permission to reset an attribute of a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetNetworkInterfaceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunScheduledInstances": {
                "privilege": "RunScheduledInstances",
                "description": "Grants permission to launch one or more Scheduled Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UnassignIpv6Addresses": {
                "privilege": "UnassignIpv6Addresses",
                "description": "Grants permission to unassign one or more IPv6 addresses from a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignIpv6Addresses.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UnassignPrivateIpAddresses": {
                "privilege": "UnassignPrivateIpAddresses",
                "description": "Grants permission to unassign one or more secondary private IP addresses from a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignPrivateIpAddresses.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "CreateNetworkInterfacePermission": {
                "privilege": "CreateNetworkInterfacePermission",
                "description": "Grants permission to create a permission for an AWS-authorized user to perform certain operations on a network interface",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterfacePermission.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteNetworkInterfacePermission": {
                "privilege": "DeleteNetworkInterfacePermission",
                "description": "Grants permission to delete a permission that is associated with a network interface",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterfacePermission.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "placementGroup": {
        "resourceName": "placement-group",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:PlacementGroupName": {
                "condition": "ec2:PlacementGroupName",
                "description": "Filters access by the name of a placement group",
                "type": "String"
            },
            "ec2:PlacementGroupStrategy": {
                "condition": "ec2:PlacementGroupStrategy",
                "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreatePlacementGroup": {
                "privilege": "CreatePlacementGroup",
                "description": "Grants permission to create a placement group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePlacementGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeletePlacementGroup": {
                "privilege": "DeletePlacementGroup",
                "description": "Grants permission to delete a placement group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePlacementGroup.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyInstancePlacement": {
                "privilege": "ModifyInstancePlacement",
                "description": "Grants permission to modify the placement attributes for an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstancePlacement.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunScheduledInstances": {
                "privilege": "RunScheduledInstances",
                "description": "Grants permission to launch one or more Scheduled Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "prefixList": {
        "resourceName": "prefix-list",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetManagedPrefixListAssociations": {
                "privilege": "GetManagedPrefixListAssociations",
                "description": "Grants permission to get information about the resources that are associated with the specified managed prefix list",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListAssociations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetManagedPrefixListEntries": {
                "privilege": "GetManagedPrefixListEntries",
                "description": "Grants permission to get information about the entries for a specified managed prefix list",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListEntries.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateManagedPrefixList": {
                "privilege": "CreateManagedPrefixList",
                "description": "Grants permission to create a managed prefix list",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateManagedPrefixList.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateTransitGatewayPrefixListReference": {
                "privilege": "CreateTransitGatewayPrefixListReference",
                "description": "Grants permission to create a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteManagedPrefixList": {
                "privilege": "DeleteManagedPrefixList",
                "description": "Grants permission to delete a managed prefix list",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteManagedPrefixList.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayPrefixListReference": {
                "privilege": "DeleteTransitGatewayPrefixListReference",
                "description": "Grants permission to delete a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyManagedPrefixList": {
                "privilege": "ModifyManagedPrefixList",
                "description": "Grants permission to modify a managed prefix list",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyManagedPrefixList.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifySecurityGroupRules": {
                "privilege": "ModifySecurityGroupRules",
                "description": "Grants permission to modify the rules of a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySecurityGroupRules.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyTransitGatewayPrefixListReference": {
                "privilege": "ModifyTransitGatewayPrefixListReference",
                "description": "Grants permission to modify a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RestoreManagedPrefixListVersion": {
                "privilege": "RestoreManagedPrefixListVersion",
                "description": "Grants permission to restore the entries from a previous version of a managed prefix list to a new version of the prefix list",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreManagedPrefixListVersion.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "replaceRootVolumeTask": {
        "resourceName": "replace-root-volume-task",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateReplaceRootVolumeTask": {
                "privilege": "CreateReplaceRootVolumeTask",
                "description": "Grants permission to create a root volume replacement task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReplaceRootVolumeTask.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "reservedInstances": {
        "resourceName": "reserved-instances",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AvailabilityZone": {
                "condition": "ec2:AvailabilityZone",
                "description": "Filters access by the name of an Availability Zone in an AWS Region",
                "type": "String"
            },
            "ec2:InstanceType": {
                "condition": "ec2:InstanceType",
                "description": "Filters access by the type of instance",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ReservedInstancesOfferingType": {
                "condition": "ec2:ReservedInstancesOfferingType",
                "description": "Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:Tenancy": {
                "condition": "ec2:Tenancy",
                "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "ModifyReservedInstances": {
                "privilege": "ModifyReservedInstances",
                "description": "Grants permission to modify attributes of one or more Reserved Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyReservedInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "group": {
        "resourceName": "group",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "role": {
        "resourceName": "role",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateEnclaveCertificateIamRole": {
                "privilege": "AssociateEnclaveCertificateIamRole",
                "description": "Grants permission to associate an ACM certificate with an IAM role to be used in an EC2 Enclave",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateEnclaveCertificateIamRole.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateEnclaveCertificateIamRole": {
                "privilege": "DisassociateEnclaveCertificateIamRole",
                "description": "Grants permission to disassociate an ACM certificate from a IAM role",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateEnclaveCertificateIamRole.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "routeTable": {
        "resourceName": "route-table",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:RouteTableID": {
                "condition": "ec2:RouteTableID",
                "description": "Filters access by the ID of a route table",
                "type": "String"
            },
            "ec2:Vpc": {
                "condition": "ec2:Vpc",
                "description": "Filters access by the ARN of the VPC",
                "type": "ARN"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateRouteTable": {
                "privilege": "AssociateRouteTable",
                "description": "Grants permission to associate a subnet or gateway with a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateRoute": {
                "privilege": "CreateRoute",
                "description": "Grants permission to create a route in a VPC route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateRouteTable": {
                "privilege": "CreateRouteTable",
                "description": "Grants permission to create a route table for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateVpcEndpoint": {
                "privilege": "CreateVpcEndpoint",
                "description": "Grants permission to create a VPC endpoint for an AWS service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteRoute": {
                "privilege": "DeleteRoute",
                "description": "Grants permission to delete a route from a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteRouteTable": {
                "privilege": "DeleteRouteTable",
                "description": "Grants permission to delete a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableVgwRoutePropagation": {
                "privilege": "DisableVgwRoutePropagation",
                "description": "Grants permission to disable a virtual private gateway from propagating routes to a specified route table of a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVgwRoutePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateRouteTable": {
                "privilege": "DisassociateRouteTable",
                "description": "Grants permission to disassociate a subnet from a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "EnableVgwRoutePropagation": {
                "privilege": "EnableVgwRoutePropagation",
                "description": "Grants permission to enable a virtual private gateway to propagate routes to a VPC route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVgwRoutePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpcEndpoint": {
                "privilege": "ModifyVpcEndpoint",
                "description": "Grants permission to modify an attribute of a VPC endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ReplaceRoute": {
                "privilege": "ReplaceRoute",
                "description": "Grants permission to replace a route within a route table in a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplaceRouteTableAssociation": {
                "privilege": "ReplaceRouteTableAssociation",
                "description": "Grants permission to change the route table that is associated with a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "securityGroup": {
        "resourceName": "security-group",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:SecurityGroupID": {
                "condition": "ec2:SecurityGroupID",
                "description": "Filters access by the ID of a security group",
                "type": "String"
            },
            "ec2:Vpc": {
                "condition": "ec2:Vpc",
                "description": "Filters access by the ARN of the VPC",
                "type": "ARN"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "ApplySecurityGroupsToClientVpnTargetNetwork": {
                "privilege": "ApplySecurityGroupsToClientVpnTargetNetwork",
                "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ApplySecurityGroupsToClientVpnTargetNetwork.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AttachClassicLinkVpc": {
                "privilege": "AttachClassicLinkVpc",
                "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachClassicLinkVpc.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AuthorizeSecurityGroupEgress": {
                "privilege": "AuthorizeSecurityGroupEgress",
                "description": "Grants permission to add one or more outbound rules to a VPC security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AuthorizeSecurityGroupIngress": {
                "privilege": "AuthorizeSecurityGroupIngress",
                "description": "Grants permission to add one or more inbound rules to a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateClientVpnEndpoint": {
                "privilege": "CreateClientVpnEndpoint",
                "description": "Grants permission to create a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateNetworkInterface": {
                "privilege": "CreateNetworkInterface",
                "description": "Grants permission to create a network interface in a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateSecurityGroup": {
                "privilege": "CreateSecurityGroup",
                "description": "Grants permission to create a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpcEndpoint": {
                "privilege": "CreateVpcEndpoint",
                "description": "Grants permission to create a VPC endpoint for an AWS service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteSecurityGroup": {
                "privilege": "DeleteSecurityGroup",
                "description": "Grants permission to delete a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportInstance": {
                "privilege": "ImportInstance",
                "description": "Grants permission to create an import instance task using metadata from a disk image",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyClientVpnEndpoint": {
                "privilege": "ModifyClientVpnEndpoint",
                "description": "Grants permission to modify a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyClientVpnEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyInstanceAttribute": {
                "privilege": "ModifyInstanceAttribute",
                "description": "Grants permission to modify an attribute of an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyNetworkInterfaceAttribute": {
                "privilege": "ModifyNetworkInterfaceAttribute",
                "description": "Grants permission to modify an attribute of a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyNetworkInterfaceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifySecurityGroupRules": {
                "privilege": "ModifySecurityGroupRules",
                "description": "Grants permission to modify the rules of a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySecurityGroupRules.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyVpcEndpoint": {
                "privilege": "ModifyVpcEndpoint",
                "description": "Grants permission to modify an attribute of a VPC endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RevokeSecurityGroupEgress": {
                "privilege": "RevokeSecurityGroupEgress",
                "description": "Grants permission to remove one or more outbound rules from a VPC security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RevokeSecurityGroupIngress": {
                "privilege": "RevokeSecurityGroupIngress",
                "description": "Grants permission to remove one or more inbound rules from a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunScheduledInstances": {
                "privilege": "RunScheduledInstances",
                "description": "Grants permission to launch one or more Scheduled Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UpdateSecurityGroupRuleDescriptionsEgress": {
                "privilege": "UpdateSecurityGroupRuleDescriptionsEgress",
                "description": "Grants permission to update descriptions for one or more outbound rules in a VPC security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsEgress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateSecurityGroupRuleDescriptionsIngress": {
                "privilege": "UpdateSecurityGroupRuleDescriptionsIngress",
                "description": "Grants permission to update descriptions for one or more inbound rules in a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsIngress.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "securityGroupRule": {
        "resourceName": "security-group-rule",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AuthorizeSecurityGroupEgress": {
                "privilege": "AuthorizeSecurityGroupEgress",
                "description": "Grants permission to add one or more outbound rules to a VPC security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AuthorizeSecurityGroupIngress": {
                "privilege": "AuthorizeSecurityGroupIngress",
                "description": "Grants permission to add one or more inbound rules to a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifySecurityGroupRules": {
                "privilege": "ModifySecurityGroupRules",
                "description": "Grants permission to modify the rules of a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySecurityGroupRules.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "snapshot": {
        "resourceName": "snapshot",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Add/group": {
                "condition": "ec2:Add/group",
                "description": "Filters access by the group being added to a snapshot",
                "type": "String"
            },
            "ec2:Add/userId": {
                "condition": "ec2:Add/userId",
                "description": "Filters access by the account id being added to a snapshot",
                "type": "String"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AvailabilityZone": {
                "condition": "ec2:AvailabilityZone",
                "description": "Filters access by the name of an Availability Zone in an AWS Region",
                "type": "String"
            },
            "ec2:Encrypted": {
                "condition": "ec2:Encrypted",
                "description": "Filters access by whether the EBS volume is encrypted",
                "type": "Bool"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:OutpostArn": {
                "condition": "ec2:OutpostArn",
                "description": "Filters access by the ARN of the Outpost",
                "type": "ARN"
            },
            "ec2:Owner": {
                "condition": "ec2:Owner",
                "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                "type": "String"
            },
            "ec2:ParentVolume": {
                "condition": "ec2:ParentVolume",
                "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:Remove/group": {
                "condition": "ec2:Remove/group",
                "description": "Filters access by the group being removed from a snapshot",
                "type": "String"
            },
            "ec2:Remove/userId": {
                "condition": "ec2:Remove/userId",
                "description": "Filters access by the account id being removed from a snapshot",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:SnapshotID": {
                "condition": "ec2:SnapshotID",
                "description": "Filters access by the ID of a snapshot",
                "type": "String"
            },
            "ec2:SnapshotTime": {
                "condition": "ec2:SnapshotTime",
                "description": "Filters access by the initiation time of a snapshot",
                "type": "String"
            },
            "ec2:SourceOutpostArn": {
                "condition": "ec2:SourceOutpostArn",
                "description": "Filters access by the ARN of the Outpost from which the request originated",
                "type": "ARN"
            },
            "ec2:VolumeSize": {
                "condition": "ec2:VolumeSize",
                "description": "Filters access by the size of the volume, in GiB",
                "type": "Numeric"
            }
        },
        "listPrivileges": {
            "DescribeSnapshotAttribute": {
                "privilege": "DescribeSnapshotAttribute",
                "description": "Grants permission to describe an attribute of a snapshot",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshotAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ListSnapshotsInRecycleBin": {
                "privilege": "ListSnapshotsInRecycleBin",
                "description": "Grants permission to list the Amazon EBS snapshots that are currently in the Recycle Bin",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ListSnapshotsInRecycleBin.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "CopySnapshot": {
                "privilege": "CopySnapshot",
                "description": "Grants permission to copy a point-in-time snapshot of an EBS volume and store it in Amazon S3. Resource-level permissions specified for this action apply to the new snapshot only. They do not apply to the source snapshot",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopySnapshot.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateImage": {
                "privilege": "CreateImage",
                "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateReplaceRootVolumeTask": {
                "privilege": "CreateReplaceRootVolumeTask",
                "description": "Grants permission to create a root volume replacement task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReplaceRootVolumeTask.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateSnapshot": {
                "privilege": "CreateSnapshot",
                "description": "Grants permission to create a snapshot of an EBS volume and store it in Amazon S3",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshot.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateSnapshots": {
                "privilege": "CreateSnapshots",
                "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteSnapshot": {
                "privilege": "DeleteSnapshot",
                "description": "Grants permission to delete a snapshot of an EBS volume",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSnapshot.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableFastSnapshotRestores": {
                "privilege": "DisableFastSnapshotRestores",
                "description": "Grants permission to disable fast snapshot restores for one or more snapshots in specified Availability Zones",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastSnapshotRestores.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableFastSnapshotRestores": {
                "privilege": "EnableFastSnapshotRestores",
                "description": "Grants permission to enable fast snapshot restores for one or more snapshots in specified Availability Zones",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastSnapshotRestores.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportImage": {
                "privilege": "ImportImage",
                "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ImportSnapshot": {
                "privilege": "ImportSnapshot",
                "description": "Grants permission to import a disk into an EBS snapshot",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportSnapshot.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifySnapshotTier": {
                "privilege": "ModifySnapshotTier",
                "description": "Grants permission to archive Amazon EBS snapshots",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotTier.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RegisterImage": {
                "privilege": "RegisterImage",
                "description": "Grants permission to register an Amazon Machine Image (AMI)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterImage.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RestoreSnapshotFromRecycleBin": {
                "privilege": "RestoreSnapshotFromRecycleBin",
                "description": "Grants permission to restore an Amazon EBS snapshot from the Recycle Bin",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotFromRecycleBin.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RestoreSnapshotTier": {
                "privilege": "RestoreSnapshotTier",
                "description": "Grants permission to restore an archived Amazon EBS snapshot for use temporarily or permanently, or modify the restore period or restore type for a snapshot that was previously temporarily restored",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotTier.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunScheduledInstances": {
                "privilege": "RunScheduledInstances",
                "description": "Grants permission to launch one or more Scheduled Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {
            "ModifySnapshotAttribute": {
                "privilege": "ModifySnapshotAttribute",
                "description": "Grants permission to add or remove permission settings for a snapshot",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ResetSnapshotAttribute": {
                "privilege": "ResetSnapshotAttribute",
                "description": "Grants permission to reset permission settings for a snapshot",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetSnapshotAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "spotFleetRequest": {
        "resourceName": "spot-fleet-request",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeSpotFleetInstances": {
                "privilege": "DescribeSpotFleetInstances",
                "description": "Grants permission to describe the running instances for a Spot Fleet",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DescribeSpotFleetRequestHistory": {
                "privilege": "DescribeSpotFleetRequestHistory",
                "description": "Grants permission to describe the events for a Spot Fleet request during a specified time",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetRequestHistory.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "CancelSpotFleetRequests": {
                "privilege": "CancelSpotFleetRequests",
                "description": "Grants permission to cancel one or more Spot Fleet requests",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifySpotFleetRequest": {
                "privilege": "ModifySpotFleetRequest",
                "description": "Grants permission to modify a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "spotInstancesRequest": {
        "resourceName": "spot-instances-request",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CancelSpotInstanceRequests": {
                "privilege": "CancelSpotInstanceRequests",
                "description": "Grants permission to cancel one or more Spot Instance requests",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotInstanceRequests.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "subnetCidrReservation": {
        "resourceName": "subnet-cidr-reservation",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "subnet": {
        "resourceName": "subnet",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AvailabilityZone": {
                "condition": "ec2:AvailabilityZone",
                "description": "Filters access by the name of an Availability Zone in an AWS Region",
                "type": "String"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:SubnetID": {
                "condition": "ec2:SubnetID",
                "description": "Filters access by the ID of a subnet",
                "type": "String"
            },
            "ec2:Vpc": {
                "condition": "ec2:Vpc",
                "description": "Filters access by the ARN of the VPC",
                "type": "ARN"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateClientVpnTargetNetwork": {
                "privilege": "AssociateClientVpnTargetNetwork",
                "description": "Grants permission to associate a target network with a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateClientVpnTargetNetwork.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateRouteTable": {
                "privilege": "AssociateRouteTable",
                "description": "Grants permission to associate a subnet or gateway with a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AssociateSubnetCidrBlock": {
                "privilege": "AssociateSubnetCidrBlock",
                "description": "Grants permission to associate a CIDR block with a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateSubnetCidrBlock.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateTransitGatewayMulticastDomain": {
                "privilege": "AssociateTransitGatewayMulticastDomain",
                "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateClientVpnRoute": {
                "privilege": "CreateClientVpnRoute",
                "description": "Grants permission to add a network route to a Client VPN endpoint's route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateFlowLogs": {
                "privilege": "CreateFlowLogs",
                "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateNatGateway": {
                "privilege": "CreateNatGateway",
                "description": "Grants permission to create a NAT gateway in a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNatGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateNetworkInterface": {
                "privilege": "CreateNetworkInterface",
                "description": "Grants permission to create a network interface in a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateSubnet": {
                "privilege": "CreateSubnet",
                "description": "Grants permission to create a subnet in a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayVpcAttachment": {
                "privilege": "CreateTransitGatewayVpcAttachment",
                "description": "Grants permission to attach a VPC to a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpcEndpoint": {
                "privilege": "CreateVpcEndpoint",
                "description": "Grants permission to create a VPC endpoint for an AWS service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteClientVpnRoute": {
                "privilege": "DeleteClientVpnRoute",
                "description": "Grants permission to delete a route from a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteSubnet": {
                "privilege": "DeleteSubnet",
                "description": "Grants permission to delete a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSubnet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateRouteTable": {
                "privilege": "DisassociateRouteTable",
                "description": "Grants permission to disassociate a subnet from a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateSubnetCidrBlock": {
                "privilege": "DisassociateSubnetCidrBlock",
                "description": "Grants permission to disassociate a CIDR block from a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateSubnetCidrBlock.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateTransitGatewayMulticastDomain": {
                "privilege": "DisassociateTransitGatewayMulticastDomain",
                "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportInstance": {
                "privilege": "ImportInstance",
                "description": "Grants permission to create an import instance task using metadata from a disk image",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyFleet": {
                "privilege": "ModifyFleet",
                "description": "Grants permission to modify an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifySpotFleetRequest": {
                "privilege": "ModifySpotFleetRequest",
                "description": "Grants permission to modify a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifySubnetAttribute": {
                "privilege": "ModifySubnetAttribute",
                "description": "Grants permission to modify an attribute of a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySubnetAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTransitGatewayVpcAttachment": {
                "privilege": "ModifyTransitGatewayVpcAttachment",
                "description": "Grants permission to modify a VPC attachment on a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyVpcEndpoint": {
                "privilege": "ModifyVpcEndpoint",
                "description": "Grants permission to modify an attribute of a VPC endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ReplaceNetworkAclAssociation": {
                "privilege": "ReplaceNetworkAclAssociation",
                "description": "Grants permission to change which network ACL a subnet is associated with",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplaceRouteTableAssociation": {
                "privilege": "ReplaceRouteTableAssociation",
                "description": "Grants permission to change the route table that is associated with a subnet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotFleet": {
                "privilege": "RequestSpotFleet",
                "description": "Grants permission to create a Spot Fleet request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RequestSpotInstances": {
                "privilege": "RequestSpotInstances",
                "description": "Grants permission to create a Spot Instance request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RunScheduledInstances": {
                "privilege": "RunScheduledInstances",
                "description": "Grants permission to launch one or more Scheduled Instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "trafficMirrorFilter": {
        "resourceName": "traffic-mirror-filter",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateTrafficMirrorFilter": {
                "privilege": "CreateTrafficMirrorFilter",
                "description": "Grants permission to create a traffic mirror filter",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateTrafficMirrorFilterRule": {
                "privilege": "CreateTrafficMirrorFilterRule",
                "description": "Grants permission to create a traffic mirror filter rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTrafficMirrorSession": {
                "privilege": "CreateTrafficMirrorSession",
                "description": "Grants permission to create a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTrafficMirrorFilter": {
                "privilege": "DeleteTrafficMirrorFilter",
                "description": "Grants permission to delete a traffic mirror filter",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilter.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTrafficMirrorFilterRule": {
                "privilege": "DeleteTrafficMirrorFilterRule",
                "description": "Grants permission to delete a traffic mirror filter rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilterRule.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTrafficMirrorFilterNetworkServices": {
                "privilege": "ModifyTrafficMirrorFilterNetworkServices",
                "description": "Grants permission to allow or restrict mirroring network services",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTrafficMirrorFilterRule": {
                "privilege": "ModifyTrafficMirrorFilterRule",
                "description": "Grants permission to modify a traffic mirror rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterRule.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTrafficMirrorSession": {
                "privilege": "ModifyTrafficMirrorSession",
                "description": "Grants permission to modify a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorSession.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "trafficMirrorFilterRule": {
        "resourceName": "traffic-mirror-filter-rule",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
        "resourceConditions": {
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "DeleteTrafficMirrorFilterRule": {
                "privilege": "DeleteTrafficMirrorFilterRule",
                "description": "Grants permission to delete a traffic mirror filter rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilterRule.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTrafficMirrorFilterRule": {
                "privilege": "ModifyTrafficMirrorFilterRule",
                "description": "Grants permission to modify a traffic mirror rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterRule.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "trafficMirrorSession": {
        "resourceName": "traffic-mirror-session",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateTrafficMirrorSession": {
                "privilege": "CreateTrafficMirrorSession",
                "description": "Grants permission to create a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTrafficMirrorSession": {
                "privilege": "DeleteTrafficMirrorSession",
                "description": "Grants permission to delete a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorSession.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTrafficMirrorSession": {
                "privilege": "ModifyTrafficMirrorSession",
                "description": "Grants permission to modify a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorSession.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "trafficMirrorTarget": {
        "resourceName": "traffic-mirror-target",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateTrafficMirrorSession": {
                "privilege": "CreateTrafficMirrorSession",
                "description": "Grants permission to create a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTrafficMirrorTarget": {
                "privilege": "CreateTrafficMirrorTarget",
                "description": "Grants permission to create a traffic mirror target",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorTarget.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTrafficMirrorTarget": {
                "privilege": "DeleteTrafficMirrorTarget",
                "description": "Grants permission to delete a traffic mirror target",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorTarget.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTrafficMirrorSession": {
                "privilege": "ModifyTrafficMirrorSession",
                "description": "Grants permission to modify a traffic mirror session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorSession.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "transitGatewayAttachment": {
        "resourceName": "transit-gateway-attachment",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AcceptTransitGatewayMulticastDomainAssociations": {
                "privilege": "AcceptTransitGatewayMulticastDomainAssociations",
                "description": "Grants permission to accept a request to associate subnets with a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayMulticastDomainAssociations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AcceptTransitGatewayPeeringAttachment": {
                "privilege": "AcceptTransitGatewayPeeringAttachment",
                "description": "Grants permission to accept a transit gateway peering attachment request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayPeeringAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AcceptTransitGatewayVpcAttachment": {
                "privilege": "AcceptTransitGatewayVpcAttachment",
                "description": "Grants permission to accept a request to attach a VPC to a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateTransitGatewayMulticastDomain": {
                "privilege": "AssociateTransitGatewayMulticastDomain",
                "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateTransitGatewayPolicyTable": {
                "privilege": "AssociateTransitGatewayPolicyTable",
                "description": "Grants permission to associate a policy table with a transit gateway attachment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayPolicyTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateTransitGatewayRouteTable": {
                "privilege": "AssociateTransitGatewayRouteTable",
                "description": "Grants permission to associate an attachment with a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayConnect": {
                "privilege": "CreateTransitGatewayConnect",
                "description": "Grants permission to create a Connect attachment from a specified transit gateway attachment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnect.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateTransitGatewayConnectPeer": {
                "privilege": "CreateTransitGatewayConnectPeer",
                "description": "Grants permission to create a Connect peer between a transit gateway and an appliance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnectPeer.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayPeeringAttachment": {
                "privilege": "CreateTransitGatewayPeeringAttachment",
                "description": "Grants permission to request a transit gateway peering attachment between a requester and accepter transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPeeringAttachment.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayPrefixListReference": {
                "privilege": "CreateTransitGatewayPrefixListReference",
                "description": "Grants permission to create a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateTransitGatewayRoute": {
                "privilege": "CreateTransitGatewayRoute",
                "description": "Grants permission to create a static route for a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateTransitGatewayRouteTableAnnouncement": {
                "privilege": "CreateTransitGatewayRouteTableAnnouncement",
                "description": "Grants permission to create an announcement for a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTableAnnouncement.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayVpcAttachment": {
                "privilege": "CreateTransitGatewayVpcAttachment",
                "description": "Grants permission to attach a VPC to a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpnConnection": {
                "privilege": "CreateVpnConnection",
                "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTransitGatewayConnect": {
                "privilege": "DeleteTransitGatewayConnect",
                "description": "Grants permission to delete a transit gateway connect attachment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnect.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayPeeringAttachment": {
                "privilege": "DeleteTransitGatewayPeeringAttachment",
                "description": "Grants permission to delete a peering attachment from a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPeeringAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayVpcAttachment": {
                "privilege": "DeleteTransitGatewayVpcAttachment",
                "description": "Grants permission to delete a VPC attachment from a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableTransitGatewayRouteTablePropagation": {
                "privilege": "DisableTransitGatewayRouteTablePropagation",
                "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableTransitGatewayRouteTablePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateTransitGatewayMulticastDomain": {
                "privilege": "DisassociateTransitGatewayMulticastDomain",
                "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateTransitGatewayPolicyTable": {
                "privilege": "DisassociateTransitGatewayPolicyTable",
                "description": "Grants permission to disassociate a policy table from a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayPolicyTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateTransitGatewayRouteTable": {
                "privilege": "DisassociateTransitGatewayRouteTable",
                "description": "Grants permission to disassociate a resource attachment from a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableTransitGatewayRouteTablePropagation": {
                "privilege": "EnableTransitGatewayRouteTablePropagation",
                "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyTransitGatewayPrefixListReference": {
                "privilege": "ModifyTransitGatewayPrefixListReference",
                "description": "Grants permission to modify a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyTransitGatewayVpcAttachment": {
                "privilege": "ModifyTransitGatewayVpcAttachment",
                "description": "Grants permission to modify a VPC attachment on a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RejectTransitGatewayMulticastDomainAssociations": {
                "privilege": "RejectTransitGatewayMulticastDomainAssociations",
                "description": "Grants permission to reject requests to associate cross-account subnets with a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayMulticastDomainAssociations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "RejectTransitGatewayPeeringAttachment": {
                "privilege": "RejectTransitGatewayPeeringAttachment",
                "description": "Grants permission to reject a transit gateway peering attachment request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayPeeringAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RejectTransitGatewayVpcAttachment": {
                "privilege": "RejectTransitGatewayVpcAttachment",
                "description": "Grants permission to reject a request to attach a VPC to a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplaceTransitGatewayRoute": {
                "privilege": "ReplaceTransitGatewayRoute",
                "description": "Grants permission to replace a route in a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceTransitGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "transitGatewayConnectPeer": {
        "resourceName": "transit-gateway-connect-peer",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateTransitGatewayConnectPeer": {
                "privilege": "CreateTransitGatewayConnectPeer",
                "description": "Grants permission to create a Connect peer between a transit gateway and an appliance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnectPeer.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayConnectPeer": {
                "privilege": "DeleteTransitGatewayConnectPeer",
                "description": "Grants permission to delete a transit gateway connect peer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnectPeer.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "transitGateway": {
        "resourceName": "transit-gateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateTransitGateway": {
                "privilege": "CreateTransitGateway",
                "description": "Grants permission to create a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "CreateTransitGatewayMulticastDomain": {
                "privilege": "CreateTransitGatewayMulticastDomain",
                "description": "Grants permission to create a multicast domain for a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayPeeringAttachment": {
                "privilege": "CreateTransitGatewayPeeringAttachment",
                "description": "Grants permission to request a transit gateway peering attachment between a requester and accepter transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPeeringAttachment.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayPolicyTable": {
                "privilege": "CreateTransitGatewayPolicyTable",
                "description": "Grants permission to create a transit gateway policy table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPolicyTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayRouteTable": {
                "privilege": "CreateTransitGatewayRouteTable",
                "description": "Grants permission to create a route table for a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayVpcAttachment": {
                "privilege": "CreateTransitGatewayVpcAttachment",
                "description": "Grants permission to attach a VPC to a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpnConnection": {
                "privilege": "CreateVpnConnection",
                "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTransitGateway": {
                "privilege": "DeleteTransitGateway",
                "description": "Grants permission to delete a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyTransitGateway": {
                "privilege": "ModifyTransitGateway",
                "description": "Grants permission to modify a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "transitGatewayMulticastDomain": {
        "resourceName": "transit-gateway-multicast-domain",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AcceptTransitGatewayMulticastDomainAssociations": {
                "privilege": "AcceptTransitGatewayMulticastDomainAssociations",
                "description": "Grants permission to accept a request to associate subnets with a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayMulticastDomainAssociations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AssociateTransitGatewayMulticastDomain": {
                "privilege": "AssociateTransitGatewayMulticastDomain",
                "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayMulticastDomain": {
                "privilege": "CreateTransitGatewayMulticastDomain",
                "description": "Grants permission to create a multicast domain for a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayMulticastDomain": {
                "privilege": "DeleteTransitGatewayMulticastDomain",
                "description": "Grants permission to delete a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeregisterTransitGatewayMulticastGroupMembers": {
                "privilege": "DeregisterTransitGatewayMulticastGroupMembers",
                "description": "Grants permission to deregister one or more network interface members from a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupMembers.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeregisterTransitGatewayMulticastGroupSources": {
                "privilege": "DeregisterTransitGatewayMulticastGroupSources",
                "description": "Grants permission to deregister one or more network interface sources from a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupSources.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateTransitGatewayMulticastDomain": {
                "privilege": "DisassociateTransitGatewayMulticastDomain",
                "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayMulticastDomain.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RegisterTransitGatewayMulticastGroupMembers": {
                "privilege": "RegisterTransitGatewayMulticastGroupMembers",
                "description": "Grants permission to register one or more network interfaces as a member of a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupMembers.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RegisterTransitGatewayMulticastGroupSources": {
                "privilege": "RegisterTransitGatewayMulticastGroupSources",
                "description": "Grants permission to register one or more network interfaces as a source of a group IP address in a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupSources.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RejectTransitGatewayMulticastDomainAssociations": {
                "privilege": "RejectTransitGatewayMulticastDomainAssociations",
                "description": "Grants permission to reject requests to associate cross-account subnets with a transit gateway multicast domain",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayMulticastDomainAssociations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "transitGatewayPolicyTable": {
        "resourceName": "transit-gateway-policy-table",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "GetTransitGatewayPolicyTableAssociations": {
                "privilege": "GetTransitGatewayPolicyTableAssociations",
                "description": "Grants permission to get information about associations for a transit gateway policy table",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayPolicyTableAssociations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetTransitGatewayPolicyTableEntries": {
                "privilege": "GetTransitGatewayPolicyTableEntries",
                "description": "Grants permission to get information about associations for a transit gateway policy table entry",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayPolicyTableEntries.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateTransitGatewayPolicyTable": {
                "privilege": "AssociateTransitGatewayPolicyTable",
                "description": "Grants permission to associate a policy table with a transit gateway attachment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayPolicyTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayPolicyTable": {
                "privilege": "CreateTransitGatewayPolicyTable",
                "description": "Grants permission to create a transit gateway policy table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPolicyTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayPolicyTable": {
                "privilege": "DeleteTransitGatewayPolicyTable",
                "description": "Grants permission to delete a transit gateway policy table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPolicyTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisassociateTransitGatewayPolicyTable": {
                "privilege": "DisassociateTransitGatewayPolicyTable",
                "description": "Grants permission to disassociate a policy table from a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayPolicyTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "transitGatewayRouteTableAnnouncement": {
        "resourceName": "transit-gateway-route-table-announcement",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateTransitGatewayRouteTableAnnouncement": {
                "privilege": "CreateTransitGatewayRouteTableAnnouncement",
                "description": "Grants permission to create an announcement for a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTableAnnouncement.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayRouteTableAnnouncement": {
                "privilege": "DeleteTransitGatewayRouteTableAnnouncement",
                "description": "Grants permission to delete a transit gateway route table announcement",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRouteTableAnnouncement.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableTransitGatewayRouteTablePropagation": {
                "privilege": "DisableTransitGatewayRouteTablePropagation",
                "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableTransitGatewayRouteTablePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "EnableTransitGatewayRouteTablePropagation": {
                "privilege": "EnableTransitGatewayRouteTablePropagation",
                "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "transitGatewayRouteTable": {
        "resourceName": "transit-gateway-route-table",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "SearchTransitGatewayRoutes": {
                "privilege": "SearchTransitGatewayRoutes",
                "description": "Grants permission to search for routes in a transit gateway route table",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateTransitGatewayRouteTable": {
                "privilege": "AssociateTransitGatewayRouteTable",
                "description": "Grants permission to associate an attachment with a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayPrefixListReference": {
                "privilege": "CreateTransitGatewayPrefixListReference",
                "description": "Grants permission to create a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateTransitGatewayRoute": {
                "privilege": "CreateTransitGatewayRoute",
                "description": "Grants permission to create a static route for a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateTransitGatewayRouteTable": {
                "privilege": "CreateTransitGatewayRouteTable",
                "description": "Grants permission to create a route table for a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayRouteTableAnnouncement": {
                "privilege": "CreateTransitGatewayRouteTableAnnouncement",
                "description": "Grants permission to create an announcement for a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTableAnnouncement.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayPrefixListReference": {
                "privilege": "DeleteTransitGatewayPrefixListReference",
                "description": "Grants permission to delete a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayRoute": {
                "privilege": "DeleteTransitGatewayRoute",
                "description": "Grants permission to delete a route from a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTransitGatewayRouteTable": {
                "privilege": "DeleteTransitGatewayRouteTable",
                "description": "Grants permission to delete a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableTransitGatewayRouteTablePropagation": {
                "privilege": "DisableTransitGatewayRouteTablePropagation",
                "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableTransitGatewayRouteTablePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateTransitGatewayRouteTable": {
                "privilege": "DisassociateTransitGatewayRouteTable",
                "description": "Grants permission to disassociate a resource attachment from a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableTransitGatewayRouteTablePropagation": {
                "privilege": "EnableTransitGatewayRouteTablePropagation",
                "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyTransitGateway": {
                "privilege": "ModifyTransitGateway",
                "description": "Grants permission to modify a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyTransitGatewayPrefixListReference": {
                "privilege": "ModifyTransitGatewayPrefixListReference",
                "description": "Grants permission to modify a transit gateway prefix list reference",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayPrefixListReference.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ReplaceTransitGatewayRoute": {
                "privilege": "ReplaceTransitGatewayRoute",
                "description": "Grants permission to replace a route in a transit gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceTransitGatewayRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "volume": {
        "resourceName": "volume",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AvailabilityZone": {
                "condition": "ec2:AvailabilityZone",
                "description": "Filters access by the name of an Availability Zone in an AWS Region",
                "type": "String"
            },
            "ec2:Encrypted": {
                "condition": "ec2:Encrypted",
                "description": "Filters access by whether the EBS volume is encrypted",
                "type": "Bool"
            },
            "ec2:IsLaunchTemplateResource": {
                "condition": "ec2:IsLaunchTemplateResource",
                "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                "type": "Bool"
            },
            "ec2:KmsKeyId": {
                "condition": "ec2:KmsKeyId",
                "description": "Filters access by the ID of an AWS KMS key",
                "type": "String"
            },
            "ec2:LaunchTemplate": {
                "condition": "ec2:LaunchTemplate",
                "description": "Filters access by the ARN of a launch template",
                "type": "ARN"
            },
            "ec2:ParentSnapshot": {
                "condition": "ec2:ParentSnapshot",
                "description": "Filters access by the ARN of the parent snapshot",
                "type": "ARN"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:VolumeID": {
                "condition": "ec2:VolumeID",
                "description": "Filters access by the ID of a volume",
                "type": "String"
            },
            "ec2:VolumeIops": {
                "condition": "ec2:VolumeIops",
                "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                "type": "Numeric"
            },
            "ec2:VolumeSize": {
                "condition": "ec2:VolumeSize",
                "description": "Filters access by the size of the volume, in GiB",
                "type": "Numeric"
            },
            "ec2:VolumeThroughput": {
                "condition": "ec2:VolumeThroughput",
                "description": "Filters access by the throughput of the volume, in MiBps",
                "type": "Numeric"
            },
            "ec2:VolumeType": {
                "condition": "ec2:VolumeType",
                "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeVolumeAttribute": {
                "privilege": "DescribeVolumeAttribute",
                "description": "Grants permission to describe an attribute of an EBS volume",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumeAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "AttachVolume": {
                "privilege": "AttachVolume",
                "description": "Grants permission to attach an EBS volume to a running or stopped instance and expose it to the instance with the specified device name",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVolume.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateFleet": {
                "privilege": "CreateFleet",
                "description": "Grants permission to launch an EC2 Fleet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateReplaceRootVolumeTask": {
                "privilege": "CreateReplaceRootVolumeTask",
                "description": "Grants permission to create a root volume replacement task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReplaceRootVolumeTask.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateSnapshot": {
                "privilege": "CreateSnapshot",
                "description": "Grants permission to create a snapshot of an EBS volume and store it in Amazon S3",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshot.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateSnapshots": {
                "privilege": "CreateSnapshots",
                "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateVolume": {
                "privilege": "CreateVolume",
                "description": "Grants permission to create an EBS volume",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteVolume": {
                "privilege": "DeleteVolume",
                "description": "Grants permission to delete an EBS volume",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVolume.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachVolume": {
                "privilege": "DetachVolume",
                "description": "Grants permission to detach an EBS volume from an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVolume.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "EnableVolumeIO": {
                "privilege": "EnableVolumeIO",
                "description": "Grants permission to enable I/O operations for a volume that had I/O operations disabled",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVolumeIO.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportInstance": {
                "privilege": "ImportInstance",
                "description": "Grants permission to create an import instance task using metadata from a disk image",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ImportVolume": {
                "privilege": "ImportVolume",
                "description": "Grants permission to create an import volume task using metadata from a disk image",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportVolume.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyInstanceAttribute": {
                "privilege": "ModifyInstanceAttribute",
                "description": "Grants permission to modify an attribute of an instance",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyVolume": {
                "privilege": "ModifyVolume",
                "description": "Grants permission to modify the parameters of an EBS volume",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolume.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVolumeAttribute": {
                "privilege": "ModifyVolumeAttribute",
                "description": "Grants permission to modify an attribute of a volume",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolumeAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RunInstances": {
                "privilege": "RunInstances",
                "description": "Grants permission to launch one or more instances",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpcEndpointConnection": {
        "resourceName": "vpc-endpoint-connection",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-connection/${VpcEndpointConnectionId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpcEndpoint": {
        "resourceName": "vpc-endpoint",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:VpceServiceName": {
                "condition": "ec2:VpceServiceName",
                "description": "Filters access by the name of the VPC endpoint service",
                "type": "String"
            },
            "ec2:VpceServiceOwner": {
                "condition": "ec2:VpceServiceOwner",
                "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateTrafficMirrorTarget": {
                "privilege": "CreateTrafficMirrorTarget",
                "description": "Grants permission to create a traffic mirror target",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorTarget.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpcEndpoint": {
                "privilege": "CreateVpcEndpoint",
                "description": "Grants permission to create a VPC endpoint for an AWS service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpcEndpointConnectionNotification": {
                "privilege": "CreateVpcEndpointConnectionNotification",
                "description": "Grants permission to create a connection notification for a VPC endpoint or VPC endpoint service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteVpcEndpointConnectionNotifications": {
                "privilege": "DeleteVpcEndpointConnectionNotifications",
                "description": "Grants permission to delete one or more VPC endpoint connection notifications",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointConnectionNotifications.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteVpcEndpoints": {
                "privilege": "DeleteVpcEndpoints",
                "description": "Grants permission to delete one or more VPC endpoints",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpoints.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpcEndpoint": {
                "privilege": "ModifyVpcEndpoint",
                "description": "Grants permission to modify an attribute of a VPC endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyVpcEndpointConnectionNotification": {
                "privilege": "ModifyVpcEndpointConnectionNotification",
                "description": "Grants permission to modify a connection notification for a VPC endpoint or VPC endpoint service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointConnectionNotification.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpcEndpointService": {
        "resourceName": "vpc-endpoint-service",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:VpceServicePrivateDnsName": {
                "condition": "ec2:VpceServicePrivateDnsName",
                "description": "Filters access by the private DNS name of the VPC endpoint service",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AcceptVpcEndpointConnections": {
                "privilege": "AcceptVpcEndpointConnections",
                "description": "Grants permission to accept one or more interface VPC endpoint connections to your VPC endpoint service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcEndpointConnections.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateVpcEndpointServiceConfiguration": {
                "privilege": "CreateVpcEndpointServiceConfiguration",
                "description": "Grants permission to create a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointServiceConfiguration.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteVpcEndpointConnectionNotifications": {
                "privilege": "DeleteVpcEndpointConnectionNotifications",
                "description": "Grants permission to delete one or more VPC endpoint connection notifications",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointConnectionNotifications.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteVpcEndpointServiceConfigurations": {
                "privilege": "DeleteVpcEndpointServiceConfigurations",
                "description": "Grants permission to delete one or more VPC endpoint service configurations",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointServiceConfigurations.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpcEndpointConnectionNotification": {
                "privilege": "ModifyVpcEndpointConnectionNotification",
                "description": "Grants permission to modify a connection notification for a VPC endpoint or VPC endpoint service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointConnectionNotification.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpcEndpointServiceConfiguration": {
                "privilege": "ModifyVpcEndpointServiceConfiguration",
                "description": "Grants permission to modify the attributes of a VPC endpoint service configuration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServiceConfiguration.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpcEndpointServicePayerResponsibility": {
                "privilege": "ModifyVpcEndpointServicePayerResponsibility",
                "description": "Grants permission to modify the payer responsibility for a VPC endpoint service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePayerResponsibility.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RejectVpcEndpointConnections": {
                "privilege": "RejectVpcEndpointConnections",
                "description": "Grants permission to reject one or more VPC endpoint connection requests to a VPC endpoint service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcEndpointConnections.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "StartVpcEndpointServicePrivateDnsVerification": {
                "privilege": "StartVpcEndpointServicePrivateDnsVerification",
                "description": "Grants permission to start the private DNS verification process for a VPC endpoint service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartVpcEndpointServicePrivateDnsVerification.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "ModifyVpcEndpointServicePermissions": {
                "privilege": "ModifyVpcEndpointServicePermissions",
                "description": "Grants permission to modify the permissions for a VPC endpoint service",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePermissions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpcEndpointServicePermission": {
        "resourceName": "vpc-endpoint-service-permission",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service-permission/${VpcEndpointServicePermissionId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpcFlowLog": {
        "resourceName": "vpc-flow-log",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetFlowLogsIntegrationTemplate": {
                "privilege": "GetFlowLogsIntegrationTemplate",
                "description": "Grants permission to generate a CloudFormation template to streamline the integration of VPC flow logs with Amazon Athena",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetFlowLogsIntegrationTemplate.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateFlowLogs": {
                "privilege": "CreateFlowLogs",
                "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteFlowLogs": {
                "privilege": "DeleteFlowLogs",
                "description": "Grants permission to delete one or more flow logs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpc": {
        "resourceName": "vpc",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Ipv4IpamPoolId": {
                "condition": "ec2:Ipv4IpamPoolId",
                "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                "type": "String"
            },
            "ec2:Ipv6IpamPoolId": {
                "condition": "ec2:Ipv6IpamPoolId",
                "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:Tenancy": {
                "condition": "ec2:Tenancy",
                "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                "type": "String"
            },
            "ec2:VpcID": {
                "condition": "ec2:VpcID",
                "description": "Filters access by the ID of a virtual private cloud (VPC)",
                "type": "String"
            }
        },
        "listPrivileges": {
            "DescribeVpcAttribute": {
                "privilege": "DescribeVpcAttribute",
                "description": "Grants permission to describe an attribute of a VPC",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "AcceptVpcPeeringConnection": {
                "privilege": "AcceptVpcPeeringConnection",
                "description": "Grants permission to accept a VPC peering connection request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcPeeringConnection.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ApplySecurityGroupsToClientVpnTargetNetwork": {
                "privilege": "ApplySecurityGroupsToClientVpnTargetNetwork",
                "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ApplySecurityGroupsToClientVpnTargetNetwork.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateDhcpOptions": {
                "privilege": "AssociateDhcpOptions",
                "description": "Grants permission to associate or disassociate a set of DHCP options with a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateDhcpOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssociateVpcCidrBlock": {
                "privilege": "AssociateVpcCidrBlock",
                "description": "Grants permission to associate a CIDR block with a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateVpcCidrBlock.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AttachClassicLinkVpc": {
                "privilege": "AttachClassicLinkVpc",
                "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachClassicLinkVpc.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AttachInternetGateway": {
                "privilege": "AttachInternetGateway",
                "description": "Grants permission to attach an internet gateway to a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AttachVpnGateway": {
                "privilege": "AttachVpnGateway",
                "description": "Grants permission to attach a virtual private gateway to a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVpnGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateCarrierGateway": {
                "privilege": "CreateCarrierGateway",
                "description": "Grants permission to create a carrier gateway and provides CSP connectivity to VPC customers",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCarrierGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateClientVpnEndpoint": {
                "privilege": "CreateClientVpnEndpoint",
                "description": "Grants permission to create a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateEgressOnlyInternetGateway": {
                "privilege": "CreateEgressOnlyInternetGateway",
                "description": "Grants permission to create an egress-only internet gateway for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateEgressOnlyInternetGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateFlowLogs": {
                "privilege": "CreateFlowLogs",
                "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateLocalGatewayRouteTableVpcAssociation": {
                "privilege": "CreateLocalGatewayRouteTableVpcAssociation",
                "description": "Grants permission to associate a VPC with a local gateway route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVpcAssociation.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateNetworkAcl": {
                "privilege": "CreateNetworkAcl",
                "description": "Grants permission to create a network ACL in a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateRouteTable": {
                "privilege": "CreateRouteTable",
                "description": "Grants permission to create a route table for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateSecurityGroup": {
                "privilege": "CreateSecurityGroup",
                "description": "Grants permission to create a security group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateSubnet": {
                "privilege": "CreateSubnet",
                "description": "Grants permission to create a subnet in a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateTransitGatewayVpcAttachment": {
                "privilege": "CreateTransitGatewayVpcAttachment",
                "description": "Grants permission to attach a VPC to a transit gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayVpcAttachment.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpc": {
                "privilege": "CreateVpc",
                "description": "Grants permission to create a VPC with a specified CIDR block",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpc.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpcEndpoint": {
                "privilege": "CreateVpcEndpoint",
                "description": "Grants permission to create a VPC endpoint for an AWS service",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpcPeeringConnection": {
                "privilege": "CreateVpcPeeringConnection",
                "description": "Grants permission to request a VPC peering connection between two VPCs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcPeeringConnection.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteVpc": {
                "privilege": "DeleteVpc",
                "description": "Grants permission to delete a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpc.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachClassicLinkVpc": {
                "privilege": "DetachClassicLinkVpc",
                "description": "Grants permission to unlink (detach) a linked EC2-Classic instance from a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachClassicLinkVpc.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachInternetGateway": {
                "privilege": "DetachInternetGateway",
                "description": "Grants permission to detach an internet gateway from a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachVpnGateway": {
                "privilege": "DetachVpnGateway",
                "description": "Grants permission to detach a virtual private gateway from a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVpnGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableVpcClassicLink": {
                "privilege": "DisableVpcClassicLink",
                "description": "Grants permission to disable ClassicLink for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLink.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableVpcClassicLinkDnsSupport": {
                "privilege": "DisableVpcClassicLinkDnsSupport",
                "description": "Grants permission to disable ClassicLink DNS support for a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLinkDnsSupport.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DisassociateVpcCidrBlock": {
                "privilege": "DisassociateVpcCidrBlock",
                "description": "Grants permission to disassociate a CIDR block from a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateVpcCidrBlock.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "EnableVpcClassicLink": {
                "privilege": "EnableVpcClassicLink",
                "description": "Grants permission to enable a VPC for ClassicLink",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLink.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableVpcClassicLinkDnsSupport": {
                "privilege": "EnableVpcClassicLinkDnsSupport",
                "description": "Grants permission to enable a VPC to support DNS hostname resolution for ClassicLink",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLinkDnsSupport.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyClientVpnEndpoint": {
                "privilege": "ModifyClientVpnEndpoint",
                "description": "Grants permission to modify a Client VPN endpoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyClientVpnEndpoint.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "ModifyVpcAttribute": {
                "privilege": "ModifyVpcAttribute",
                "description": "Grants permission to modify an attribute of a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcAttribute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpcTenancy": {
                "privilege": "ModifyVpcTenancy",
                "description": "Grants permission to modify the instance tenancy attribute of a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcTenancy.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpcPeeringConnection": {
        "resourceName": "vpc-peering-connection",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:AccepterVpc": {
                "condition": "ec2:AccepterVpc",
                "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                "type": "ARN"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:RequesterVpc": {
                "condition": "ec2:RequesterVpc",
                "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                "type": "ARN"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:VpcPeeringConnectionID": {
                "condition": "ec2:VpcPeeringConnectionID",
                "description": "Filters access by the ID of a VPC peering connection",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AcceptVpcPeeringConnection": {
                "privilege": "AcceptVpcPeeringConnection",
                "description": "Grants permission to accept a VPC peering connection request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcPeeringConnection.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpcPeeringConnection": {
                "privilege": "CreateVpcPeeringConnection",
                "description": "Grants permission to request a VPC peering connection between two VPCs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcPeeringConnection.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteVpcPeeringConnection": {
                "privilege": "DeleteVpcPeeringConnection",
                "description": "Grants permission to delete a VPC peering connection",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcPeeringConnection.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpcPeeringConnectionOptions": {
                "privilege": "ModifyVpcPeeringConnectionOptions",
                "description": "Grants permission to modify the VPC peering connection options on one side of a VPC peering connection",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcPeeringConnectionOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RejectVpcPeeringConnection": {
                "privilege": "RejectVpcPeeringConnection",
                "description": "Grants permission to reject a VPC peering connection request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcPeeringConnection.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpnConnectionDeviceType": {
        "resourceName": "vpn-connection-device-type",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection-device-type/${VpnConnectionDeviceTypeId}",
        "resourceConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "listPrivileges": {
            "GetVpnConnectionDeviceSampleConfiguration": {
                "privilege": "GetVpnConnectionDeviceSampleConfiguration",
                "description": "Grants permission to download an AWS-provided sample configuration file to be used with the customer gateway device",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceSampleConfiguration.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "vpnConnection": {
        "resourceName": "vpn-connection",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Attribute": {
                "condition": "ec2:Attribute",
                "description": "Filters access by an attribute of a resource",
                "type": "String"
            },
            "ec2:Attribute/${AttributeName}": {
                "condition": "ec2:Attribute/${AttributeName}",
                "description": "Filters access by an attribute being set on a resource",
                "type": "String"
            },
            "ec2:AuthenticationType": {
                "condition": "ec2:AuthenticationType",
                "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                "type": "String"
            },
            "ec2:DPDTimeoutSeconds": {
                "condition": "ec2:DPDTimeoutSeconds",
                "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                "type": "Numeric"
            },
            "ec2:GatewayType": {
                "condition": "ec2:GatewayType",
                "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                "type": "String"
            },
            "ec2:IKEVersions": {
                "condition": "ec2:IKEVersions",
                "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                "type": "String"
            },
            "ec2:InsideTunnelCidr": {
                "condition": "ec2:InsideTunnelCidr",
                "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                "type": "String"
            },
            "ec2:InsideTunnelIpv6Cidr": {
                "condition": "ec2:InsideTunnelIpv6Cidr",
                "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                "type": "String"
            },
            "ec2:Phase1DHGroup": {
                "condition": "ec2:Phase1DHGroup",
                "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                "type": "Numeric"
            },
            "ec2:Phase1EncryptionAlgorithms": {
                "condition": "ec2:Phase1EncryptionAlgorithms",
                "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                "type": "String"
            },
            "ec2:Phase1IntegrityAlgorithms": {
                "condition": "ec2:Phase1IntegrityAlgorithms",
                "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                "type": "String"
            },
            "ec2:Phase1LifetimeSeconds": {
                "condition": "ec2:Phase1LifetimeSeconds",
                "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                "type": "Numeric"
            },
            "ec2:Phase2DHGroup": {
                "condition": "ec2:Phase2DHGroup",
                "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                "type": "Numeric"
            },
            "ec2:Phase2EncryptionAlgorithms": {
                "condition": "ec2:Phase2EncryptionAlgorithms",
                "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                "type": "String"
            },
            "ec2:Phase2IntegrityAlgorithms": {
                "condition": "ec2:Phase2IntegrityAlgorithms",
                "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                "type": "String"
            },
            "ec2:Phase2LifetimeSeconds": {
                "condition": "ec2:Phase2LifetimeSeconds",
                "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                "type": "Numeric"
            },
            "ec2:PreSharedKeys": {
                "condition": "ec2:PreSharedKeys",
                "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:RekeyFuzzPercentage": {
                "condition": "ec2:RekeyFuzzPercentage",
                "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                "type": "Numeric"
            },
            "ec2:RekeyMarginTimeSeconds": {
                "condition": "ec2:RekeyMarginTimeSeconds",
                "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                "type": "Numeric"
            },
            "ec2:ReplayWindowSizePackets": {
                "condition": "ec2:ReplayWindowSizePackets",
                "description": "Filters access by the number of packets in an IKE replay window",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "ec2:RoutingType": {
                "condition": "ec2:RoutingType",
                "description": "Filters access by the routing type for the VPN connection",
                "type": "String"
            }
        },
        "listPrivileges": {
            "GetVpnConnectionDeviceSampleConfiguration": {
                "privilege": "GetVpnConnectionDeviceSampleConfiguration",
                "description": "Grants permission to download an AWS-provided sample configuration file to be used with the customer gateway device",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceSampleConfiguration.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {},
        "writePrivileges": {
            "CreateVpnConnection": {
                "privilege": "CreateVpnConnection",
                "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpnConnectionRoute": {
                "privilege": "CreateVpnConnectionRoute",
                "description": "Grants permission to create a static route for a VPN connection between a virtual private gateway and a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnectionRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteVpnConnection": {
                "privilege": "DeleteVpnConnection",
                "description": "Grants permission to delete a VPN connection",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnection.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteVpnConnectionRoute": {
                "privilege": "DeleteVpnConnectionRoute",
                "description": "Grants permission to delete a static route for a VPN connection between a virtual private gateway and a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnectionRoute.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpnConnection": {
                "privilege": "ModifyVpnConnection",
                "description": "Grants permission to modify the target gateway of a Site-to-Site VPN connection",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnection.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpnConnectionOptions": {
                "privilege": "ModifyVpnConnectionOptions",
                "description": "Grants permission to modify the connection options for your Site-to-Site VPN connection",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnectionOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpnTunnelCertificate": {
                "privilege": "ModifyVpnTunnelCertificate",
                "description": "Grants permission to modify the certificate for a Site-to-Site VPN connection",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelCertificate.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ModifyVpnTunnelOptions": {
                "privilege": "ModifyVpnTunnelOptions",
                "description": "Grants permission to modify the options for a Site-to-Site VPN connection",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelOptions.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "vpnGateway": {
        "resourceName": "vpn-gateway",
        "service": "ec2",
        "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "resourceConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a tag key and value pair that is allowed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by a list of tag keys that are allowed in the request",
                "type": "ArrayOfString"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            },
            "ec2:ResourceTag/${TagKey}": {
                "condition": "ec2:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key and value pair of a resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateRouteTable": {
                "privilege": "AssociateRouteTable",
                "description": "Grants permission to associate a subnet or gateway with a route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateRouteTable.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "AttachVpnGateway": {
                "privilege": "AttachVpnGateway",
                "description": "Grants permission to attach a virtual private gateway to a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVpnGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateNetworkInsightsPath": {
                "privilege": "CreateNetworkInsightsPath",
                "description": "Grants permission to create a path to analyze for reachability",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpnConnection": {
                "privilege": "CreateVpnConnection",
                "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateVpnGateway": {
                "privilege": "CreateVpnGateway",
                "description": "Grants permission to create a virtual private gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnGateway.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "ec2:CreateTags"
                ],
                "required": true
            },
            "DeleteVpnGateway": {
                "privilege": "DeleteVpnGateway",
                "description": "Grants permission to delete a virtual private gateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachVpnGateway": {
                "privilege": "DetachVpnGateway",
                "description": "Grants permission to detach a virtual private gateway from a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVpnGateway.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableVgwRoutePropagation": {
                "privilege": "DisableVgwRoutePropagation",
                "description": "Grants permission to disable a virtual private gateway from propagating routes to a specified route table of a VPC",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVgwRoutePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableVgwRoutePropagation": {
                "privilege": "EnableVgwRoutePropagation",
                "description": "Grants permission to enable a virtual private gateway to propagate routes to a VPC route table",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVgwRoutePropagation.html",
                "privConditions": {
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "CreateTags": {
                "privilege": "CreateTags",
                "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
                "privConditions": {
                    "ec2:CreateAction": {
                        "condition": "ec2:CreateAction",
                        "description": "Filters access by the name of a resource-creating API action",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteTags": {
                "privilege": "DeleteTags",
                "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "ArrayOfString"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    }
}
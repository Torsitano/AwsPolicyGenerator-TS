{
    "elasticIp": {
        "resource": "elastic-ip",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AllocationId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Domain",
            "ec2:PublicIpAddress",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "capacityReservationFleet": {
        "resource": "capacity-reservation-fleet",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "capacityReservation": {
        "resource": "capacity-reservation",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:CapacityReservationFleet",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "carrierGateway": {
        "resource": "carrier-gateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:Vpc"
        ]
    },
    "certificate": {
        "resource": "certificate",
        "arn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}",
        "conditionKeys": []
    },
    "clientVpnEndpoint": {
        "resource": "client-vpn-endpoint",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ClientRootCertificateChainArn",
            "ec2:CloudwatchLogGroupArn",
            "ec2:CloudwatchLogStreamArn",
            "ec2:DirectoryArn",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SamlProviderArn",
            "ec2:ServerCertificateArn"
        ]
    },
    "customerGateway": {
        "resource": "customer-gateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "dedicatedHost": {
        "resource": "dedicated-host",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AutoPlacement",
            "ec2:AvailabilityZone",
            "ec2:HostRecovery",
            "ec2:InstanceType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Quantity",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "dhcpOptions": {
        "resource": "dhcp-options",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:DhcpOptionsID",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "egressOnlyInternetGateway": {
        "resource": "egress-only-internet-gateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "elasticGpu": {
        "resource": "elastic-gpu",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:ElasticGpuType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "elasticInference": {
        "resource": "elastic-inference",
        "arn": "arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${ElasticInferenceAcceleratorId}",
        "conditionKeys": []
    },
    "exportImageTask": {
        "resource": "export-image-task",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "exportInstanceTask": {
        "resource": "export-instance-task",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "fleet": {
        "resource": "fleet",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "fpgaImage": {
        "resource": "fpga-image",
        "arn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Owner",
            "ec2:Public",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "hostReservation": {
        "resource": "host-reservation",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/${HostReservationId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "image": {
        "resource": "image",
        "arn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:ImageID",
            "ec2:ImageType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Owner",
            "ec2:Public",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType"
        ]
    },
    "importImageTask": {
        "resource": "import-image-task",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "importSnapshotTask": {
        "resource": "import-snapshot-task",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "instanceEventWindow": {
        "resource": "instance-event-window",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "instance": {
        "resource": "instance",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:EbsOptimized",
            "ec2:InstanceAutoRecovery",
            "ec2:InstanceID",
            "ec2:InstanceMarketType",
            "ec2:InstanceMetadataTags",
            "ec2:InstanceProfile",
            "ec2:InstanceType",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:MetadataHttpEndpoint",
            "ec2:MetadataHttpPutResponseHopLimit",
            "ec2:MetadataHttpTokens",
            "ec2:NewInstanceProfile",
            "ec2:PlacementGroup",
            "ec2:ProductCode",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RootDeviceType",
            "ec2:Tenancy"
        ]
    },
    "internetGateway": {
        "resource": "internet-gateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:InternetGatewayID",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "ipam": {
        "resource": "ipam",
        "arn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "ipamPool": {
        "resource": "ipam-pool",
        "arn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "ipamScope": {
        "resource": "ipam-scope",
        "arn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "coipPool": {
        "resource": "coip-pool",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:coip-pool/${Ipv4PoolCoipId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "ipv4poolEc2": {
        "resource": "ipv4pool-ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "ipv6poolEc2": {
        "resource": "ipv6pool-ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "keyPair": {
        "resource": "key-pair",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:IsLaunchTemplateResource",
            "ec2:KeyPairName",
            "ec2:KeyPairType",
            "ec2:LaunchTemplate",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "launchTemplate": {
        "resource": "launch-template",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "licenseConfiguration": {
        "resource": "license-configuration",
        "arn": "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration/${LicenseConfigurationId}",
        "conditionKeys": []
    },
    "localGateway": {
        "resource": "local-gateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "localGatewayRouteTableVirtualInterfaceGroupAssociation": {
        "resource": "local-gateway-route-table-virtual-interface-group-association",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "localGatewayRouteTableVpcAssociation": {
        "resource": "local-gateway-route-table-vpc-association",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "localGatewayRouteTable": {
        "resource": "local-gateway-route-table",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "localGatewayVirtualInterfaceGroup": {
        "resource": "local-gateway-virtual-interface-group",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "localGatewayVirtualInterface": {
        "resource": "local-gateway-virtual-interface",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "natgateway": {
        "resource": "natgateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "networkAcl": {
        "resource": "network-acl",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:NetworkAclID",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Vpc"
        ]
    },
    "networkInsightsAccessScopeAnalysis": {
        "resource": "network-insights-access-scope-analysis",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "networkInsightsAccessScope": {
        "resource": "network-insights-access-scope",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "networkInsightsAnalysis": {
        "resource": "network-insights-analysis",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "networkInsightsPath": {
        "resource": "network-insights-path",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "networkInterface": {
        "resource": "network-interface",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AssociatePublicIpAddress",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AuthorizedService",
            "ec2:AuthorizedUser",
            "ec2:AvailabilityZone",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:NetworkInterfaceID",
            "ec2:Permission",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Subnet",
            "ec2:Vpc"
        ]
    },
    "placementGroup": {
        "resource": "placement-group",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:PlacementGroupName",
            "ec2:PlacementGroupStrategy",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "prefixList": {
        "resource": "prefix-list",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "replaceRootVolumeTask": {
        "resource": "replace-root-volume-task",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "reservedInstances": {
        "resource": "reserved-instances",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:InstanceType",
            "ec2:Region",
            "ec2:ReservedInstancesOfferingType",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy"
        ]
    },
    "group": {
        "resource": "group",
        "arn": "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}",
        "conditionKeys": []
    },
    "role": {
        "resource": "role",
        "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
        "conditionKeys": []
    },
    "routeTable": {
        "resource": "route-table",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RouteTableID",
            "ec2:Vpc"
        ]
    },
    "securityGroup": {
        "resource": "security-group",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SecurityGroupID",
            "ec2:Vpc"
        ]
    },
    "securityGroupRule": {
        "resource": "security-group-rule",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "snapshot": {
        "resource": "snapshot",
        "arn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Add/group",
            "ec2:Add/userId",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:OutpostArn",
            "ec2:Owner",
            "ec2:ParentVolume",
            "ec2:Region",
            "ec2:Remove/group",
            "ec2:Remove/userId",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SnapshotID",
            "ec2:SnapshotTime",
            "ec2:SourceOutpostArn",
            "ec2:VolumeSize"
        ]
    },
    "spotFleetRequest": {
        "resource": "spot-fleet-request",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "spotInstancesRequest": {
        "resource": "spot-instances-request",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "subnetCidrReservation": {
        "resource": "subnet-cidr-reservation",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "subnet": {
        "resource": "subnet",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:IsLaunchTemplateResource",
            "ec2:LaunchTemplate",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:SubnetID",
            "ec2:Vpc"
        ]
    },
    "trafficMirrorFilter": {
        "resource": "traffic-mirror-filter",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "trafficMirrorFilterRule": {
        "resource": "traffic-mirror-filter-rule",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
        "conditionKeys": [
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region"
        ]
    },
    "trafficMirrorSession": {
        "resource": "traffic-mirror-session",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "trafficMirrorTarget": {
        "resource": "traffic-mirror-target",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "transitGatewayAttachment": {
        "resource": "transit-gateway-attachment",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "transitGatewayConnectPeer": {
        "resource": "transit-gateway-connect-peer",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "transitGateway": {
        "resource": "transit-gateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "transitGatewayMulticastDomain": {
        "resource": "transit-gateway-multicast-domain",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "transitGatewayPolicyTable": {
        "resource": "transit-gateway-policy-table",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "transitGatewayRouteTableAnnouncement": {
        "resource": "transit-gateway-route-table-announcement",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "transitGatewayRouteTable": {
        "resource": "transit-gateway-route-table",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "volume": {
        "resource": "volume",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AvailabilityZone",
            "ec2:Encrypted",
            "ec2:IsLaunchTemplateResource",
            "ec2:KmsKeyId",
            "ec2:LaunchTemplate",
            "ec2:ParentSnapshot",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VolumeID",
            "ec2:VolumeIops",
            "ec2:VolumeSize",
            "ec2:VolumeThroughput",
            "ec2:VolumeType"
        ]
    },
    "vpcEndpointConnection": {
        "resource": "vpc-endpoint-connection",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-connection/${VpcEndpointConnectionId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "vpcEndpoint": {
        "resource": "vpc-endpoint",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServiceName",
            "ec2:VpceServiceOwner"
        ]
    },
    "vpcEndpointService": {
        "resource": "vpc-endpoint-service",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpceServicePrivateDnsName"
        ]
    },
    "vpcEndpointServicePermission": {
        "resource": "vpc-endpoint-service-permission",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service-permission/${VpcEndpointServicePermissionId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "vpcFlowLog": {
        "resource": "vpc-flow-log",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    },
    "vpc": {
        "resource": "vpc",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Ipv4IpamPoolId",
            "ec2:Ipv6IpamPoolId",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}",
            "ec2:Tenancy",
            "ec2:VpcID"
        ]
    },
    "vpcPeeringConnection": {
        "resource": "vpc-peering-connection",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:AccepterVpc",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:Region",
            "ec2:RequesterVpc",
            "ec2:ResourceTag/${TagKey}",
            "ec2:VpcPeeringConnectionID"
        ]
    },
    "vpnConnectionDeviceType": {
        "resource": "vpn-connection-device-type",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection-device-type/${VpnConnectionDeviceTypeId}",
        "conditionKeys": [
            "ec2:Region"
        ]
    },
    "vpnConnection": {
        "resource": "vpn-connection",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Attribute",
            "ec2:Attribute/${AttributeName}",
            "ec2:AuthenticationType",
            "ec2:DPDTimeoutSeconds",
            "ec2:GatewayType",
            "ec2:IKEVersions",
            "ec2:InsideTunnelCidr",
            "ec2:InsideTunnelIpv6Cidr",
            "ec2:Phase1DHGroup",
            "ec2:Phase1EncryptionAlgorithms",
            "ec2:Phase1IntegrityAlgorithms",
            "ec2:Phase1LifetimeSeconds",
            "ec2:Phase2DHGroup",
            "ec2:Phase2EncryptionAlgorithms",
            "ec2:Phase2IntegrityAlgorithms",
            "ec2:Phase2LifetimeSeconds",
            "ec2:PreSharedKeys",
            "ec2:Region",
            "ec2:RekeyFuzzPercentage",
            "ec2:RekeyMarginTimeSeconds",
            "ec2:ReplayWindowSizePackets",
            "ec2:ResourceTag/${TagKey}",
            "ec2:RoutingType"
        ]
    },
    "vpnGateway": {
        "resource": "vpn-gateway",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "conditionKeys": [
            "aws:RequestTag/${TagKey}",
            "aws:ResourceTag/${TagKey}",
            "aws:TagKeys",
            "ec2:Region",
            "ec2:ResourceTag/${TagKey}"
        ]
    }
}
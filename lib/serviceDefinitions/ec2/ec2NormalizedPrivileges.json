{
    "acceptReservedInstancesExchangeQuote": {
        "privilege": "AcceptReservedInstancesExchangeQuote",
        "description": "Grants permission to accept a Convertible Reserved Instance exchange quote",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptReservedInstancesExchangeQuote.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "acceptTransitGatewayMulticastDomainAssociations": {
        "privilege": "AcceptTransitGatewayMulticastDomainAssociations",
        "description": "Grants permission to accept a request to associate subnets with a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayMulticastDomainAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "acceptTransitGatewayPeeringAttachment": {
        "privilege": "AcceptTransitGatewayPeeringAttachment",
        "description": "Grants permission to accept a transit gateway peering attachment request",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayPeeringAttachment.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "acceptTransitGatewayVpcAttachment": {
        "privilege": "AcceptTransitGatewayVpcAttachment",
        "description": "Grants permission to accept a request to attach a VPC to a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptTransitGatewayVpcAttachment.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "acceptVpcEndpointConnections": {
        "privilege": "AcceptVpcEndpointConnections",
        "description": "Grants permission to accept one or more interface VPC endpoint connections to your VPC endpoint service",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcEndpointConnections.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "acceptVpcPeeringConnection": {
        "privilege": "AcceptVpcPeeringConnection",
        "description": "Grants permission to accept a VPC peering connection request",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AcceptVpcPeeringConnection.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "advertiseByoipCidr": {
        "privilege": "AdvertiseByoipCidr",
        "description": "Grants permission to advertise an IP address range that is provisioned for use in AWS through bring your own IP addresses (BYOIP)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AdvertiseByoipCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "allocateAddress": {
        "privilege": "AllocateAddress",
        "description": "Grants permission to allocate an Elastic IP address (EIP) to your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateAddress.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv4poolEc2": {
                "resourceName": "ipv4pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "allocateHosts": {
        "privilege": "AllocateHosts",
        "description": "Grants permission to allocate a Dedicated Host to your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateHosts.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "dedicatedHost": {
                "resourceName": "dedicated-host",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AutoPlacement": {
                        "condition": "ec2:AutoPlacement",
                        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:HostRecovery": {
                        "condition": "ec2:HostRecovery",
                        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Quantity": {
                        "condition": "ec2:Quantity",
                        "description": "Filters access by the number of Dedicated Hosts in a request",
                        "type": "Numeric"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "allocateIpamPoolCidr": {
        "privilege": "AllocateIpamPoolCidr",
        "description": "Grants permission to allocate a CIDR from an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateIpamPoolCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "applySecurityGroupsToClientVpnTargetNetwork": {
        "privilege": "ApplySecurityGroupsToClientVpnTargetNetwork",
        "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ApplySecurityGroupsToClientVpnTargetNetwork.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "assignIpv6Addresses": {
        "privilege": "AssignIpv6Addresses",
        "description": "Grants permission to assign one or more IPv6 addresses to a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignIpv6Addresses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "assignPrivateIpAddresses": {
        "privilege": "AssignPrivateIpAddresses",
        "description": "Grants permission to assign one or more secondary private IP addresses to a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssignPrivateIpAddresses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "associateAddress": {
        "privilege": "AssociateAddress",
        "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateAddress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "associateClientVpnTargetNetwork": {
        "privilege": "AssociateClientVpnTargetNetwork",
        "description": "Grants permission to associate a target network with a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateClientVpnTargetNetwork.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "associateDhcpOptions": {
        "privilege": "AssociateDhcpOptions",
        "description": "Grants permission to associate or disassociate a set of DHCP options with a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateDhcpOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "dhcpOptions": {
                "resourceName": "dhcp-options",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:DhcpOptionsID": {
                        "condition": "ec2:DhcpOptionsID",
                        "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "associateEnclaveCertificateIamRole": {
        "privilege": "AssociateEnclaveCertificateIamRole",
        "description": "Grants permission to associate an ACM certificate with an IAM role to be used in an EC2 Enclave",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateEnclaveCertificateIamRole.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "certificate": {
                "resourceName": "certificate",
                "resourceArn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}",
                "required": true,
                "resourceConditions": {}
            },
            "role": {
                "resourceName": "role",
                "resourceArn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "associateIamInstanceProfile": {
        "privilege": "AssociateIamInstanceProfile",
        "description": "Grants permission to associate an IAM instance profile with a running or stopped instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html",
        "service": "ec2",
        "dependentActions": [
            "iam:PassRole"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "associateInstanceEventWindow": {
        "privilege": "AssociateInstanceEventWindow",
        "description": "Grants permission to associate one or more targets with an event window",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateInstanceEventWindow.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instanceEventWindow": {
                "resourceName": "instance-event-window",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "associateRouteTable": {
        "privilege": "AssociateRouteTable",
        "description": "Grants permission to associate a subnet or gateway with a route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateRouteTable.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "associateSubnetCidrBlock": {
        "privilege": "AssociateSubnetCidrBlock",
        "description": "Grants permission to associate a CIDR block with a subnet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateSubnetCidrBlock.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "associateTransitGatewayMulticastDomain": {
        "privilege": "AssociateTransitGatewayMulticastDomain",
        "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayMulticastDomain.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "associateTransitGatewayRouteTable": {
        "privilege": "AssociateTransitGatewayRouteTable",
        "description": "Grants permission to associate an attachment with a transit gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTransitGatewayRouteTable.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "associateTrunkInterface": {
        "privilege": "AssociateTrunkInterface",
        "description": "Grants permission to associate a branch network interface with a trunk network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateTrunkInterface.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "associateVpcCidrBlock": {
        "privilege": "AssociateVpcCidrBlock",
        "description": "Grants permission to associate a CIDR block with a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateVpcCidrBlock.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv6poolEc2": {
                "resourceName": "ipv6pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "attachClassicLinkVpc": {
        "privilege": "AttachClassicLinkVpc",
        "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachClassicLinkVpc.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "attachInternetGateway": {
        "privilege": "AttachInternetGateway",
        "description": "Grants permission to attach an internet gateway to a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "attachNetworkInterface": {
        "privilege": "AttachNetworkInterface",
        "description": "Grants permission to attach a network interface to an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachNetworkInterface.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "attachVolume": {
        "privilege": "AttachVolume",
        "description": "Grants permission to attach an EBS volume to a running or stopped instance and expose it to the instance with the specified device name",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVolume.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "attachVpnGateway": {
        "privilege": "AttachVpnGateway",
        "description": "Grants permission to attach a virtual private gateway to a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachVpnGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "authorizeClientVpnIngress": {
        "privilege": "AuthorizeClientVpnIngress",
        "description": "Grants permission to add an inbound authorization rule to a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeClientVpnIngress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "authorizeSecurityGroupEgress": {
        "privilege": "AuthorizeSecurityGroupEgress",
        "description": "Grants permission to add one or more outbound rules to a VPC security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "authorizeSecurityGroupIngress": {
        "privilege": "AuthorizeSecurityGroupIngress",
        "description": "Grants permission to add one or more inbound rules to a security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "bundleInstance": {
        "privilege": "BundleInstance",
        "description": "Grants permission to bundle an instance store-backed Windows instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BundleInstance.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "cancelBundleTask": {
        "privilege": "CancelBundleTask",
        "description": "Grants permission to cancel a bundling operation",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelBundleTask.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "cancelCapacityReservation": {
        "privilege": "CancelCapacityReservation",
        "description": "Grants permission to cancel a Capacity Reservation and release the reserved capacity",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "cancelCapacityReservationFleets": {
        "privilege": "CancelCapacityReservationFleets",
        "description": "Grants permission to cancel one or more Capacity Reservation Fleets",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelCapacityReservationFleets.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservationFleet": {
                "resourceName": "capacity-reservation-fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "cancelConversionTask": {
        "privilege": "CancelConversionTask",
        "description": "Grants permission to cancel an active conversion task",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelConversionTask.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "cancelExportTask": {
        "privilege": "CancelExportTask",
        "description": "Grants permission to cancel an active export task",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelExportTask.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "exportImageTask": {
                "resourceName": "export-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "exportInstanceTask": {
                "resourceName": "export-instance-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "cancelImportTask": {
        "privilege": "CancelImportTask",
        "description": "Grants permission to cancel an in-process import virtual machine or import snapshot task",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelImportTask.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "importImageTask": {
                "resourceName": "import-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "importSnapshotTask": {
                "resourceName": "import-snapshot-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "cancelReservedInstancesListing": {
        "privilege": "CancelReservedInstancesListing",
        "description": "Grants permission to cancel a Reserved Instance listing on the Reserved Instance Marketplace",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelReservedInstancesListing.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "cancelSpotFleetRequests": {
        "privilege": "CancelSpotFleetRequests",
        "description": "Grants permission to cancel one or more Spot Fleet requests",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "spotFleetRequest": {
                "resourceName": "spot-fleet-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "cancelSpotInstanceRequests": {
        "privilege": "CancelSpotInstanceRequests",
        "description": "Grants permission to cancel one or more Spot Instance requests",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotInstanceRequests.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "spotInstancesRequest": {
                "resourceName": "spot-instances-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "confirmProductInstance": {
        "privilege": "ConfirmProductInstance",
        "description": "Grants permission to determine whether an owned product code is associated with an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ConfirmProductInstance.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "copyFpgaImage": {
        "privilege": "CopyFpgaImage",
        "description": "Grants permission to copy a source Amazon FPGA image (AFI) to the current Region. Resource-level permissions specified for this action apply to the new AFI only. They do not apply to the source AFI",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyFpgaImage.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "copyImage": {
        "privilege": "CopyImage",
        "description": "Grants permission to copy an Amazon Machine Image (AMI) from a source Region to the current Region. Resource-level permissions specified for this action apply to the new AMI only. They do not apply to the source AMI",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopyImage.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "copySnapshot": {
        "privilege": "CopySnapshot",
        "description": "Grants permission to copy a point-in-time snapshot of an EBS volume and store it in Amazon S3. Resource-level permissions specified for this action apply to the new snapshot only. They do not apply to the source snapshot",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CopySnapshot.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "createCapacityReservation": {
        "privilege": "CreateCapacityReservation",
        "description": "Grants permission to create a Capacity Reservation",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservation.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createCapacityReservationFleet": {
        "privilege": "CreateCapacityReservationFleet",
        "description": "Grants permission to create a Capacity Reservation Fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCapacityReservationFleet.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservationFleet": {
                "resourceName": "capacity-reservation-fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createCarrierGateway": {
        "privilege": "CreateCarrierGateway",
        "description": "Grants permission to create a carrier gateway and provides CSP connectivity to VPC customers",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCarrierGateway.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "carrierGateway": {
                "resourceName": "carrier-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createClientVpnEndpoint": {
        "privilege": "CreateClientVpnEndpoint",
        "description": "Grants permission to create a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnEndpoint.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createClientVpnRoute": {
        "privilege": "CreateClientVpnRoute",
        "description": "Grants permission to add a network route to a Client VPN endpoint's route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateClientVpnRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createCoipPoolPermission": {
        "privilege": "CreateCoipPoolPermission",
        "description": "Grants permission to allow a service to access a customer owned IP (CoIP) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "createCustomerGateway": {
        "privilege": "CreateCustomerGateway",
        "description": "Grants permission to create a customer gateway, which provides information to AWS about your customer gateway device",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "customerGateway": {
                "resourceName": "customer-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createDefaultSubnet": {
        "privilege": "CreateDefaultSubnet",
        "description": "Grants permission to create a default subnet in a specified Availability Zone in a default VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDefaultSubnet.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "createDefaultVpc": {
        "privilege": "CreateDefaultVpc",
        "description": "Grants permission to create a default VPC with a default subnet in each Availability Zone",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDefaultVpc.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "createDhcpOptions": {
        "privilege": "CreateDhcpOptions",
        "description": "Grants permission to create a set of DHCP options for a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateDhcpOptions.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "dhcpOptions": {
                "resourceName": "dhcp-options",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:DhcpOptionsID": {
                        "condition": "ec2:DhcpOptionsID",
                        "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createEgressOnlyInternetGateway": {
        "privilege": "CreateEgressOnlyInternetGateway",
        "description": "Grants permission to create an egress-only internet gateway for a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateEgressOnlyInternetGateway.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "egressOnlyInternetGateway": {
                "resourceName": "egress-only-internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createFleet": {
        "privilege": "CreateFleet",
        "description": "Grants permission to launch an EC2 Fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createFlowLogs": {
        "privilege": "CreateFlowLogs",
        "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags",
            "iam:PassRole"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcFlowLog": {
                "resourceName": "vpc-flow-log",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createFpgaImage": {
        "privilege": "CreateFpgaImage",
        "description": "Grants permission to create an Amazon FPGA Image (AFI) from a design checkpoint (DCP)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFpgaImage.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createImage": {
        "privilege": "CreateImage",
        "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "createInstanceEventWindow": {
        "privilege": "CreateInstanceEventWindow",
        "description": "Grants permission to create an event window in which scheduled events for the associated Amazon EC2 instances can run",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceEventWindow.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instanceEventWindow": {
                "resourceName": "instance-event-window",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createInstanceExportTask": {
        "privilege": "CreateInstanceExportTask",
        "description": "Grants permission to export a running or stopped instance to an Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInstanceExportTask.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "exportInstanceTask": {
                "resourceName": "export-instance-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createInternetGateway": {
        "privilege": "CreateInternetGateway",
        "description": "Grants permission to create an internet gateway for a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createIpam": {
        "privilege": "CreateIpam",
        "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpam.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags",
            "iam:CreateServiceLinkedRole"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipam": {
                "resourceName": "ipam",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createIpamPool": {
        "privilege": "CreateIpamPool",
        "description": "Grants permission to create an IP address pool for Amazon VPC IP Address Manager (IPAM), which is a collection of contiguous IP address CIDRs",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamPool.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createIpamScope": {
        "privilege": "CreateIpamScope",
        "description": "Grants permission to create an Amazon VPC IP Address Manager (IPAM) scope, which is the highest-level container within IPAM",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateIpamScope.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipam": {
                "resourceName": "ipam",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createKeyPair": {
        "privilege": "CreateKeyPair",
        "description": "Grants permission to create a 2048-bit RSA key pair",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createLaunchTemplate": {
        "privilege": "CreateLaunchTemplate",
        "description": "Grants permission to create a launch template",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createLaunchTemplateVersion": {
        "privilege": "CreateLaunchTemplateVersion",
        "description": "Grants permission to create a new version of a launch template",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createLocalGatewayRoute": {
        "privilege": "CreateLocalGatewayRoute",
        "description": "Grants permission to create a static route for a local gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "localGatewayRouteTable": {
                "resourceName": "local-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayVirtualInterfaceGroup": {
                "resourceName": "local-gateway-virtual-interface-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createLocalGatewayRouteTablePermission": {
        "privilege": "CreateLocalGatewayRouteTablePermission",
        "description": "Grants permission to allow a service to access a local gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "localGatewayRouteTable": {
                "resourceName": "local-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createLocalGatewayRouteTableVpcAssociation": {
        "privilege": "CreateLocalGatewayRouteTableVpcAssociation",
        "description": "Grants permission to associate a VPC with a local gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLocalGatewayRouteTableVpcAssociation.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "localGatewayRouteTable": {
                "resourceName": "local-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayRouteTableVpcAssociation": {
                "resourceName": "local-gateway-route-table-vpc-association",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createManagedPrefixList": {
        "privilege": "CreateManagedPrefixList",
        "description": "Grants permission to create a managed prefix list",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateManagedPrefixList.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createNatGateway": {
        "privilege": "CreateNatGateway",
        "description": "Grants permission to create a NAT gateway in a subnet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNatGateway.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "natgateway": {
                "resourceName": "natgateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createNetworkAcl": {
        "privilege": "CreateNetworkAcl",
        "description": "Grants permission to create a network ACL in a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createNetworkAclEntry": {
        "privilege": "CreateNetworkAclEntry",
        "description": "Grants permission to create a numbered entry (a rule) in a network ACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createNetworkInsightsAccessScope": {
        "privilege": "CreateNetworkInsightsAccessScope",
        "description": "Grants permission to create a Network Access Scope",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsAccessScope.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsAccessScope": {
                "resourceName": "network-insights-access-scope",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createNetworkInsightsPath": {
        "privilege": "CreateNetworkInsightsPath",
        "description": "Grants permission to create a path to analyze for reachability",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInsightsPath.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsPath": {
                "resourceName": "network-insights-path",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createNetworkInterface": {
        "privilege": "CreateNetworkInterface",
        "description": "Grants permission to create a network interface in a subnet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createNetworkInterfacePermission": {
        "privilege": "CreateNetworkInterfacePermission",
        "description": "Grants permission to create a permission for an AWS-authorized user to perform certain operations on a network interface",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterfacePermission.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createPlacementGroup": {
        "privilege": "CreatePlacementGroup",
        "description": "Grants permission to create a placement group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePlacementGroup.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createPublicIpv4Pool": {
        "privilege": "CreatePublicIpv4Pool",
        "description": "Grants permission to create a public IPv4 address pool for public IPv4 CIDRs that you own and bring to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreatePublicIpv4Pool.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsAccessScope": {
                "resourceName": "network-insights-access-scope",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createReplaceRootVolumeTask": {
        "privilege": "CreateReplaceRootVolumeTask",
        "description": "Grants permission to create a root volume replacement task",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReplaceRootVolumeTask.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "replaceRootVolumeTask": {
                "resourceName": "replace-root-volume-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "createReservedInstancesListing": {
        "privilege": "CreateReservedInstancesListing",
        "description": "Grants permission to create a listing for Standard Reserved Instances to be sold in the Reserved Instance Marketplace",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateReservedInstancesListing.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "createRestoreImageTask": {
        "privilege": "CreateRestoreImageTask",
        "description": "Grants permission to start a task that restores an AMI from an S3 object previously created by using CreateStoreImageTask",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRestoreImageTask.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createRoute": {
        "privilege": "CreateRoute",
        "description": "Grants permission to create a route in a VPC route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createRouteTable": {
        "privilege": "CreateRouteTable",
        "description": "Grants permission to create a route table for a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSecurityGroup": {
        "privilege": "CreateSecurityGroup",
        "description": "Grants permission to create a security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSnapshot": {
        "privilege": "CreateSnapshot",
        "description": "Grants permission to create a snapshot of an EBS volume and store it in Amazon S3",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshot.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSnapshots": {
        "privilege": "CreateSnapshots",
        "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSpotDatafeedSubscription": {
        "privilege": "CreateSpotDatafeedSubscription",
        "description": "Grants permission to create a data feed for Spot Instances to view Spot Instance usage logs",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSpotDatafeedSubscription.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "createStoreImageTask": {
        "privilege": "CreateStoreImageTask",
        "description": "Grants permission to store an AMI as a single object in an S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSubnet": {
        "privilege": "CreateSubnet",
        "description": "Grants permission to create a subnet in a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnet.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSubnetCidrReservation": {
        "privilege": "CreateSubnetCidrReservation",
        "description": "Grants permission to create a subnet CIDR reservation",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSubnetCidrReservation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "createTags": {
        "privilege": "CreateTags",
        "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:CreateAction": {
                "condition": "ec2:CreateAction",
                "description": "Filters access by the name of a resource-creating API action",
                "type": "String"
            },
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "capacityReservationFleet": {
                "resourceName": "capacity-reservation-fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "customerGateway": {
                "resourceName": "customer-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "dedicatedHost": {
                "resourceName": "dedicated-host",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AutoPlacement": {
                        "condition": "ec2:AutoPlacement",
                        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:HostRecovery": {
                        "condition": "ec2:HostRecovery",
                        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Quantity": {
                        "condition": "ec2:Quantity",
                        "description": "Filters access by the number of Dedicated Hosts in a request",
                        "type": "Numeric"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "dhcpOptions": {
                "resourceName": "dhcp-options",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:DhcpOptionsID": {
                        "condition": "ec2:DhcpOptionsID",
                        "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "egressOnlyInternetGateway": {
                "resourceName": "egress-only-internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "elasticGpu": {
                "resourceName": "elastic-gpu",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:ElasticGpuType": {
                        "condition": "ec2:ElasticGpuType",
                        "description": "Filters access by the type of Elastic Graphics accelerator",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "exportImageTask": {
                "resourceName": "export-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "exportInstanceTask": {
                "resourceName": "export-instance-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "hostReservation": {
                "resourceName": "host-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/${HostReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "importImageTask": {
                "resourceName": "import-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "importSnapshotTask": {
                "resourceName": "import-snapshot-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "instanceEventWindow": {
                "resourceName": "instance-event-window",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipam": {
                "resourceName": "ipam",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv4poolEc2": {
                "resourceName": "ipv4pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv6poolEc2": {
                "resourceName": "ipv6pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGateway": {
                "resourceName": "local-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayRouteTable": {
                "resourceName": "local-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayRouteTableVirtualInterfaceGroupAssociation": {
                "resourceName": "local-gateway-route-table-virtual-interface-group-association",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayRouteTableVpcAssociation": {
                "resourceName": "local-gateway-route-table-vpc-association",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayVirtualInterface": {
                "resourceName": "local-gateway-virtual-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayVirtualInterfaceGroup": {
                "resourceName": "local-gateway-virtual-interface-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "natgateway": {
                "resourceName": "natgateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "networkInsightsAccessScope": {
                "resourceName": "network-insights-access-scope",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInsightsAccessScopeAnalysis": {
                "resourceName": "network-insights-access-scope-analysis",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "replaceRootVolumeTask": {
                "resourceName": "replace-root-volume-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "reservedInstances": {
                "resourceName": "reserved-instances",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ReservedInstancesOfferingType": {
                        "condition": "ec2:ReservedInstancesOfferingType",
                        "description": "Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroupRule": {
                "resourceName": "security-group-rule",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "spotFleetRequest": {
                "resourceName": "spot-fleet-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "spotInstancesRequest": {
                "resourceName": "spot-instances-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnetCidrReservation": {
                "resourceName": "subnet-cidr-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorSession": {
                "resourceName": "traffic-mirror-session",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorTarget": {
                "resourceName": "traffic-mirror-target",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayConnectPeer": {
                "resourceName": "transit-gateway-connect-peer",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            },
            "vpcFlowLog": {
                "resourceName": "vpc-flow-log",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            },
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTrafficMirrorFilter": {
        "privilege": "CreateTrafficMirrorFilter",
        "description": "Grants permission to create a traffic mirror filter",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTrafficMirrorFilterRule": {
        "privilege": "CreateTrafficMirrorFilterRule",
        "description": "Grants permission to create a traffic mirror filter rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTrafficMirrorSession": {
        "privilege": "CreateTrafficMirrorSession",
        "description": "Grants permission to create a traffic mirror session",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorSession": {
                "resourceName": "traffic-mirror-session",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorTarget": {
                "resourceName": "traffic-mirror-target",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTrafficMirrorTarget": {
        "privilege": "CreateTrafficMirrorTarget",
        "description": "Grants permission to create a traffic mirror target",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorTarget.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorTarget": {
                "resourceName": "traffic-mirror-target",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createTransitGateway": {
        "privilege": "CreateTransitGateway",
        "description": "Grants permission to create a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGateway.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayConnect": {
        "privilege": "CreateTransitGatewayConnect",
        "description": "Grants permission to create a Connect attachment from a specified transit gateway attachment",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnect.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayConnectPeer": {
        "privilege": "CreateTransitGatewayConnectPeer",
        "description": "Grants permission to create a Connect peer between a transit gateway and an appliance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayConnectPeer.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayConnectPeer": {
                "resourceName": "transit-gateway-connect-peer",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayMulticastDomain": {
        "privilege": "CreateTransitGatewayMulticastDomain",
        "description": "Grants permission to create a multicast domain for a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayMulticastDomain.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayPeeringAttachment": {
        "privilege": "CreateTransitGatewayPeeringAttachment",
        "description": "Grants permission to request a transit gateway peering attachment between a requester and accepter transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPeeringAttachment.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayPrefixListReference": {
        "privilege": "CreateTransitGatewayPrefixListReference",
        "description": "Grants permission to create a transit gateway prefix list reference",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayPrefixListReference.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayRoute": {
        "privilege": "CreateTransitGatewayRoute",
        "description": "Grants permission to create a static route for a transit gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayRouteTable": {
        "privilege": "CreateTransitGatewayRouteTable",
        "description": "Grants permission to create a route table for a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayRouteTable.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createTransitGatewayVpcAttachment": {
        "privilege": "CreateTransitGatewayVpcAttachment",
        "description": "Grants permission to attach a VPC to a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTransitGatewayVpcAttachment.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createVolume": {
        "privilege": "CreateVolume",
        "description": "Grants permission to create an EBS volume",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createVpc": {
        "privilege": "CreateVpc",
        "description": "Grants permission to create a VPC with a specified CIDR block",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpc.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv6poolEc2": {
                "resourceName": "ipv6pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createVpcEndpoint": {
        "privilege": "CreateVpcEndpoint",
        "description": "Grants permission to create a VPC endpoint for an AWS service",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpoint.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags",
            "route53:AssociateVPCWithHostedZone"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createVpcEndpointConnectionNotification": {
        "privilege": "CreateVpcEndpointConnectionNotification",
        "description": "Grants permission to create a connection notification for a VPC endpoint or VPC endpoint service",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createVpcEndpointServiceConfiguration": {
        "privilege": "CreateVpcEndpointServiceConfiguration",
        "description": "Grants permission to create a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointServiceConfiguration.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createVpcPeeringConnection": {
        "privilege": "CreateVpcPeeringConnection",
        "description": "Grants permission to request a VPC peering connection between two VPCs",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcPeeringConnection.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createVpnConnection": {
        "privilege": "CreateVpnConnection",
        "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnection.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "customerGateway": {
                "resourceName": "customer-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            },
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createVpnConnectionRoute": {
        "privilege": "CreateVpnConnectionRoute",
        "description": "Grants permission to create a static route for a VPN connection between a virtual private gateway and a customer gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnConnectionRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createVpnGateway": {
        "privilege": "CreateVpnGateway",
        "description": "Grants permission to create a virtual private gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpnGateway.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteCarrierGateway": {
        "privilege": "DeleteCarrierGateway",
        "description": "Grants permission to delete a carrier gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCarrierGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "carrierGateway": {
                "resourceName": "carrier-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteClientVpnEndpoint": {
        "privilege": "DeleteClientVpnEndpoint",
        "description": "Grants permission to delete a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnEndpoint.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteClientVpnRoute": {
        "privilege": "DeleteClientVpnRoute",
        "description": "Grants permission to delete a route from a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteClientVpnRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteCoipPoolPermission": {
        "privilege": "DeleteCoipPoolPermission",
        "description": "Grants permission to deny a service from accessing a customer owned IP (CoIP) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "deleteCustomerGateway": {
        "privilege": "DeleteCustomerGateway",
        "description": "Grants permission to delete a customer gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "customerGateway": {
                "resourceName": "customer-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteDhcpOptions": {
        "privilege": "DeleteDhcpOptions",
        "description": "Grants permission to delete a set of DHCP options",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteDhcpOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "dhcpOptions": {
                "resourceName": "dhcp-options",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:DhcpOptionsID": {
                        "condition": "ec2:DhcpOptionsID",
                        "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteEgressOnlyInternetGateway": {
        "privilege": "DeleteEgressOnlyInternetGateway",
        "description": "Grants permission to delete an egress-only internet gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteEgressOnlyInternetGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "egressOnlyInternetGateway": {
                "resourceName": "egress-only-internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteFleets": {
        "privilege": "DeleteFleets",
        "description": "Grants permission to delete one or more EC2 Fleets",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFleets.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteFlowLogs": {
        "privilege": "DeleteFlowLogs",
        "description": "Grants permission to delete one or more flow logs",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcFlowLog": {
                "resourceName": "vpc-flow-log",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteFpgaImage": {
        "privilege": "DeleteFpgaImage",
        "description": "Grants permission to delete an Amazon FPGA Image (AFI)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFpgaImage.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteInstanceEventWindow": {
        "privilege": "DeleteInstanceEventWindow",
        "description": "Grants permission to delete the specified event window",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInstanceEventWindow.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instanceEventWindow": {
                "resourceName": "instance-event-window",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteInternetGateway": {
        "privilege": "DeleteInternetGateway",
        "description": "Grants permission to delete an internet gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteIpam": {
        "privilege": "DeleteIpam",
        "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) and remove all monitored data associated with the IPAM including the historical data for CIDRs",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpam.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipam": {
                "resourceName": "ipam",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteIpamPool": {
        "privilege": "DeleteIpamPool",
        "description": "Grants permission to delete an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamPool.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteIpamScope": {
        "privilege": "DeleteIpamScope",
        "description": "Grants permission to delete the scope for an Amazon VPC IP Address Manager (IPAM)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteIpamScope.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteKeyPair": {
        "privilege": "DeleteKeyPair",
        "description": "Grants permission to delete a key pair by removing the public key from Amazon EC2",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteKeyPair.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteLaunchTemplate": {
        "privilege": "DeleteLaunchTemplate",
        "description": "Grants permission to delete a launch template and its associated versions",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplate.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteLaunchTemplateVersions": {
        "privilege": "DeleteLaunchTemplateVersions",
        "description": "Grants permission to delete one or more versions of a launch template",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLaunchTemplateVersions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteLocalGatewayRoute": {
        "privilege": "DeleteLocalGatewayRoute",
        "description": "Grants permission to delete a route from a local gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "localGatewayRouteTable": {
                "resourceName": "local-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteLocalGatewayRouteTablePermission": {
        "privilege": "DeleteLocalGatewayRouteTablePermission",
        "description": "Grants permission to deny a service from accessing a local gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "localGatewayRouteTable": {
                "resourceName": "local-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteLocalGatewayRouteTableVpcAssociation": {
        "privilege": "DeleteLocalGatewayRouteTableVpcAssociation",
        "description": "Grants permission to delete an association between a VPC and local gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteLocalGatewayRouteTableVpcAssociation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "localGatewayRouteTableVpcAssociation": {
                "resourceName": "local-gateway-route-table-vpc-association",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteManagedPrefixList": {
        "privilege": "DeleteManagedPrefixList",
        "description": "Grants permission to delete a managed prefix list",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteManagedPrefixList.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteNatGateway": {
        "privilege": "DeleteNatGateway",
        "description": "Grants permission to delete a NAT gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNatGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "natgateway": {
                "resourceName": "natgateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteNetworkAcl": {
        "privilege": "DeleteNetworkAcl",
        "description": "Grants permission to delete a network ACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteNetworkAclEntry": {
        "privilege": "DeleteNetworkAclEntry",
        "description": "Grants permission to delete an inbound or outbound entry (rule) from a network ACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteNetworkInsightsAccessScope": {
        "privilege": "DeleteNetworkInsightsAccessScope",
        "description": "Grants permission to delete a Network Access Scope",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScope.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsAccessScope": {
                "resourceName": "network-insights-access-scope",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteNetworkInsightsAccessScopeAnalysis": {
        "privilege": "DeleteNetworkInsightsAccessScopeAnalysis",
        "description": "Grants permission to delete a Network Access Scope analysis",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAccessScopeAnalysis.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsAccessScopeAnalysis": {
                "resourceName": "network-insights-access-scope-analysis",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteNetworkInsightsAnalysis": {
        "privilege": "DeleteNetworkInsightsAnalysis",
        "description": "Grants permission to delete a network insights analysis",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsAnalysis.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsAnalysis": {
                "resourceName": "network-insights-analysis",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteNetworkInsightsPath": {
        "privilege": "DeleteNetworkInsightsPath",
        "description": "Grants permission to delete a network insights path",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInsightsPath.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsPath": {
                "resourceName": "network-insights-path",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteNetworkInterface": {
        "privilege": "DeleteNetworkInterface",
        "description": "Grants permission to delete a detached network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterface.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteNetworkInterfacePermission": {
        "privilege": "DeleteNetworkInterfacePermission",
        "description": "Grants permission to delete a permission that is associated with a network interface",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterfacePermission.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deletePlacementGroup": {
        "privilege": "DeletePlacementGroup",
        "description": "Grants permission to delete a placement group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePlacementGroup.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deletePublicIpv4Pool": {
        "privilege": "DeletePublicIpv4Pool",
        "description": "Grants permission to delete a public IPv4 address pool for public IPv4 CIDRs that you own and brought to Amazon to manage with Amazon VPC IP Address Manager (IPAM)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeletePublicIpv4Pool.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipv4poolEc2": {
                "resourceName": "ipv4pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteQueuedReservedInstances": {
        "privilege": "DeleteQueuedReservedInstances",
        "description": "Grants permission to delete the queued purchases for the specified Reserved Instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteQueuedReservedInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "deleteResourcePolicy": {
        "privilege": "DeleteResourcePolicy",
        "description": "Grants permission to remove an IAM policy that enables cross-account sharing from a resource",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteRoute": {
        "privilege": "DeleteRoute",
        "description": "Grants permission to delete a route from a route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteRouteTable": {
        "privilege": "DeleteRouteTable",
        "description": "Grants permission to delete a route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteSecurityGroup": {
        "privilege": "DeleteSecurityGroup",
        "description": "Grants permission to delete a security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteSnapshot": {
        "privilege": "DeleteSnapshot",
        "description": "Grants permission to delete a snapshot of an EBS volume",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSnapshot.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "deleteSpotDatafeedSubscription": {
        "privilege": "DeleteSpotDatafeedSubscription",
        "description": "Grants permission to delete a data feed for Spot Instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSpotDatafeedSubscription.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "deleteSubnet": {
        "privilege": "DeleteSubnet",
        "description": "Grants permission to delete a subnet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSubnet.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteSubnetCidrReservation": {
        "privilege": "DeleteSubnetCidrReservation",
        "description": "Grants permission to delete a subnet CIDR reservation",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSubnetCidrReservation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "deleteTags": {
        "privilege": "DeleteTags",
        "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTags.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "capacityReservationFleet": {
                "resourceName": "capacity-reservation-fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "customerGateway": {
                "resourceName": "customer-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "dedicatedHost": {
                "resourceName": "dedicated-host",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AutoPlacement": {
                        "condition": "ec2:AutoPlacement",
                        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:HostRecovery": {
                        "condition": "ec2:HostRecovery",
                        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Quantity": {
                        "condition": "ec2:Quantity",
                        "description": "Filters access by the number of Dedicated Hosts in a request",
                        "type": "Numeric"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "dhcpOptions": {
                "resourceName": "dhcp-options",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:DhcpOptionsID": {
                        "condition": "ec2:DhcpOptionsID",
                        "description": "Filters access by the ID of a dynamic host configuration protocol (DHCP) options set",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "egressOnlyInternetGateway": {
                "resourceName": "egress-only-internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "elasticGpu": {
                "resourceName": "elastic-gpu",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:ElasticGpuType": {
                        "condition": "ec2:ElasticGpuType",
                        "description": "Filters access by the type of Elastic Graphics accelerator",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "exportImageTask": {
                "resourceName": "export-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "exportInstanceTask": {
                "resourceName": "export-instance-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "hostReservation": {
                "resourceName": "host-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/${HostReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "importImageTask": {
                "resourceName": "import-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "importSnapshotTask": {
                "resourceName": "import-snapshot-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "instanceEventWindow": {
                "resourceName": "instance-event-window",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipam": {
                "resourceName": "ipam",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv4poolEc2": {
                "resourceName": "ipv4pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv6poolEc2": {
                "resourceName": "ipv6pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGateway": {
                "resourceName": "local-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayRouteTable": {
                "resourceName": "local-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayRouteTableVirtualInterfaceGroupAssociation": {
                "resourceName": "local-gateway-route-table-virtual-interface-group-association",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayRouteTableVpcAssociation": {
                "resourceName": "local-gateway-route-table-vpc-association",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayVirtualInterface": {
                "resourceName": "local-gateway-virtual-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGatewayVirtualInterfaceGroup": {
                "resourceName": "local-gateway-virtual-interface-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "natgateway": {
                "resourceName": "natgateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "networkInsightsAccessScope": {
                "resourceName": "network-insights-access-scope",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInsightsAccessScopeAnalysis": {
                "resourceName": "network-insights-access-scope-analysis",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "replaceRootVolumeTask": {
                "resourceName": "replace-root-volume-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "reservedInstances": {
                "resourceName": "reserved-instances",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ReservedInstancesOfferingType": {
                        "condition": "ec2:ReservedInstancesOfferingType",
                        "description": "Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroupRule": {
                "resourceName": "security-group-rule",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "spotFleetRequest": {
                "resourceName": "spot-fleet-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "spotInstancesRequest": {
                "resourceName": "spot-instances-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnetCidrReservation": {
                "resourceName": "subnet-cidr-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorSession": {
                "resourceName": "traffic-mirror-session",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorTarget": {
                "resourceName": "traffic-mirror-target",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayConnectPeer": {
                "resourceName": "transit-gateway-connect-peer",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            },
            "vpcFlowLog": {
                "resourceName": "vpc-flow-log",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            },
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTrafficMirrorFilter": {
        "privilege": "DeleteTrafficMirrorFilter",
        "description": "Grants permission to delete a traffic mirror filter",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilter.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTrafficMirrorFilterRule": {
        "privilege": "DeleteTrafficMirrorFilterRule",
        "description": "Grants permission to delete a traffic mirror filter rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorFilterRule.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorFilterRule": {
                "resourceName": "traffic-mirror-filter-rule",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
                "required": true,
                "resourceConditions": {
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTrafficMirrorSession": {
        "privilege": "DeleteTrafficMirrorSession",
        "description": "Grants permission to delete a traffic mirror session",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorSession.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorSession": {
                "resourceName": "traffic-mirror-session",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTrafficMirrorTarget": {
        "privilege": "DeleteTrafficMirrorTarget",
        "description": "Grants permission to delete a traffic mirror target",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTrafficMirrorTarget.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorTarget": {
                "resourceName": "traffic-mirror-target",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGateway": {
        "privilege": "DeleteTransitGateway",
        "description": "Grants permission to delete a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayConnect": {
        "privilege": "DeleteTransitGatewayConnect",
        "description": "Grants permission to delete a transit gateway connect attachment",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnect.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayConnectPeer": {
        "privilege": "DeleteTransitGatewayConnectPeer",
        "description": "Grants permission to delete a transit gateway connect peer",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayConnectPeer.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayConnectPeer": {
                "resourceName": "transit-gateway-connect-peer",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayMulticastDomain": {
        "privilege": "DeleteTransitGatewayMulticastDomain",
        "description": "Grants permission to delete a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayMulticastDomain.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayPeeringAttachment": {
        "privilege": "DeleteTransitGatewayPeeringAttachment",
        "description": "Grants permission to delete a peering attachment from a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPeeringAttachment.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayPrefixListReference": {
        "privilege": "DeleteTransitGatewayPrefixListReference",
        "description": "Grants permission to delete a transit gateway prefix list reference",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayPrefixListReference.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayRoute": {
        "privilege": "DeleteTransitGatewayRoute",
        "description": "Grants permission to delete a route from a transit gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayRouteTable": {
        "privilege": "DeleteTransitGatewayRouteTable",
        "description": "Grants permission to delete a transit gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayRouteTable.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteTransitGatewayVpcAttachment": {
        "privilege": "DeleteTransitGatewayVpcAttachment",
        "description": "Grants permission to delete a VPC attachment from a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteTransitGatewayVpcAttachment.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVolume": {
        "privilege": "DeleteVolume",
        "description": "Grants permission to delete an EBS volume",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVolume.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpc": {
        "privilege": "DeleteVpc",
        "description": "Grants permission to delete a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpc.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpcEndpointConnectionNotifications": {
        "privilege": "DeleteVpcEndpointConnectionNotifications",
        "description": "Grants permission to delete one or more VPC endpoint connection notifications",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointConnectionNotifications.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpcEndpointServiceConfigurations": {
        "privilege": "DeleteVpcEndpointServiceConfigurations",
        "description": "Grants permission to delete one or more VPC endpoint service configurations",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpointServiceConfigurations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpcEndpoints": {
        "privilege": "DeleteVpcEndpoints",
        "description": "Grants permission to delete one or more VPC endpoints",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcEndpoints.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpcPeeringConnection": {
        "privilege": "DeleteVpcPeeringConnection",
        "description": "Grants permission to delete a VPC peering connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpcPeeringConnection.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpnConnection": {
        "privilege": "DeleteVpnConnection",
        "description": "Grants permission to delete a VPN connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnection.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpnConnectionRoute": {
        "privilege": "DeleteVpnConnectionRoute",
        "description": "Grants permission to delete a static route for a VPN connection between a virtual private gateway and a customer gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnConnectionRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVpnGateway": {
        "privilege": "DeleteVpnGateway",
        "description": "Grants permission to delete a virtual private gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteVpnGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deprovisionByoipCidr": {
        "privilege": "DeprovisionByoipCidr",
        "description": "Grants permission to release an IP address range that was provisioned through bring your own IP addresses (BYOIP), and to delete the corresponding address pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionByoipCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "deprovisionIpamPoolCidr": {
        "privilege": "DeprovisionIpamPoolCidr",
        "description": "Grants permission to deprovision a CIDR provisioned from an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionIpamPoolCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deprovisionPublicIpv4PoolCidr": {
        "privilege": "DeprovisionPublicIpv4PoolCidr",
        "description": "Grants permission to deprovision a CIDR from a public IPv4 pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionPublicIpv4PoolCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipv4poolEc2": {
                "resourceName": "ipv4pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deregisterImage": {
        "privilege": "DeregisterImage",
        "description": "Grants permission to deregister an Amazon Machine Image (AMI)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterImage.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deregisterInstanceEventNotificationAttributes": {
        "privilege": "DeregisterInstanceEventNotificationAttributes",
        "description": "Grants permission to remove tags from the set of tags to include in notifications about scheduled events for your instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterInstanceEventNotificationAttributes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "deregisterTransitGatewayMulticastGroupMembers": {
        "privilege": "DeregisterTransitGatewayMulticastGroupMembers",
        "description": "Grants permission to deregister one or more network interface members from a group IP address in a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupMembers.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deregisterTransitGatewayMulticastGroupSources": {
        "privilege": "DeregisterTransitGatewayMulticastGroupSources",
        "description": "Grants permission to deregister one or more network interface sources from a group IP address in a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterTransitGatewayMulticastGroupSources.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeAccountAttributes": {
        "privilege": "DescribeAccountAttributes",
        "description": "Grants permission to describe the attributes of the AWS account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAccountAttributes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeAddresses": {
        "privilege": "DescribeAddresses",
        "description": "Grants permission to describe one or more Elastic IP addresses",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddresses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeAddressesAttribute": {
        "privilege": "DescribeAddressesAttribute",
        "description": "Grants permission to describe the attributes of the specified Elastic IP addresses",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddressesAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeAggregateIdFormat": {
        "privilege": "DescribeAggregateIdFormat",
        "description": "Grants permission to describe the longer ID format settings for all resource types",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAggregateIdFormat.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeAvailabilityZones": {
        "privilege": "DescribeAvailabilityZones",
        "description": "Grants permission to describe one or more of the Availability Zones that are available to you",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeBundleTasks": {
        "privilege": "DescribeBundleTasks",
        "description": "Grants permission to describe one or more bundling tasks",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeBundleTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeByoipCidrs": {
        "privilege": "DescribeByoipCidrs",
        "description": "Grants permission to describe the IP address ranges that were provisioned through bring your own IP addresses (BYOIP)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeByoipCidrs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeCapacityReservationFleets": {
        "privilege": "DescribeCapacityReservationFleets",
        "description": "Grants permission to describe one or more Capacity Reservation Fleets",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCapacityReservationFleets.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeCapacityReservations": {
        "privilege": "DescribeCapacityReservations",
        "description": "Grants permission to describe one or more Capacity Reservations",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCapacityReservations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeCarrierGateways": {
        "privilege": "DescribeCarrierGateways",
        "description": "Grants permission to describe one or more Carrier Gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCarrierGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeClassicLinkInstances": {
        "privilege": "DescribeClassicLinkInstances",
        "description": "Grants permission to describe one or more linked EC2-Classic instances",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClassicLinkInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeClientVpnAuthorizationRules": {
        "privilege": "DescribeClientVpnAuthorizationRules",
        "description": "Grants permission to describe the authorization rules for a Client VPN endpoint",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnAuthorizationRules.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "describeClientVpnConnections": {
        "privilege": "DescribeClientVpnConnections",
        "description": "Grants permission to describe active client connections and connections that have been terminated within the last 60 minutes for a Client VPN endpoint",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnConnections.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "describeClientVpnEndpoints": {
        "privilege": "DescribeClientVpnEndpoints",
        "description": "Grants permission to describe one or more Client VPN endpoints",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnEndpoints.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "describeClientVpnRoutes": {
        "privilege": "DescribeClientVpnRoutes",
        "description": "Grants permission to describe the routes for a Client VPN endpoint",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnRoutes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "describeClientVpnTargetNetworks": {
        "privilege": "DescribeClientVpnTargetNetworks",
        "description": "Grants permission to describe the target networks that are associated with a Client VPN endpoint",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnTargetNetworks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "describeCoipPools": {
        "privilege": "DescribeCoipPools",
        "description": "Grants permission to describe the specified customer-owned address pools or all of your customer-owned address pools",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeConversionTasks": {
        "privilege": "DescribeConversionTasks",
        "description": "Grants permission to describe one or more conversion tasks",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeConversionTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeCustomerGateways": {
        "privilege": "DescribeCustomerGateways",
        "description": "Grants permission to describe one or more customer gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeDhcpOptions": {
        "privilege": "DescribeDhcpOptions",
        "description": "Grants permission to describe one or more DHCP options sets",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeDhcpOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeEgressOnlyInternetGateways": {
        "privilege": "DescribeEgressOnlyInternetGateways",
        "description": "Grants permission to describe one or more egress-only internet gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeEgressOnlyInternetGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeElasticGpus": {
        "privilege": "DescribeElasticGpus",
        "description": "Grants permission to describe an Elastic Graphics accelerator that is associated with an instance",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeElasticGpus.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeExportImageTasks": {
        "privilege": "DescribeExportImageTasks",
        "description": "Grants permission to describe one or more export image tasks",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeExportImageTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeExportTasks": {
        "privilege": "DescribeExportTasks",
        "description": "Grants permission to describe one or more export instance tasks",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeExportTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeFastLaunchImages": {
        "privilege": "DescribeFastLaunchImages",
        "description": "Grants permission to describe fast-launch enabled Windows AMIs",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFastLaunchImages.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeFastSnapshotRestores": {
        "privilege": "DescribeFastSnapshotRestores",
        "description": "Grants permission to describe the state of fast snapshot restores for snapshots",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFastSnapshotRestores.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeFleetHistory": {
        "privilege": "DescribeFleetHistory",
        "description": "Grants permission to describe the events for an EC2 Fleet during a specified time",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetHistory.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeFleetInstances": {
        "privilege": "DescribeFleetInstances",
        "description": "Grants permission to describe the running instances for an EC2 Fleet",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleetInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeFleets": {
        "privilege": "DescribeFleets",
        "description": "Grants permission to describe one or more EC2 Fleets",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFleets.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeFlowLogs": {
        "privilege": "DescribeFlowLogs",
        "description": "Grants permission to describe one or more flow logs",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFlowLogs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeFpgaImageAttribute": {
        "privilege": "DescribeFpgaImageAttribute",
        "description": "Grants permission to describe the attributes of an Amazon FPGA Image (AFI)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFpgaImageAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeFpgaImages": {
        "privilege": "DescribeFpgaImages",
        "description": "Grants permission to describe one or more Amazon FPGA Images (AFIs)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeFpgaImages.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeHostReservationOfferings": {
        "privilege": "DescribeHostReservationOfferings",
        "description": "Grants permission to describe the Dedicated Host Reservations that are available to purchase",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHostReservationOfferings.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeHostReservations": {
        "privilege": "DescribeHostReservations",
        "description": "Grants permission to describe the Dedicated Host Reservations that are associated with Dedicated Hosts in the AWS account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHostReservations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeHosts": {
        "privilege": "DescribeHosts",
        "description": "Grants permission to describe one or more Dedicated Hosts",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHosts.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeIamInstanceProfileAssociations": {
        "privilege": "DescribeIamInstanceProfileAssociations",
        "description": "Grants permission to describe the IAM instance profile associations",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIamInstanceProfileAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeIdFormat": {
        "privilege": "DescribeIdFormat",
        "description": "Grants permission to describe the ID format settings for resources",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIdFormat.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeIdentityIdFormat": {
        "privilege": "DescribeIdentityIdFormat",
        "description": "Grants permission to describe the ID format settings for resources for an IAM user, IAM role, or root user",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIdentityIdFormat.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeImageAttribute": {
        "privilege": "DescribeImageAttribute",
        "description": "Grants permission to describe an attribute of an Amazon Machine Image (AMI)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeImages": {
        "privilege": "DescribeImages",
        "description": "Grants permission to describe one or more images (AMIs, AKIs, and ARIs)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeImportImageTasks": {
        "privilege": "DescribeImportImageTasks",
        "description": "Grants permission to describe import virtual machine or import snapshot tasks",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImportImageTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeImportSnapshotTasks": {
        "privilege": "DescribeImportSnapshotTasks",
        "description": "Grants permission to describe import snapshot tasks",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImportSnapshotTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInstanceAttribute": {
        "privilege": "DescribeInstanceAttribute",
        "description": "Grants permission to describe the attributes of an instance",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeInstanceCreditSpecifications": {
        "privilege": "DescribeInstanceCreditSpecifications",
        "description": "Grants permission to describe the credit option for CPU usage of one or more burstable performance instances",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceCreditSpecifications.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInstanceEventNotificationAttributes": {
        "privilege": "DescribeInstanceEventNotificationAttributes",
        "description": "Grants permission to describe the set of tags to include in notifications about scheduled events for your instances",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceEventNotificationAttributes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInstanceEventWindows": {
        "privilege": "DescribeInstanceEventWindows",
        "description": "Grants permission to describe the specified event windows or all event windows",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceEventWindows.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInstanceStatus": {
        "privilege": "DescribeInstanceStatus",
        "description": "Grants permission to describe the status of one or more instances",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceStatus.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInstanceTypeOfferings": {
        "privilege": "DescribeInstanceTypeOfferings",
        "description": "Grants permission to describe the set of instance types that are offered in a location",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInstanceTypes": {
        "privilege": "DescribeInstanceTypes",
        "description": "Grants permission to describe the details of instance types that are offered in a location",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInstances": {
        "privilege": "DescribeInstances",
        "description": "Grants permission to describe one or more instances",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeInternetGateways": {
        "privilege": "DescribeInternetGateways",
        "description": "Grants permission to describe one or more internet gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeIpamPools": {
        "privilege": "DescribeIpamPools",
        "description": "Grants permission to describe Amazon VPC IP Address Manager (IPAM) pools",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpamPools.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeIpamScopes": {
        "privilege": "DescribeIpamScopes",
        "description": "Grants permission to describe Amazon VPC IP Address Manager (IPAM) scopes",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpamScopes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeIpams": {
        "privilege": "DescribeIpams",
        "description": "Grants permission to describe an Amazon VPC IP Address Manager (IPAM)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpams.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeIpv6Pools": {
        "privilege": "DescribeIpv6Pools",
        "description": "Grants permission to describe one or more IPv6 address pools",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeIpv6Pools.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeKeyPairs": {
        "privilege": "DescribeKeyPairs",
        "description": "Grants permission to describe one or more key pairs",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLaunchTemplateVersions": {
        "privilege": "DescribeLaunchTemplateVersions",
        "description": "Grants permission to describe one or more launch template versions",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLaunchTemplates": {
        "privilege": "DescribeLaunchTemplates",
        "description": "Grants permission to describe one or more launch templates",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLocalGatewayRouteTablePermissions": {
        "privilege": "DescribeLocalGatewayRouteTablePermissions",
        "description": "Grants permission to allow a service to describe local gateway route table permissions",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/outposts/latest/userguide/identity-access-management.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
        "privilege": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "description": "Grants permission to describe the associations between virtual interface groups and local gateway route tables",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLocalGatewayRouteTableVpcAssociations": {
        "privilege": "DescribeLocalGatewayRouteTableVpcAssociations",
        "description": "Grants permission to describe an association between VPCs and local gateway route tables",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTableVpcAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLocalGatewayRouteTables": {
        "privilege": "DescribeLocalGatewayRouteTables",
        "description": "Grants permission to describe one or more local gateway route tables",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLocalGatewayVirtualInterfaceGroups": {
        "privilege": "DescribeLocalGatewayVirtualInterfaceGroups",
        "description": "Grants permission to describe local gateway virtual interface groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaceGroups.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLocalGatewayVirtualInterfaces": {
        "privilege": "DescribeLocalGatewayVirtualInterfaces",
        "description": "Grants permission to describe local gateway virtual interfaces",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaces.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeLocalGateways": {
        "privilege": "DescribeLocalGateways",
        "description": "Grants permission to describe one or more local gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeManagedPrefixLists": {
        "privilege": "DescribeManagedPrefixLists",
        "description": "Grants permission to describe your managed prefix lists and any AWS-managed prefix lists",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeMovingAddresses": {
        "privilege": "DescribeMovingAddresses",
        "description": "Grants permission to describe Elastic IP addresses that are being moved to the EC2-VPC platform",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeMovingAddresses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNatGateways": {
        "privilege": "DescribeNatGateways",
        "description": "Grants permission to describe one or more NAT gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkAcls": {
        "privilege": "DescribeNetworkAcls",
        "description": "Grants permission to describe one or more network ACLs",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkInsightsAccessScopeAnalyses": {
        "privilege": "DescribeNetworkInsightsAccessScopeAnalyses",
        "description": "Grants permission to describe one or more Network Access Scope analyses",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAccessScopeAnalyses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkInsightsAccessScopes": {
        "privilege": "DescribeNetworkInsightsAccessScopes",
        "description": "Grants permission to describe the Network Access Scopes",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAccessScopes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkInsightsAnalyses": {
        "privilege": "DescribeNetworkInsightsAnalyses",
        "description": "Grants permission to describe one or more network insights analyses",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkInsightsPaths": {
        "privilege": "DescribeNetworkInsightsPaths",
        "description": "Grants permission to describe one or more network insights paths",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsPaths.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkInterfaceAttribute": {
        "privilege": "DescribeNetworkInterfaceAttribute",
        "description": "Grants permission to describe a network interface attribute",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaceAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkInterfacePermissions": {
        "privilege": "DescribeNetworkInterfacePermissions",
        "description": "Grants permission to describe the permissions that are associated with a network interface",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfacePermissions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeNetworkInterfaces": {
        "privilege": "DescribeNetworkInterfaces",
        "description": "Grants permission to describe one or more network interfaces",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describePlacementGroups": {
        "privilege": "DescribePlacementGroups",
        "description": "Grants permission to describe one or more placement groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePlacementGroups.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describePrefixLists": {
        "privilege": "DescribePrefixLists",
        "description": "Grants permission to describe available AWS services in a prefix list format",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describePrincipalIdFormat": {
        "privilege": "DescribePrincipalIdFormat",
        "description": "Grants permission to describe the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrincipalIdFormat.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describePublicIpv4Pools": {
        "privilege": "DescribePublicIpv4Pools",
        "description": "Grants permission to describe one or more IPv4 address pools",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeRegions": {
        "privilege": "DescribeRegions",
        "description": "Grants permission to describe one or more AWS Regions that are currently available in your account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeReplaceRootVolumeTasks": {
        "privilege": "DescribeReplaceRootVolumeTasks",
        "description": "Grants permission to describe a root volume replacement task",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReplaceRootVolumeTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeReservedInstances": {
        "privilege": "DescribeReservedInstances",
        "description": "Grants permission to describe one or more purchased Reserved Instances in your account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeReservedInstancesListings": {
        "privilege": "DescribeReservedInstancesListings",
        "description": "Grants permission to describe your account's Reserved Instance listings in the Reserved Instance Marketplace",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesListings.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeReservedInstancesModifications": {
        "privilege": "DescribeReservedInstancesModifications",
        "description": "Grants permission to describe the modifications made to one or more Reserved Instances",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesModifications.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeReservedInstancesOfferings": {
        "privilege": "DescribeReservedInstancesOfferings",
        "description": "Grants permission to describe the Reserved Instance offerings that are available for purchase",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeReservedInstancesOfferings.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeRouteTables": {
        "privilege": "DescribeRouteTables",
        "description": "Grants permission to describe one or more route tables",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeScheduledInstanceAvailability": {
        "privilege": "DescribeScheduledInstanceAvailability",
        "description": "Grants permission to find available schedules for Scheduled Instances",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeScheduledInstanceAvailability.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeScheduledInstances": {
        "privilege": "DescribeScheduledInstances",
        "description": "Grants permission to describe one or more Scheduled Instances in your account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeScheduledInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSecurityGroupReferences": {
        "privilege": "DescribeSecurityGroupReferences",
        "description": "Grants permission to describe the VPCs on the other side of a VPC peering connection that are referencing specified VPC security groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupReferences.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSecurityGroupRules": {
        "privilege": "DescribeSecurityGroupRules",
        "description": "Grants permission to describe one or more of your security group rules",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupRules.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSecurityGroups": {
        "privilege": "DescribeSecurityGroups",
        "description": "Grants permission to describe one or more security groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSnapshotAttribute": {
        "privilege": "DescribeSnapshotAttribute",
        "description": "Grants permission to describe an attribute of a snapshot",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshotAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "describeSnapshotTierStatus": {
        "privilege": "DescribeSnapshotTierStatus",
        "description": "Grants permission to describe the storage tier status for Amazon EBS snapshots",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshotTierStatus.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSnapshots": {
        "privilege": "DescribeSnapshots",
        "description": "Grants permission to describe one or more EBS snapshots",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSpotDatafeedSubscription": {
        "privilege": "DescribeSpotDatafeedSubscription",
        "description": "Grants permission to describe the data feed for Spot Instances",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotDatafeedSubscription.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSpotFleetInstances": {
        "privilege": "DescribeSpotFleetInstances",
        "description": "Grants permission to describe the running instances for a Spot Fleet",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "spotFleetRequest": {
                "resourceName": "spot-fleet-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeSpotFleetRequestHistory": {
        "privilege": "DescribeSpotFleetRequestHistory",
        "description": "Grants permission to describe the events for a Spot Fleet request during a specified time",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetRequestHistory.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "spotFleetRequest": {
                "resourceName": "spot-fleet-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeSpotFleetRequests": {
        "privilege": "DescribeSpotFleetRequests",
        "description": "Grants permission to describe one or more Spot Fleet requests",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotFleetRequests.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSpotInstanceRequests": {
        "privilege": "DescribeSpotInstanceRequests",
        "description": "Grants permission to describe one or more Spot Instance requests",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotInstanceRequests.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeSpotPriceHistory": {
        "privilege": "DescribeSpotPriceHistory",
        "description": "Grants permission to describe the Spot Instance price history",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotPriceHistory.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeStaleSecurityGroups": {
        "privilege": "DescribeStaleSecurityGroups",
        "description": "Grants permission to describe the stale security group rules for security groups in a specified VPC",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeStaleSecurityGroups.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeStoreImageTasks": {
        "privilege": "DescribeStoreImageTasks",
        "description": "Grants permission to describe the progress of the AMI store tasks",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeStoreImageTasks.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeSubnets": {
        "privilege": "DescribeSubnets",
        "description": "Grants permission to describe one or more subnets",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTags": {
        "privilege": "DescribeTags",
        "description": "Grants permission to describe one or more tags for an Amazon EC2 resource",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTags.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTrafficMirrorFilters": {
        "privilege": "DescribeTrafficMirrorFilters",
        "description": "Grants permission to describe one or more traffic mirror filters",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorFilters.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTrafficMirrorSessions": {
        "privilege": "DescribeTrafficMirrorSessions",
        "description": "Grants permission to describe one or more traffic mirror sessions",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorSessions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTrafficMirrorTargets": {
        "privilege": "DescribeTrafficMirrorTargets",
        "description": "Grants permission to describe one or more traffic mirror targets",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrafficMirrorTargets.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGatewayAttachments": {
        "privilege": "DescribeTransitGatewayAttachments",
        "description": "Grants permission to describe one or more attachments between resources and transit gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGatewayConnectPeers": {
        "privilege": "DescribeTransitGatewayConnectPeers",
        "description": "Grants permission to describe one or more transit gateway connect peers",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayConnectPeers.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGatewayConnects": {
        "privilege": "DescribeTransitGatewayConnects",
        "description": "Grants permission to describe one or more transit gateway connect attachments",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayConnects.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGatewayMulticastDomains": {
        "privilege": "DescribeTransitGatewayMulticastDomains",
        "description": "Grants permission to describe one or more transit gateway multicast domains",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGatewayPeeringAttachments": {
        "privilege": "DescribeTransitGatewayPeeringAttachments",
        "description": "Grants permission to describe one or more transit gateway peering attachments",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGatewayRouteTables": {
        "privilege": "DescribeTransitGatewayRouteTables",
        "description": "Grants permission to describe one or more transit gateway route tables",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTables.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGatewayVpcAttachments": {
        "privilege": "DescribeTransitGatewayVpcAttachments",
        "description": "Grants permission to describe one or more VPC attachments on a transit gateway",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTransitGateways": {
        "privilege": "DescribeTransitGateways",
        "description": "Grants permission to describe one or more transit gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeTrunkInterfaceAssociations": {
        "privilege": "DescribeTrunkInterfaceAssociations",
        "description": "Grants permission to describe one or more network interface trunk associations",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTrunkInterfaceAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVolumeAttribute": {
        "privilege": "DescribeVolumeAttribute",
        "description": "Grants permission to describe an attribute of an EBS volume",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumeAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeVolumeStatus": {
        "privilege": "DescribeVolumeStatus",
        "description": "Grants permission to describe the status of one or more EBS volumes",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumeStatus.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVolumes": {
        "privilege": "DescribeVolumes",
        "description": "Grants permission to describe one or more EBS volumes",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVolumesModifications": {
        "privilege": "DescribeVolumesModifications",
        "description": "Grants permission to describe the current modification status of one or more EBS volumes",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumesModifications.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcAttribute": {
        "privilege": "DescribeVpcAttribute",
        "description": "Grants permission to describe an attribute of a VPC",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeVpcClassicLink": {
        "privilege": "DescribeVpcClassicLink",
        "description": "Grants permission to describe the ClassicLink status of one or more VPCs",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcClassicLink.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcClassicLinkDnsSupport": {
        "privilege": "DescribeVpcClassicLinkDnsSupport",
        "description": "Grants permission to describe the ClassicLink DNS support status of one or more VPCs",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcClassicLinkDnsSupport.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcEndpointConnectionNotifications": {
        "privilege": "DescribeVpcEndpointConnectionNotifications",
        "description": "Grants permission to describe the connection notifications for VPC endpoints and VPC endpoint services",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointConnectionNotifications.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcEndpointConnections": {
        "privilege": "DescribeVpcEndpointConnections",
        "description": "Grants permission to describe the VPC endpoint connections to your VPC endpoint services",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointConnections.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcEndpointServiceConfigurations": {
        "privilege": "DescribeVpcEndpointServiceConfigurations",
        "description": "Grants permission to describe VPC endpoint service configurations (your services)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServiceConfigurations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcEndpointServicePermissions": {
        "privilege": "DescribeVpcEndpointServicePermissions",
        "description": "Grants permission to describe the principals (service consumers) that are permitted to discover your VPC endpoint service",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServicePermissions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcEndpointServices": {
        "privilege": "DescribeVpcEndpointServices",
        "description": "Grants permission to describe all supported AWS services that can be specified when creating a VPC endpoint",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcEndpoints": {
        "privilege": "DescribeVpcEndpoints",
        "description": "Grants permission to describe one or more VPC endpoints",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcPeeringConnections": {
        "privilege": "DescribeVpcPeeringConnections",
        "description": "Grants permission to describe one or more VPC peering connections",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpcs": {
        "privilege": "DescribeVpcs",
        "description": "Grants permission to describe one or more VPCs",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpnConnections": {
        "privilege": "DescribeVpnConnections",
        "description": "Grants permission to describe one or more VPN connections",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "describeVpnGateways": {
        "privilege": "DescribeVpnGateways",
        "description": "Grants permission to describe one or more virtual private gateways",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "detachClassicLinkVpc": {
        "privilege": "DetachClassicLinkVpc",
        "description": "Grants permission to unlink (detach) a linked EC2-Classic instance from a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachClassicLinkVpc.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "detachInternetGateway": {
        "privilege": "DetachInternetGateway",
        "description": "Grants permission to detach an internet gateway from a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "detachNetworkInterface": {
        "privilege": "DetachNetworkInterface",
        "description": "Grants permission to detach a network interface from an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachNetworkInterface.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "detachVolume": {
        "privilege": "DetachVolume",
        "description": "Grants permission to detach an EBS volume from an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVolume.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "detachVpnGateway": {
        "privilege": "DetachVpnGateway",
        "description": "Grants permission to detach a virtual private gateway from a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachVpnGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableEbsEncryptionByDefault": {
        "privilege": "DisableEbsEncryptionByDefault",
        "description": "Grants permission to disable EBS encryption by default for your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "disableFastLaunch": {
        "privilege": "DisableFastLaunch",
        "description": "Grants permission to disable faster launching for Windows AMIs",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastLaunch.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableFastSnapshotRestores": {
        "privilege": "DisableFastSnapshotRestores",
        "description": "Grants permission to disable fast snapshot restores for one or more snapshots in specified Availability Zones",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableFastSnapshotRestores.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "disableImageDeprecation": {
        "privilege": "DisableImageDeprecation",
        "description": "Grants permission to cancel the deprecation of the specified AMI",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableImageDeprecation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableIpamOrganizationAdminAccount": {
        "privilege": "DisableIpamOrganizationAdminAccount",
        "description": "Grants permission to disable an AWS Organizations member account as an Amazon VPC IP Address Manager (IPAM) admin account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableIpamOrganizationAdminAccount.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "disableSerialConsoleAccess": {
        "privilege": "DisableSerialConsoleAccess",
        "description": "Grants permission to disable access to the EC2 serial console of all instances for your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableSerialConsoleAccess.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "disableTransitGatewayRouteTablePropagation": {
        "privilege": "DisableTransitGatewayRouteTablePropagation",
        "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableTransitGatewayRouteTablePropagation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableVgwRoutePropagation": {
        "privilege": "DisableVgwRoutePropagation",
        "description": "Grants permission to disable a virtual private gateway from propagating routes to a specified route table of a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVgwRoutePropagation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableVpcClassicLink": {
        "privilege": "DisableVpcClassicLink",
        "description": "Grants permission to disable ClassicLink for a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLink.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableVpcClassicLinkDnsSupport": {
        "privilege": "DisableVpcClassicLinkDnsSupport",
        "description": "Grants permission to disable ClassicLink DNS support for a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableVpcClassicLinkDnsSupport.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disassociateAddress": {
        "privilege": "DisassociateAddress",
        "description": "Grants permission to disassociate an Elastic IP address from an instance or network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateAddress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "disassociateClientVpnTargetNetwork": {
        "privilege": "DisassociateClientVpnTargetNetwork",
        "description": "Grants permission to disassociate a target network from a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateClientVpnTargetNetwork.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "disassociateEnclaveCertificateIamRole": {
        "privilege": "DisassociateEnclaveCertificateIamRole",
        "description": "Grants permission to disassociate an ACM certificate from a IAM role",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateEnclaveCertificateIamRole.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "certificate": {
                "resourceName": "certificate",
                "resourceArn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}",
                "required": true,
                "resourceConditions": {}
            },
            "role": {
                "resourceName": "role",
                "resourceArn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "disassociateIamInstanceProfile": {
        "privilege": "DisassociateIamInstanceProfile",
        "description": "Grants permission to disassociate an IAM instance profile from a running or stopped instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disassociateInstanceEventWindow": {
        "privilege": "DisassociateInstanceEventWindow",
        "description": "Grants permission to disassociate one or more targets from an event window",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateInstanceEventWindow.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instanceEventWindow": {
                "resourceName": "instance-event-window",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disassociateRouteTable": {
        "privilege": "DisassociateRouteTable",
        "description": "Grants permission to disassociate a subnet from a route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "disassociateSubnetCidrBlock": {
        "privilege": "DisassociateSubnetCidrBlock",
        "description": "Grants permission to disassociate a CIDR block from a subnet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateSubnetCidrBlock.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "disassociateTransitGatewayMulticastDomain": {
        "privilege": "DisassociateTransitGatewayMulticastDomain",
        "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayMulticastDomain.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disassociateTransitGatewayRouteTable": {
        "privilege": "DisassociateTransitGatewayRouteTable",
        "description": "Grants permission to disassociate a resource attachment from a transit gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTransitGatewayRouteTable.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disassociateTrunkInterface": {
        "privilege": "DisassociateTrunkInterface",
        "description": "Grants permission to disassociate a branch network interface to a trunk network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateTrunkInterface.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "disassociateVpcCidrBlock": {
        "privilege": "DisassociateVpcCidrBlock",
        "description": "Grants permission to disassociate a CIDR block from a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateVpcCidrBlock.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableEbsEncryptionByDefault": {
        "privilege": "EnableEbsEncryptionByDefault",
        "description": "Grants permission to enable EBS encryption by default for your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableEbsEncryptionByDefault.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "enableFastLaunch": {
        "privilege": "EnableFastLaunch",
        "description": "Grants permission to enable faster launching for Windows AMIs",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastLaunch.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableFastSnapshotRestores": {
        "privilege": "EnableFastSnapshotRestores",
        "description": "Grants permission to enable fast snapshot restores for one or more snapshots in specified Availability Zones",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableFastSnapshotRestores.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "enableImageDeprecation": {
        "privilege": "EnableImageDeprecation",
        "description": "Grants permission to enable deprecation of the specified AMI at the specified date and time",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableImageDeprecation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableIpamOrganizationAdminAccount": {
        "privilege": "EnableIpamOrganizationAdminAccount",
        "description": "Grants permission to enable an AWS Organizations member account as an Amazon VPC IP Address Manager (IPAM) admin account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableIpamOrganizationAdminAccount.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "enableSerialConsoleAccess": {
        "privilege": "EnableSerialConsoleAccess",
        "description": "Grants permission to enable access to the EC2 serial console of all instances for your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableSerialConsoleAccess.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "enableTransitGatewayRouteTablePropagation": {
        "privilege": "EnableTransitGatewayRouteTablePropagation",
        "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableTransitGatewayRouteTablePropagation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableVgwRoutePropagation": {
        "privilege": "EnableVgwRoutePropagation",
        "description": "Grants permission to enable a virtual private gateway to propagate routes to a VPC route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVgwRoutePropagation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableVolumeIO": {
        "privilege": "EnableVolumeIO",
        "description": "Grants permission to enable I/O operations for a volume that had I/O operations disabled",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVolumeIO.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableVpcClassicLink": {
        "privilege": "EnableVpcClassicLink",
        "description": "Grants permission to enable a VPC for ClassicLink",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLink.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableVpcClassicLinkDnsSupport": {
        "privilege": "EnableVpcClassicLinkDnsSupport",
        "description": "Grants permission to enable a VPC to support DNS hostname resolution for ClassicLink",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableVpcClassicLinkDnsSupport.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "exportClientVpnClientCertificateRevocationList": {
        "privilege": "ExportClientVpnClientCertificateRevocationList",
        "description": "Grants permission to download the client certificate revocation list for a Client VPN endpoint",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientCertificateRevocationList.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "exportClientVpnClientConfiguration": {
        "privilege": "ExportClientVpnClientConfiguration",
        "description": "Grants permission to download the contents of the Client VPN endpoint configuration file for a Client VPN endpoint",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportClientVpnClientConfiguration.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "exportImage": {
        "privilege": "ExportImage",
        "description": "Grants permission to export an Amazon Machine Image (AMI) to a VM file",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportImage.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "exportImageTask": {
                "resourceName": "export-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "exportTransitGatewayRoutes": {
        "privilege": "ExportTransitGatewayRoutes",
        "description": "Grants permission to export routes from a transit gateway route table to an Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ExportTransitGatewayRoutes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getAssociatedEnclaveCertificateIamRoles": {
        "privilege": "GetAssociatedEnclaveCertificateIamRoles",
        "description": "Grants permission to get the list of roles associated with an ACM certificate",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAssociatedEnclaveCertificateIamRoles.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "certificate": {
                "resourceName": "certificate",
                "resourceArn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAssociatedIpv6PoolCidrs": {
        "privilege": "GetAssociatedIpv6PoolCidrs",
        "description": "Grants permission to get information about the IPv6 CIDR block associations for a specified IPv6 address pool",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetAssociatedIpv6PoolCidrs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getCapacityReservationUsage": {
        "privilege": "GetCapacityReservationUsage",
        "description": "Grants permission to get usage information about a Capacity Reservation",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCapacityReservationUsage.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getCoipPoolUsage": {
        "privilege": "GetCoipPoolUsage",
        "description": "Grants permission to describe the allocations from the specified customer-owned address pool",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetCoipPoolUsage.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getConsoleOutput": {
        "privilege": "GetConsoleOutput",
        "description": "Grants permission to get the console output for an instance",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getConsoleScreenshot": {
        "privilege": "GetConsoleScreenshot",
        "description": "Grants permission to retrieve a JPG-format screenshot of a running instance",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleScreenshot.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getDefaultCreditSpecification": {
        "privilege": "GetDefaultCreditSpecification",
        "description": "Grants permission to get the default credit option for CPU usage of a burstable performance instance family",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetDefaultCreditSpecification.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getEbsDefaultKmsKeyId": {
        "privilege": "GetEbsDefaultKmsKeyId",
        "description": "Grants permission to get the ID of the default customer master key (CMK) for EBS encryption by default",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getEbsEncryptionByDefault": {
        "privilege": "GetEbsEncryptionByDefault",
        "description": "Grants permission to describe whether EBS encryption by default is enabled for your account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsEncryptionByDefault.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getFlowLogsIntegrationTemplate": {
        "privilege": "GetFlowLogsIntegrationTemplate",
        "description": "Grants permission to generate a CloudFormation template to streamline the integration of VPC flow logs with Amazon Athena",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetFlowLogsIntegrationTemplate.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcFlowLog": {
                "resourceName": "vpc-flow-log",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getGroupsForCapacityReservation": {
        "privilege": "GetGroupsForCapacityReservation",
        "description": "Grants permission to list the resource groups to which a Capacity Reservation has been added",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetGroupsForCapacityReservation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getHostReservationPurchasePreview": {
        "privilege": "GetHostReservationPurchasePreview",
        "description": "Grants permission to preview a reservation purchase with configurations that match those of a Dedicated Host",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetHostReservationPurchasePreview.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getInstanceTypesFromInstanceRequirements": {
        "privilege": "GetInstanceTypesFromInstanceRequirements",
        "description": "Grants permission to view a list of instance types with specified instance attributes",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getIpamAddressHistory": {
        "privilege": "GetIpamAddressHistory",
        "description": "Grants permission to retrieve historical information about a CIDR within an Amazon VPC IP Address Manager (IPAM) scope",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamAddressHistory.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getIpamPoolAllocations": {
        "privilege": "GetIpamPoolAllocations",
        "description": "Grants permission to get a list of all the CIDR allocations in an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolAllocations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getIpamPoolCidrs": {
        "privilege": "GetIpamPoolCidrs",
        "description": "Grants permission to get the CIDRs provisioned to an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolCidrs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getIpamResourceCidrs": {
        "privilege": "GetIpamResourceCidrs",
        "description": "Grants permission to get information about the resources in an Amazon VPC IP Address Manager (IPAM) scope",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamResourceCidrs.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getLaunchTemplateData": {
        "privilege": "GetLaunchTemplateData",
        "description": "Grants permission to get the configuration data of the specified instance for use with a new launch template or launch template version",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetLaunchTemplateData.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getManagedPrefixListAssociations": {
        "privilege": "GetManagedPrefixListAssociations",
        "description": "Grants permission to get information about the resources that are associated with the specified managed prefix list",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getManagedPrefixListEntries": {
        "privilege": "GetManagedPrefixListEntries",
        "description": "Grants permission to get information about the entries for a specified managed prefix list",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetManagedPrefixListEntries.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getNetworkInsightsAccessScopeAnalysisFindings": {
        "privilege": "GetNetworkInsightsAccessScopeAnalysisFindings",
        "description": "Grants permission to get the findings for one or more Network Access Scope analyses",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetNetworkInsightsAccessScopeAnalysisFindings.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getNetworkInsightsAccessScopeContent": {
        "privilege": "GetNetworkInsightsAccessScopeContent",
        "description": "Grants permission to get the content for a specified Network Access Scope",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetNetworkInsightsAccessScopeContent.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getPasswordData": {
        "privilege": "GetPasswordData",
        "description": "Grants permission to retrieve the encrypted administrator password for a running Windows instance",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getReservedInstancesExchangeQuote": {
        "privilege": "GetReservedInstancesExchangeQuote",
        "description": "Grants permission to return a quote and exchange information for exchanging one or more Convertible Reserved Instances for a new Convertible Reserved Instance",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetReservedInstancesExchangeQuote.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getResourcePolicy": {
        "privilege": "GetResourcePolicy",
        "description": "Grants permission to describe an IAM policy that enables cross-account sharing",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getSerialConsoleAccessStatus": {
        "privilege": "GetSerialConsoleAccessStatus",
        "description": "Grants permission to retrieve the access status of your account to the EC2 serial console of all instances",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSerialConsoleAccessStatus.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getSpotPlacementScores": {
        "privilege": "GetSpotPlacementScores",
        "description": "Grants permission to calculate the Spot placement score for a Region or Availability Zone based on the specified target capacity and compute requirements",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getSubnetCidrReservations": {
        "privilege": "GetSubnetCidrReservations",
        "description": "Grants permission to retrieve information about the subnet CIDR reservations",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSubnetCidrReservations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getTransitGatewayAttachmentPropagations": {
        "privilege": "GetTransitGatewayAttachmentPropagations",
        "description": "Grants permission to list the route tables to which a resource attachment propagates routes",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayAttachmentPropagations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getTransitGatewayMulticastDomainAssociations": {
        "privilege": "GetTransitGatewayMulticastDomainAssociations",
        "description": "Grants permission to get information about the associations for a transit gateway multicast domain",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayMulticastDomainAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getTransitGatewayPrefixListReferences": {
        "privilege": "GetTransitGatewayPrefixListReferences",
        "description": "Grants permission to get information about prefix list references for a transit gateway route table",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayPrefixListReference.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getTransitGatewayRouteTableAssociations": {
        "privilege": "GetTransitGatewayRouteTableAssociations",
        "description": "Grants permission to get information about associations for a transit gateway route table",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getTransitGatewayRouteTablePropagations": {
        "privilege": "GetTransitGatewayRouteTablePropagations",
        "description": "Grants permission to get information about the route table propagations for a transit gateway route table",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "getVpnConnectionDeviceSampleConfiguration": {
        "privilege": "GetVpnConnectionDeviceSampleConfiguration",
        "description": "Grants permission to download an AWS-provided sample configuration file to be used with the customer gateway device",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceSampleConfiguration.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            },
            "vpnConnectionDeviceType": {
                "resourceName": "vpn-connection-device-type",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection-device-type/${VpnConnectionDeviceTypeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getVpnConnectionDeviceTypes": {
        "privilege": "GetVpnConnectionDeviceTypes",
        "description": "Grants permission to obtain a list of customer gateway devices for which sample configuration files can be provided",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetVpnConnectionDeviceTypes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "importClientVpnClientCertificateRevocationList": {
        "privilege": "ImportClientVpnClientCertificateRevocationList",
        "description": "Grants permission to upload a client certificate revocation list to a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportClientVpnClientCertificateRevocationList.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "importImage": {
        "privilege": "ImportImage",
        "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "importImageTask": {
                "resourceName": "import-image-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "importInstance": {
        "privilege": "ImportInstance",
        "description": "Grants permission to create an import instance task using metadata from a disk image",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "importKeyPair": {
        "privilege": "ImportKeyPair",
        "description": "Grants permission to import a public key from an RSA key pair that was created with a third-party tool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "importSnapshot": {
        "privilege": "ImportSnapshot",
        "description": "Grants permission to import a disk into an EBS snapshot",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportSnapshot.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "importSnapshotTask": {
                "resourceName": "import-snapshot-task",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "importVolume": {
        "privilege": "ImportVolume",
        "description": "Grants permission to create an import volume task using metadata from a disk image",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportVolume.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listImagesInRecycleBin": {
        "privilege": "ListImagesInRecycleBin",
        "description": "Grants permission to list Amazon Machine Images (AMIs) that are currently in the Recycle Bin",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ListImagesInRecycleBin.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listSnapshotsInRecycleBin": {
        "privilege": "ListSnapshotsInRecycleBin",
        "description": "Grants permission to list the Amazon EBS snapshots that are currently in the Recycle Bin",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ListSnapshotsInRecycleBin.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "modifyAddressAttribute": {
        "privilege": "ModifyAddressAttribute",
        "description": "Grants permission to modify an attribute of the specified Elastic IP address",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyAddressAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyAvailabilityZoneGroup": {
        "privilege": "ModifyAvailabilityZoneGroup",
        "description": "Grants permission to modify the opt-in status of the Local Zone and Wavelength Zone group for your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyAvailabilityZoneGroup.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "modifyCapacityReservation": {
        "privilege": "ModifyCapacityReservation",
        "description": "Grants permission to modify a Capacity Reservation's capacity and the conditions under which it is to be released",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyCapacityReservationFleet": {
        "privilege": "ModifyCapacityReservationFleet",
        "description": "Grants permission to modify a Capacity Reservation Fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyCapacityReservationFleet.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "capacityReservationFleet": {
                "resourceName": "capacity-reservation-fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyClientVpnEndpoint": {
        "privilege": "ModifyClientVpnEndpoint",
        "description": "Grants permission to modify a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyClientVpnEndpoint.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyDefaultCreditSpecification": {
        "privilege": "ModifyDefaultCreditSpecification",
        "description": "Grants permission to change the account level default credit option for CPU usage of burstable performance instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyDefaultCreditSpecification.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "modifyEbsDefaultKmsKeyId": {
        "privilege": "ModifyEbsDefaultKmsKeyId",
        "description": "Grants permission to change the default customer master key (CMK) for EBS encryption by default for your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyEbsDefaultKmsKeyId.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "modifyFleet": {
        "privilege": "ModifyFleet",
        "description": "Grants permission to modify an EC2 Fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFleet.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "modifyFpgaImageAttribute": {
        "privilege": "ModifyFpgaImageAttribute",
        "description": "Grants permission to modify an attribute of an Amazon FPGA Image (AFI)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyFpgaImageAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyHosts": {
        "privilege": "ModifyHosts",
        "description": "Grants permission to modify a Dedicated Host",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyHosts.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "dedicatedHost": {
                "resourceName": "dedicated-host",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AutoPlacement": {
                        "condition": "ec2:AutoPlacement",
                        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:HostRecovery": {
                        "condition": "ec2:HostRecovery",
                        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Quantity": {
                        "condition": "ec2:Quantity",
                        "description": "Filters access by the number of Dedicated Hosts in a request",
                        "type": "Numeric"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyIdFormat": {
        "privilege": "ModifyIdFormat",
        "description": "Grants permission to modify the ID format for a resource",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIdFormat.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "modifyIdentityIdFormat": {
        "privilege": "ModifyIdentityIdFormat",
        "description": "Grants permission to modify the ID format of a resource for a specific principal in your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIdentityIdFormat.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "modifyImageAttribute": {
        "privilege": "ModifyImageAttribute",
        "description": "Grants permission to modify an attribute of an Amazon Machine Image (AMI)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyInstanceAttribute": {
        "privilege": "ModifyInstanceAttribute",
        "description": "Grants permission to modify an attribute of an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyInstanceCapacityReservationAttributes": {
        "privilege": "ModifyInstanceCapacityReservationAttributes",
        "description": "Grants permission to modify the Capacity Reservation settings for a stopped instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCapacityReservationAttributes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyInstanceCreditSpecification": {
        "privilege": "ModifyInstanceCreditSpecification",
        "description": "Grants permission to modify the credit option for CPU usage on an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyInstanceEventStartTime": {
        "privilege": "ModifyInstanceEventStartTime",
        "description": "Grants permission to modify the start time for a scheduled EC2 instance event",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventStartTime.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyInstanceEventWindow": {
        "privilege": "ModifyInstanceEventWindow",
        "description": "Grants permission to modify the specified event window",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceEventWindow.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instanceEventWindow": {
                "resourceName": "instance-event-window",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyInstanceMetadataOptions": {
        "privilege": "ModifyInstanceMetadataOptions",
        "description": "Grants permission to modify the metadata options for an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyInstancePlacement": {
        "privilege": "ModifyInstancePlacement",
        "description": "Grants permission to modify the placement attributes for an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstancePlacement.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "dedicatedHost": {
                "resourceName": "dedicated-host",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AutoPlacement": {
                        "condition": "ec2:AutoPlacement",
                        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:HostRecovery": {
                        "condition": "ec2:HostRecovery",
                        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Quantity": {
                        "condition": "ec2:Quantity",
                        "description": "Filters access by the number of Dedicated Hosts in a request",
                        "type": "Numeric"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyIpam": {
        "privilege": "ModifyIpam",
        "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpam.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipam": {
                "resourceName": "ipam",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyIpamPool": {
        "privilege": "ModifyIpamPool",
        "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamPool.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyIpamResourceCidr": {
        "privilege": "ModifyIpamResourceCidr",
        "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) resource CIDR",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamResourceCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyIpamScope": {
        "privilege": "ModifyIpamScope",
        "description": "Grants permission to modify the configurations of an Amazon VPC IP Address Manager (IPAM) scope",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamScope.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamScope": {
                "resourceName": "ipam-scope",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyLaunchTemplate": {
        "privilege": "ModifyLaunchTemplate",
        "description": "Grants permission to modify a launch template",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyLaunchTemplate.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyManagedPrefixList": {
        "privilege": "ModifyManagedPrefixList",
        "description": "Grants permission to modify a managed prefix list",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyManagedPrefixList.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyNetworkInterfaceAttribute": {
        "privilege": "ModifyNetworkInterfaceAttribute",
        "description": "Grants permission to modify an attribute of a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyNetworkInterfaceAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "modifyPrivateDnsNameOptions": {
        "privilege": "ModifyPrivateDnsNameOptions",
        "description": "Grants permission to modify the options for instance hostnames for the specified instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyPrivateDnsNameOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyReservedInstances": {
        "privilege": "ModifyReservedInstances",
        "description": "Grants permission to modify attributes of one or more Reserved Instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyReservedInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "reservedInstances": {
                "resourceName": "reserved-instances",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ReservedInstancesOfferingType": {
                        "condition": "ec2:ReservedInstancesOfferingType",
                        "description": "Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifySecurityGroupRules": {
        "privilege": "ModifySecurityGroupRules",
        "description": "Grants permission to modify the rules of a security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySecurityGroupRules.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "securityGroupRule": {
                "resourceName": "security-group-rule",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifySnapshotAttribute": {
        "privilege": "ModifySnapshotAttribute",
        "description": "Grants permission to add or remove permission settings for a snapshot",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "modifySnapshotTier": {
        "privilege": "ModifySnapshotTier",
        "description": "Grants permission to archive Amazon EBS snapshots",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotTier.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "modifySpotFleetRequest": {
        "privilege": "ModifySpotFleetRequest",
        "description": "Grants permission to modify a Spot Fleet request",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySpotFleetRequest.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "spotFleetRequest": {
                "resourceName": "spot-fleet-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "modifySubnetAttribute": {
        "privilege": "ModifySubnetAttribute",
        "description": "Grants permission to modify an attribute of a subnet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySubnetAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "modifyTrafficMirrorFilterNetworkServices": {
        "privilege": "ModifyTrafficMirrorFilterNetworkServices",
        "description": "Grants permission to allow or restrict mirroring network services",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyTrafficMirrorFilterRule": {
        "privilege": "ModifyTrafficMirrorFilterRule",
        "description": "Grants permission to modify a traffic mirror rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterRule.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorFilterRule": {
                "resourceName": "traffic-mirror-filter-rule",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
                "required": true,
                "resourceConditions": {
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyTrafficMirrorSession": {
        "privilege": "ModifyTrafficMirrorSession",
        "description": "Grants permission to modify a traffic mirror session",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorSession.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "trafficMirrorSession": {
                "resourceName": "traffic-mirror-session",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorFilter": {
                "resourceName": "traffic-mirror-filter",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "trafficMirrorTarget": {
                "resourceName": "traffic-mirror-target",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyTransitGateway": {
        "privilege": "ModifyTransitGateway",
        "description": "Grants permission to modify a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGateway.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyTransitGatewayPrefixListReference": {
        "privilege": "ModifyTransitGatewayPrefixListReference",
        "description": "Grants permission to modify a transit gateway prefix list reference",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayPrefixListReference.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyTransitGatewayVpcAttachment": {
        "privilege": "ModifyTransitGatewayVpcAttachment",
        "description": "Grants permission to modify a VPC attachment on a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayVpcAttachment.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "modifyVolume": {
        "privilege": "ModifyVolume",
        "description": "Grants permission to modify the parameters of an EBS volume",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolume.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVolumeAttribute": {
        "privilege": "ModifyVolumeAttribute",
        "description": "Grants permission to modify an attribute of a volume",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVolumeAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpcAttribute": {
        "privilege": "ModifyVpcAttribute",
        "description": "Grants permission to modify an attribute of a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpcEndpoint": {
        "privilege": "ModifyVpcEndpoint",
        "description": "Grants permission to modify an attribute of a VPC endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "modifyVpcEndpointConnectionNotification": {
        "privilege": "ModifyVpcEndpointConnectionNotification",
        "description": "Grants permission to modify a connection notification for a VPC endpoint or VPC endpoint service",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointConnectionNotification.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpcEndpointServiceConfiguration": {
        "privilege": "ModifyVpcEndpointServiceConfiguration",
        "description": "Grants permission to modify the attributes of a VPC endpoint service configuration",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServiceConfiguration.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpcEndpointServicePayerResponsibility": {
        "privilege": "ModifyVpcEndpointServicePayerResponsibility",
        "description": "Grants permission to modify the payer responsibility for a VPC endpoint service",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePayerResponsibility.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpcEndpointServicePermissions": {
        "privilege": "ModifyVpcEndpointServicePermissions",
        "description": "Grants permission to modify the permissions for a VPC endpoint service",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpointServicePermissions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpcPeeringConnectionOptions": {
        "privilege": "ModifyVpcPeeringConnectionOptions",
        "description": "Grants permission to modify the VPC peering connection options on one side of a VPC peering connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcPeeringConnectionOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpcTenancy": {
        "privilege": "ModifyVpcTenancy",
        "description": "Grants permission to modify the instance tenancy attribute of a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcTenancy.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpc": {
                "resourceName": "vpc",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Ipv4IpamPoolId": {
                        "condition": "ec2:Ipv4IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv4 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Ipv6IpamPoolId": {
                        "condition": "ec2:Ipv6IpamPoolId",
                        "description": "Filters access by the ID of an IPAM pool provided for IPv6 CIDR block allocation",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:VpcID": {
                        "condition": "ec2:VpcID",
                        "description": "Filters access by the ID of a virtual private cloud (VPC)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpnConnection": {
        "privilege": "ModifyVpnConnection",
        "description": "Grants permission to modify the target gateway of a Site-to-Site VPN connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnection.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpnConnectionOptions": {
        "privilege": "ModifyVpnConnectionOptions",
        "description": "Grants permission to modify the connection options for your Site-to-Site VPN connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnConnectionOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpnTunnelCertificate": {
        "privilege": "ModifyVpnTunnelCertificate",
        "description": "Grants permission to modify the certificate for a Site-to-Site VPN connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelCertificate",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyVpnTunnelOptions": {
        "privilege": "ModifyVpnTunnelOptions",
        "description": "Grants permission to modify the options for a Site-to-Site VPN connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpnTunnelOptions.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpnConnection": {
                "resourceName": "vpn-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthenticationType": {
                        "condition": "ec2:AuthenticationType",
                        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
                        "type": "String"
                    },
                    "ec2:DPDTimeoutSeconds": {
                        "condition": "ec2:DPDTimeoutSeconds",
                        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:GatewayType": {
                        "condition": "ec2:GatewayType",
                        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
                        "type": "String"
                    },
                    "ec2:IKEVersions": {
                        "condition": "ec2:IKEVersions",
                        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelCidr": {
                        "condition": "ec2:InsideTunnelCidr",
                        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:InsideTunnelIpv6Cidr": {
                        "condition": "ec2:InsideTunnelIpv6Cidr",
                        "description": "Filters access by a range of inside IPv6 addresses for a VPN tunnel",
                        "type": "String"
                    },
                    "ec2:Phase1DHGroup": {
                        "condition": "ec2:Phase1DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase1EncryptionAlgorithms": {
                        "condition": "ec2:Phase1EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1IntegrityAlgorithms": {
                        "condition": "ec2:Phase1IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase1LifetimeSeconds": {
                        "condition": "ec2:Phase1LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:Phase2DHGroup": {
                        "condition": "ec2:Phase2DHGroup",
                        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "Numeric"
                    },
                    "ec2:Phase2EncryptionAlgorithms": {
                        "condition": "ec2:Phase2EncryptionAlgorithms",
                        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2IntegrityAlgorithms": {
                        "condition": "ec2:Phase2IntegrityAlgorithms",
                        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
                        "type": "String"
                    },
                    "ec2:Phase2LifetimeSeconds": {
                        "condition": "ec2:Phase2LifetimeSeconds",
                        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:PreSharedKeys": {
                        "condition": "ec2:PreSharedKeys",
                        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RekeyFuzzPercentage": {
                        "condition": "ec2:RekeyFuzzPercentage",
                        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:RekeyMarginTimeSeconds": {
                        "condition": "ec2:RekeyMarginTimeSeconds",
                        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
                        "type": "Numeric"
                    },
                    "ec2:ReplayWindowSizePackets": {
                        "condition": "ec2:ReplayWindowSizePackets",
                        "description": "Filters access by the number of packets in an IKE replay window",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RoutingType": {
                        "condition": "ec2:RoutingType",
                        "description": "Filters access by the routing type for the VPN connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "monitorInstances": {
        "privilege": "MonitorInstances",
        "description": "Grants permission to enable detailed monitoring for a running instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MonitorInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "moveAddressToVpc": {
        "privilege": "MoveAddressToVpc",
        "description": "Grants permission to move an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MoveAddressToVpc.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "moveByoipCidrToIpam": {
        "privilege": "MoveByoipCidrToIpam",
        "description": "Grants permission to move a BYOIP IPv4 CIDR to Amazon VPC IP Address Manager (IPAM) from a public IPv4 pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_MoveByoipCidrToIpam.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "provisionByoipCidr": {
        "privilege": "ProvisionByoipCidr",
        "description": "Grants permission to provision an address range for use in AWS through bring your own IP addresses (BYOIP), and to create a corresponding address pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionByoipCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "provisionIpamPoolCidr": {
        "privilege": "ProvisionIpamPoolCidr",
        "description": "Grants permission to provision a CIDR to an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionIpamPoolCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "provisionPublicIpv4PoolCidr": {
        "privilege": "ProvisionPublicIpv4PoolCidr",
        "description": "Grants permission to provision a CIDR to a public IPv4 pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ProvisionPublicIpv4PoolCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "ipv4poolEc2": {
                "resourceName": "ipv4pool-ec2",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "purchaseHostReservation": {
        "privilege": "PurchaseHostReservation",
        "description": "Grants permission to purchase a reservation with configurations that match those of a Dedicated Host",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseHostReservation.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "dedicatedHost": {
                "resourceName": "dedicated-host",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AutoPlacement": {
                        "condition": "ec2:AutoPlacement",
                        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:HostRecovery": {
                        "condition": "ec2:HostRecovery",
                        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Quantity": {
                        "condition": "ec2:Quantity",
                        "description": "Filters access by the number of Dedicated Hosts in a request",
                        "type": "Numeric"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "purchaseReservedInstancesOffering": {
        "privilege": "PurchaseReservedInstancesOffering",
        "description": "Grants permission to purchase a Reserved Instance offering",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseReservedInstancesOffering.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "purchaseScheduledInstances": {
        "privilege": "PurchaseScheduledInstances",
        "description": "Grants permission to purchase one or more Scheduled Instances with a specified schedule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PurchaseScheduledInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "putResourcePolicy": {
        "privilege": "PutResourcePolicy",
        "description": "Grants permission to attach an IAM policy that enables cross-account sharing to a resource",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/vpc/latest/ipam/share-pool-ipam.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "rebootInstances": {
        "privilege": "RebootInstances",
        "description": "Grants permission to request a reboot of one or more instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RebootInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "registerImage": {
        "privilege": "RegisterImage",
        "description": "Grants permission to register an Amazon Machine Image (AMI)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterImage.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "registerInstanceEventNotificationAttributes": {
        "privilege": "RegisterInstanceEventNotificationAttributes",
        "description": "Grants permission to add tags to the set of tags to include in notifications about scheduled events for your instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterInstanceEventNotificationAttributes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "registerTransitGatewayMulticastGroupMembers": {
        "privilege": "RegisterTransitGatewayMulticastGroupMembers",
        "description": "Grants permission to register one or more network interfaces as a member of a group IP address in a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupMembers.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "registerTransitGatewayMulticastGroupSources": {
        "privilege": "RegisterTransitGatewayMulticastGroupSources",
        "description": "Grants permission to register one or more network interfaces as a source of a group IP address in a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RegisterTransitGatewayMulticastGroupSources.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "rejectTransitGatewayMulticastDomainAssociations": {
        "privilege": "RejectTransitGatewayMulticastDomainAssociations",
        "description": "Grants permission to reject requests to associate cross-account subnets with a transit gateway multicast domain",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayMulticastDomainAssociations.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayMulticastDomain": {
                "resourceName": "transit-gateway-multicast-domain",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "rejectTransitGatewayPeeringAttachment": {
        "privilege": "RejectTransitGatewayPeeringAttachment",
        "description": "Grants permission to reject a transit gateway peering attachment request",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayPeeringAttachment.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "rejectTransitGatewayVpcAttachment": {
        "privilege": "RejectTransitGatewayVpcAttachment",
        "description": "Grants permission to reject a request to attach a VPC to a transit gateway",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectTransitGatewayVpcAttachment.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "rejectVpcEndpointConnections": {
        "privilege": "RejectVpcEndpointConnections",
        "description": "Grants permission to reject one or more VPC endpoint connection requests to a VPC endpoint service",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcEndpointConnections.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "rejectVpcPeeringConnection": {
        "privilege": "RejectVpcPeeringConnection",
        "description": "Grants permission to reject a VPC peering connection request",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RejectVpcPeeringConnection.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            }
        }
    },
    "releaseAddress": {
        "privilege": "ReleaseAddress",
        "description": "Grants permission to release an Elastic IP address",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseAddress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "releaseHosts": {
        "privilege": "ReleaseHosts",
        "description": "Grants permission to release one or more On-Demand Dedicated Hosts",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseHosts.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "dedicatedHost": {
                "resourceName": "dedicated-host",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AutoPlacement": {
                        "condition": "ec2:AutoPlacement",
                        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:HostRecovery": {
                        "condition": "ec2:HostRecovery",
                        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
                        "type": "String"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Quantity": {
                        "condition": "ec2:Quantity",
                        "description": "Filters access by the number of Dedicated Hosts in a request",
                        "type": "Numeric"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "releaseIpamPoolAllocation": {
        "privilege": "ReleaseIpamPoolAllocation",
        "description": "Grants permission to release an allocation within an Amazon VPC IP Address Manager (IPAM) pool",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "ipamPool": {
                "resourceName": "ipam-pool",
                "resourceArn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "replaceIamInstanceProfileAssociation": {
        "privilege": "ReplaceIamInstanceProfileAssociation",
        "description": "Grants permission to replace an IAM instance profile for an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceIamInstanceProfileAssociation.html",
        "service": "ec2",
        "dependentActions": [
            "iam:PassRole"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "replaceNetworkAclAssociation": {
        "privilege": "ReplaceNetworkAclAssociation",
        "description": "Grants permission to change which network ACL a subnet is associated with",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "replaceNetworkAclEntry": {
        "privilege": "ReplaceNetworkAclEntry",
        "description": "Grants permission to replace an entry (rule) in a network ACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkAcl": {
                "resourceName": "network-acl",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:NetworkAclID": {
                        "condition": "ec2:NetworkAclID",
                        "description": "Filters access by the ID of a network access control list (ACL)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "replaceRoute": {
        "privilege": "ReplaceRoute",
        "description": "Grants permission to replace a route within a route table in a VPC",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "carrierGateway": {
                "resourceName": "carrier-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "egressOnlyInternetGateway": {
                "resourceName": "egress-only-internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "internetGateway": {
                "resourceName": "internet-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:InternetGatewayID": {
                        "condition": "ec2:InternetGatewayID",
                        "description": "Filters access by the ID of an internet gateway",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "localGateway": {
                "resourceName": "local-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "natgateway": {
                "resourceName": "natgateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGateway": {
                "resourceName": "transit-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "vpcEndpoint": {
                "resourceName": "vpc-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServiceName": {
                        "condition": "ec2:VpceServiceName",
                        "description": "Filters access by the name of the VPC endpoint service",
                        "type": "String"
                    },
                    "ec2:VpceServiceOwner": {
                        "condition": "ec2:VpceServiceOwner",
                        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    }
                }
            },
            "vpcPeeringConnection": {
                "resourceName": "vpc-peering-connection",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AccepterVpc": {
                        "condition": "ec2:AccepterVpc",
                        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:RequesterVpc": {
                        "condition": "ec2:RequesterVpc",
                        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
                        "type": "ARN"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpcPeeringConnectionID": {
                        "condition": "ec2:VpcPeeringConnectionID",
                        "description": "Filters access by the ID of a VPC peering connection",
                        "type": "String"
                    }
                }
            },
            "vpnGateway": {
                "resourceName": "vpn-gateway",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "replaceRouteTableAssociation": {
        "privilege": "ReplaceRouteTableAssociation",
        "description": "Grants permission to change the route table that is associated with a subnet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "routeTable": {
                "resourceName": "route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RouteTableID": {
                        "condition": "ec2:RouteTableID",
                        "description": "Filters access by the ID of a route table",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "replaceTransitGatewayRoute": {
        "privilege": "ReplaceTransitGatewayRoute",
        "description": "Grants permission to replace a route in a transit gateway route table",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceTransitGatewayRoute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "transitGatewayAttachment": {
                "resourceName": "transit-gateway-attachment",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "reportInstanceStatus": {
        "privilege": "ReportInstanceStatus",
        "description": "Grants permission to submit feedback about the status of an instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReportInstanceStatus.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "requestSpotFleet": {
        "privilege": "RequestSpotFleet",
        "description": "Grants permission to create a Spot Fleet request",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "spotFleetRequest": {
                "resourceName": "spot-fleet-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "requestSpotInstances": {
        "privilege": "RequestSpotInstances",
        "description": "Grants permission to create a Spot Instance request",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "spotInstancesRequest": {
                "resourceName": "spot-instances-request",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "resetAddressAttribute": {
        "privilege": "ResetAddressAttribute",
        "description": "Grants permission to reset the attribute of the specified IP address",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetAddressAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "elasticIp": {
                "resourceName": "elastic-ip",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AllocationId": {
                        "condition": "ec2:AllocationId",
                        "description": "Filters access by the allocation ID of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Domain": {
                        "condition": "ec2:Domain",
                        "description": "Filters access by the domain of the Elastic IP address",
                        "type": "String"
                    },
                    "ec2:PublicIpAddress": {
                        "condition": "ec2:PublicIpAddress",
                        "description": "Filters access by a public IP address",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "resetEbsDefaultKmsKeyId": {
        "privilege": "ResetEbsDefaultKmsKeyId",
        "description": "Grants permission to reset the default customer master key (CMK) for EBS encryption for your account to use the AWS-managed CMK for EBS",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetEbsDefaultKmsKeyId.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "resetFpgaImageAttribute": {
        "privilege": "ResetFpgaImageAttribute",
        "description": "Grants permission to reset an attribute of an Amazon FPGA Image (AFI) to its default value",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetFpgaImageAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "fpgaImage": {
                "resourceName": "fpga-image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "resetImageAttribute": {
        "privilege": "ResetImageAttribute",
        "description": "Grants permission to reset an attribute of an Amazon Machine Image (AMI) to its default value",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetImageAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "resetInstanceAttribute": {
        "privilege": "ResetInstanceAttribute",
        "description": "Grants permission to reset an attribute of an instance to its default value",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetInstanceAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "resetNetworkInterfaceAttribute": {
        "privilege": "ResetNetworkInterfaceAttribute",
        "description": "Grants permission to reset an attribute of a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetNetworkInterfaceAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "resetSnapshotAttribute": {
        "privilege": "ResetSnapshotAttribute",
        "description": "Grants permission to reset permission settings for a snapshot",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ResetSnapshotAttribute.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "restoreAddressToClassic": {
        "privilege": "RestoreAddressToClassic",
        "description": "Grants permission to restore an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreAddressToClassic.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "restoreImageFromRecycleBin": {
        "privilege": "RestoreImageFromRecycleBin",
        "description": "Grants permission to restore an Amazon Machine Image (AMI) from the Recycle Bin",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreImageFromRecycleBin.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "restoreManagedPrefixListVersion": {
        "privilege": "RestoreManagedPrefixListVersion",
        "description": "Grants permission to restore the entries from a previous version of a managed prefix list to a new version of the prefix list",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreManagedPrefixListVersion.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "prefixList": {
                "resourceName": "prefix-list",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "restoreSnapshotFromRecycleBin": {
        "privilege": "RestoreSnapshotFromRecycleBin",
        "description": "Grants permission to restore an Amazon EBS snapshot from the Recycle Bin",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotFromRecycleBin.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "restoreSnapshotTier": {
        "privilege": "RestoreSnapshotTier",
        "description": "Grants permission to restore an archived Amazon EBS snapshot for use temporarily or permanently, or modify the restore period or restore type for a snapshot that was previously temporarily restored",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RestoreSnapshotTier.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "revokeClientVpnIngress": {
        "privilege": "RevokeClientVpnIngress",
        "description": "Grants permission to remove an inbound authorization rule from a Client VPN endpoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeClientVpnIngress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "revokeSecurityGroupEgress": {
        "privilege": "RevokeSecurityGroupEgress",
        "description": "Grants permission to remove one or more outbound rules from a VPC security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "revokeSecurityGroupIngress": {
        "privilege": "RevokeSecurityGroupIngress",
        "description": "Grants permission to remove one or more inbound rules from a security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "runInstances": {
        "privilege": "RunInstances",
        "description": "Grants permission to launch one or more instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "volume": {
                "resourceName": "volume",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KmsKeyId": {
                        "condition": "ec2:KmsKeyId",
                        "description": "Filters access by the ID of an AWS KMS key",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:ParentSnapshot": {
                        "condition": "ec2:ParentSnapshot",
                        "description": "Filters access by the ARN of the parent snapshot",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VolumeID": {
                        "condition": "ec2:VolumeID",
                        "description": "Filters access by the ID of a volume",
                        "type": "String"
                    },
                    "ec2:VolumeIops": {
                        "condition": "ec2:VolumeIops",
                        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
                        "type": "Numeric"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    },
                    "ec2:VolumeThroughput": {
                        "condition": "ec2:VolumeThroughput",
                        "description": "Filters access by the throughput of the volume, in MiBps",
                        "type": "Numeric"
                    },
                    "ec2:VolumeType": {
                        "condition": "ec2:VolumeType",
                        "description": "Filters access by the type of volume (gp2, gp3, io1, io2, st1, sc1, or standard)",
                        "type": "String"
                    }
                }
            },
            "capacityReservation": {
                "resourceName": "capacity-reservation",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:CapacityReservationFleet": {
                        "condition": "ec2:CapacityReservationFleet",
                        "description": "Filters access by the ARN of the Capacity Reservation Fleet",
                        "type": "ARN"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "elasticGpu": {
                "resourceName": "elastic-gpu",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:ElasticGpuType": {
                        "condition": "ec2:ElasticGpuType",
                        "description": "Filters access by the type of Elastic Graphics accelerator",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "elasticInference": {
                "resourceName": "elastic-inference",
                "resourceArn": "arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${ElasticInferenceAcceleratorId}",
                "required": false,
                "resourceConditions": {}
            },
            "group": {
                "resourceName": "group",
                "resourceArn": "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}",
                "required": false,
                "resourceConditions": {}
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "launchTemplate": {
                "resourceName": "launch-template",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "licenseConfiguration": {
                "resourceName": "license-configuration",
                "resourceArn": "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration/${LicenseConfigurationId}",
                "required": false,
                "resourceConditions": {}
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            }
        }
    },
    "runScheduledInstances": {
        "privilege": "RunScheduledInstances",
        "description": "Grants permission to launch one or more Scheduled Instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunScheduledInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "image": {
                "resourceName": "image",
                "resourceArn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ImageID": {
                        "condition": "ec2:ImageID",
                        "description": "Filters access by the ID of an image",
                        "type": "String"
                    },
                    "ec2:ImageType": {
                        "condition": "ec2:ImageType",
                        "description": "Filters access by the type of image (machine, aki, or ari)",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:Public": {
                        "condition": "ec2:Public",
                        "description": "Filters access by whether the image has public launch permissions",
                        "type": "Bool"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    }
                }
            },
            "keyPair": {
                "resourceName": "key-pair",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:KeyPairName": {
                        "condition": "ec2:KeyPairName",
                        "description": "Filters access by the name of a key pair",
                        "type": "String"
                    },
                    "ec2:KeyPairType": {
                        "condition": "ec2:KeyPairType",
                        "description": "Filters access by the type of a key pair",
                        "type": "String"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "placementGroup": {
                "resourceName": "placement-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroupName": {
                        "condition": "ec2:PlacementGroupName",
                        "description": "Filters access by the name of a placement group",
                        "type": "String"
                    },
                    "ec2:PlacementGroupStrategy": {
                        "condition": "ec2:PlacementGroupStrategy",
                        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Add/group": {
                        "condition": "ec2:Add/group",
                        "description": "Filters access by the group being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Add/userId": {
                        "condition": "ec2:Add/userId",
                        "description": "Filters access by the account id being added to a snapshot",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:Encrypted": {
                        "condition": "ec2:Encrypted",
                        "description": "Filters access by whether the EBS volume is encrypted",
                        "type": "Bool"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:OutpostArn": {
                        "condition": "ec2:OutpostArn",
                        "description": "Filters access by the ARN of the Outpost",
                        "type": "ARN"
                    },
                    "ec2:Owner": {
                        "condition": "ec2:Owner",
                        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
                        "type": "String"
                    },
                    "ec2:ParentVolume": {
                        "condition": "ec2:ParentVolume",
                        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:Remove/group": {
                        "condition": "ec2:Remove/group",
                        "description": "Filters access by the group being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:Remove/userId": {
                        "condition": "ec2:Remove/userId",
                        "description": "Filters access by the account id being removed from a snapshot",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SnapshotID": {
                        "condition": "ec2:SnapshotID",
                        "description": "Filters access by the ID of a snapshot",
                        "type": "String"
                    },
                    "ec2:SnapshotTime": {
                        "condition": "ec2:SnapshotTime",
                        "description": "Filters access by the initiation time of a snapshot",
                        "type": "String"
                    },
                    "ec2:SourceOutpostArn": {
                        "condition": "ec2:SourceOutpostArn",
                        "description": "Filters access by the ARN of the Outpost from which the request originated",
                        "type": "ARN"
                    },
                    "ec2:VolumeSize": {
                        "condition": "ec2:VolumeSize",
                        "description": "Filters access by the size of the volume, in GiB",
                        "type": "Numeric"
                    }
                }
            },
            "subnet": {
                "resourceName": "subnet",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SubnetID": {
                        "condition": "ec2:SubnetID",
                        "description": "Filters access by the ID of a subnet",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "searchLocalGatewayRoutes": {
        "privilege": "SearchLocalGatewayRoutes",
        "description": "Grants permission to search for routes in a local gateway route table",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchLocalGatewayRoutes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "searchTransitGatewayMulticastGroups": {
        "privilege": "SearchTransitGatewayMulticastGroups",
        "description": "Grants permission to search for groups, sources, and members in a transit gateway multicast domain",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    },
    "searchTransitGatewayRoutes": {
        "privilege": "SearchTransitGatewayRoutes",
        "description": "Grants permission to search for routes in a transit gateway route table",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "transitGatewayRouteTable": {
                "resourceName": "transit-gateway-route-table",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "sendDiagnosticInterrupt": {
        "privilege": "SendDiagnosticInterrupt",
        "description": "Grants permission to send a diagnostic interrupt to an Amazon EC2 instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SendDiagnosticInterrupt.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "sendSpotInstanceInterruptions": {
        "privilege": "SendSpotInstanceInterruptions",
        "description": "Grants permission to interrupt a Spot Instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html#send-spot-instance-interruptions",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "startInstances": {
        "privilege": "StartInstances",
        "description": "Grants permission to start a stopped instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            },
            "licenseConfiguration": {
                "resourceName": "license-configuration",
                "resourceArn": "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration/${LicenseConfigurationId}",
                "required": false,
                "resourceConditions": {}
            }
        }
    },
    "startNetworkInsightsAccessScopeAnalysis": {
        "privilege": "StartNetworkInsightsAccessScopeAnalysis",
        "description": "Grants permission to start a Network Access Scope analysis",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAccessScopeAnalysis.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsAccessScope": {
                "resourceName": "network-insights-access-scope",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "startNetworkInsightsAnalysis": {
        "privilege": "StartNetworkInsightsAnalysis",
        "description": "Grants permission to start analyzing a specified path",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartNetworkInsightsAnalysis.html",
        "service": "ec2",
        "dependentActions": [
            "ec2:CreateTags"
        ],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInsightsAnalysis": {
                "resourceName": "network-insights-analysis",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            },
            "networkInsightsPath": {
                "resourceName": "network-insights-path",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "startVpcEndpointServicePrivateDnsVerification": {
        "privilege": "StartVpcEndpointServicePrivateDnsVerification",
        "description": "Grants permission to start the private DNS verification process for a VPC endpoint service",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartVpcEndpointServicePrivateDnsVerification.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "vpcEndpointService": {
                "resourceName": "vpc-endpoint-service",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:VpceServicePrivateDnsName": {
                        "condition": "ec2:VpceServicePrivateDnsName",
                        "description": "Filters access by the private DNS name of the VPC endpoint service",
                        "type": "String"
                    }
                }
            }
        }
    },
    "stopInstances": {
        "privilege": "StopInstances",
        "description": "Grants permission to stop an Amazon EBS-backed instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StopInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "terminateClientVpnConnections": {
        "privilege": "TerminateClientVpnConnections",
        "description": "Grants permission to terminate active Client VPN endpoint connections",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateClientVpnConnections.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "clientVpnEndpoint": {
                "resourceName": "client-vpn-endpoint",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:ClientRootCertificateChainArn": {
                        "condition": "ec2:ClientRootCertificateChainArn",
                        "description": "Filters access by the ARN of the client root certificate chain",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogGroupArn": {
                        "condition": "ec2:CloudwatchLogGroupArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log group",
                        "type": "ARN"
                    },
                    "ec2:CloudwatchLogStreamArn": {
                        "condition": "ec2:CloudwatchLogStreamArn",
                        "description": "Filters access by the ARN of the CloudWatch Logs log stream",
                        "type": "ARN"
                    },
                    "ec2:DirectoryArn": {
                        "condition": "ec2:DirectoryArn",
                        "description": "Filters access by the ARN of the directory",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SamlProviderArn": {
                        "condition": "ec2:SamlProviderArn",
                        "description": "Filters access by the ARN of the IAM SAML identity provider",
                        "type": "ARN"
                    },
                    "ec2:ServerCertificateArn": {
                        "condition": "ec2:ServerCertificateArn",
                        "description": "Filters access by the ARN of the server certificate",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "terminateInstances": {
        "privilege": "TerminateInstances",
        "description": "Grants permission to shut down one or more instances",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "unassignIpv6Addresses": {
        "privilege": "UnassignIpv6Addresses",
        "description": "Grants permission to unassign one or more IPv6 addresses from a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignIpv6Addresses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "unassignPrivateIpAddresses": {
        "privilege": "UnassignPrivateIpAddresses",
        "description": "Grants permission to unassign one or more secondary private IP addresses from a network interface",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnassignPrivateIpAddresses.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "networkInterface": {
                "resourceName": "network-interface",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:AssociatePublicIpAddress": {
                        "condition": "ec2:AssociatePublicIpAddress",
                        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
                        "type": "Bool"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedService": {
                        "condition": "ec2:AuthorizedService",
                        "description": "Filters access by the AWS service that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AuthorizedUser": {
                        "condition": "ec2:AuthorizedUser",
                        "description": "Filters access by an IAM principal that has permission to use a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:NetworkInterfaceID": {
                        "condition": "ec2:NetworkInterfaceID",
                        "description": "Filters access by the ID of an elastic network interface",
                        "type": "String"
                    },
                    "ec2:Permission": {
                        "condition": "ec2:Permission",
                        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
                        "type": "String"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:Subnet": {
                        "condition": "ec2:Subnet",
                        "description": "Filters access by the ARN of the subnet",
                        "type": "ARN"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "unmonitorInstances": {
        "privilege": "UnmonitorInstances",
        "description": "Grants permission to disable detailed monitoring for a running instance",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "instance": {
                "resourceName": "instance",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:AvailabilityZone": {
                        "condition": "ec2:AvailabilityZone",
                        "description": "Filters access by the name of an Availability Zone in an AWS Region",
                        "type": "String"
                    },
                    "ec2:EbsOptimized": {
                        "condition": "ec2:EbsOptimized",
                        "description": "Filters access by whether the instance is enabled for EBS optimization",
                        "type": "Bool"
                    },
                    "ec2:InstanceAutoRecovery": {
                        "condition": "ec2:InstanceAutoRecovery",
                        "description": "Filters access by whether the instance type supports auto recovery",
                        "type": "String"
                    },
                    "ec2:InstanceID": {
                        "condition": "ec2:InstanceID",
                        "description": "Filters access by the ID of an instance",
                        "type": "String"
                    },
                    "ec2:InstanceMarketType": {
                        "condition": "ec2:InstanceMarketType",
                        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
                        "type": "String"
                    },
                    "ec2:InstanceMetadataTags": {
                        "condition": "ec2:InstanceMetadataTags",
                        "description": "Filters access by whether the instance allows access to instance tags from the instance metadata",
                        "type": "String"
                    },
                    "ec2:InstanceProfile": {
                        "condition": "ec2:InstanceProfile",
                        "description": "Filters access by the ARN of an instance profile",
                        "type": "ARN"
                    },
                    "ec2:InstanceType": {
                        "condition": "ec2:InstanceType",
                        "description": "Filters access by the type of instance",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:MetadataHttpEndpoint": {
                        "condition": "ec2:MetadataHttpEndpoint",
                        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
                        "type": "String"
                    },
                    "ec2:MetadataHttpPutResponseHopLimit": {
                        "condition": "ec2:MetadataHttpPutResponseHopLimit",
                        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
                        "type": "Numeric"
                    },
                    "ec2:MetadataHttpTokens": {
                        "condition": "ec2:MetadataHttpTokens",
                        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
                        "type": "String"
                    },
                    "ec2:NewInstanceProfile": {
                        "condition": "ec2:NewInstanceProfile",
                        "description": "Filters access by the ARN of the instance profile being attached",
                        "type": "ARN"
                    },
                    "ec2:PlacementGroup": {
                        "condition": "ec2:PlacementGroup",
                        "description": "Filters access by the ARN of the placement group",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:RootDeviceType": {
                        "condition": "ec2:RootDeviceType",
                        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
                        "type": "String"
                    },
                    "ec2:Tenancy": {
                        "condition": "ec2:Tenancy",
                        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateSecurityGroupRuleDescriptionsEgress": {
        "privilege": "UpdateSecurityGroupRuleDescriptionsEgress",
        "description": "Grants permission to update descriptions for one or more outbound rules in a VPC security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsEgress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "updateSecurityGroupRuleDescriptionsIngress": {
        "privilege": "UpdateSecurityGroupRuleDescriptionsIngress",
        "description": "Grants permission to update descriptions for one or more inbound rules in a security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UpdateSecurityGroupRuleDescriptionsIngress.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {
            "securityGroup": {
                "resourceName": "security-group",
                "resourceArn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair that is allowed in the request",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys that are allowed in the request",
                        "type": "String"
                    },
                    "ec2:Attribute": {
                        "condition": "ec2:Attribute",
                        "description": "Filters access by an attribute of a resource",
                        "type": "String"
                    },
                    "ec2:Attribute/${AttributeName}": {
                        "condition": "ec2:Attribute/${AttributeName}",
                        "description": "Filters access by an attribute being set on a resource",
                        "type": "String"
                    },
                    "ec2:IsLaunchTemplateResource": {
                        "condition": "ec2:IsLaunchTemplateResource",
                        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
                        "type": "Bool"
                    },
                    "ec2:LaunchTemplate": {
                        "condition": "ec2:LaunchTemplate",
                        "description": "Filters access by the ARN of a launch template",
                        "type": "ARN"
                    },
                    "ec2:Region": {
                        "condition": "ec2:Region",
                        "description": "Filters access by the name of the AWS Region",
                        "type": "String"
                    },
                    "ec2:ResourceTag/${TagKey}": {
                        "condition": "ec2:ResourceTag/${TagKey}",
                        "description": "Filters access by a tag key and value pair of a resource",
                        "type": "String"
                    },
                    "ec2:SecurityGroupID": {
                        "condition": "ec2:SecurityGroupID",
                        "description": "Filters access by the ID of a security group",
                        "type": "String"
                    },
                    "ec2:Vpc": {
                        "condition": "ec2:Vpc",
                        "description": "Filters access by the ARN of the VPC",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "withdrawByoipCidr": {
        "privilege": "WithdrawByoipCidr",
        "description": "Grants permission to stop advertising an address range that was provisioned for use in AWS through bring your own IP addresses (BYOIP)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_WithdrawByoipCidr.html",
        "service": "ec2",
        "dependentActions": [],
        "privConditions": {
            "ec2:Region": {
                "condition": "ec2:Region",
                "description": "Filters access by the name of the AWS Region",
                "type": "String"
            }
        },
        "resources": {}
    }
}
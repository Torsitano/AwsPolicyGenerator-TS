{
    "autoscaling:ImageId": {
        "condition": "autoscaling:ImageId",
        "description": "Filters access based on the AMI used to create the instance",
        "type": "String"
    },
    "autoscaling:InstanceType": {
        "condition": "autoscaling:InstanceType",
        "description": "Filters access based on the type of instance, in terms of the hardware resources available",
        "type": "String"
    },
    "autoscaling:InstanceTypes": {
        "condition": "autoscaling:InstanceTypes",
        "description": "Filters access based on the types of instances, in terms of the hardware resources available",
        "type": "String"
    },
    "autoscaling:LaunchConfigurationName": {
        "condition": "autoscaling:LaunchConfigurationName",
        "description": "Filters access based on the name of a launch configuration",
        "type": "String"
    },
    "autoscaling:LaunchTemplateVersionSpecified": {
        "condition": "autoscaling:LaunchTemplateVersionSpecified",
        "description": "Filters access based on whether users can specify any version of a launch template or only the Latest or Default version",
        "type": "Bool"
    },
    "autoscaling:LoadBalancerNames": {
        "condition": "autoscaling:LoadBalancerNames",
        "description": "Filters access based on the name of the load balancer",
        "type": "String"
    },
    "autoscaling:MaxSize": {
        "condition": "autoscaling:MaxSize",
        "description": "Filters access based on the maximum scaling size",
        "type": "Numeric"
    },
    "autoscaling:MetadataHttpEndpoint": {
        "condition": "autoscaling:MetadataHttpEndpoint",
        "description": "Filters access based on whether the HTTP endpoint is enabled for the instance metadata service",
        "type": "String"
    },
    "autoscaling:MetadataHttpPutResponseHopLimit": {
        "condition": "autoscaling:MetadataHttpPutResponseHopLimit",
        "description": "Filters access based on the allowed number of hops when calling the instance metadata service",
        "type": "Numeric"
    },
    "autoscaling:MetadataHttpTokens": {
        "condition": "autoscaling:MetadataHttpTokens",
        "description": "Filters access based on whether tokens are required when calling the instance metadata service (optional or required)",
        "type": "String"
    },
    "autoscaling:MinSize": {
        "condition": "autoscaling:MinSize",
        "description": "Filters access based on the minimum scaling size",
        "type": "Numeric"
    },
    "autoscaling:ResourceTag/${TagKey}": {
        "condition": "autoscaling:ResourceTag/${TagKey}",
        "description": "Filters access based on the value of a tag attached to a resource",
        "type": "String"
    },
    "autoscaling:SpotPrice": {
        "condition": "autoscaling:SpotPrice",
        "description": "Filters access based on the spot price associated with an instance",
        "type": "Numeric"
    },
    "autoscaling:TargetGroupARNs": {
        "condition": "autoscaling:TargetGroupARNs",
        "description": "Filters access based on the ARN of a target group",
        "type": "ARN"
    },
    "autoscaling:VPCZoneIdentifiers": {
        "condition": "autoscaling:VPCZoneIdentifiers",
        "description": "Filters access based on the identifier of a VPC zone",
        "type": "String"
    },
    "aws:RequestTag/${TagKey}": {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access based on the value of a tag associated with the request",
        "type": "String"
    },
    "aws:ResourceTag/${TagKey}": {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access based on the tag-value associated with the resource",
        "type": "String"
    },
    "aws:TagKeys": {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request",
        "type": "String"
    }
}
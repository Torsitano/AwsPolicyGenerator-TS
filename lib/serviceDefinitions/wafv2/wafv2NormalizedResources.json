{
    "webacl": {
        "resourceName": "webacl",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/webacl/${Name}/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListResourcesForWebACL": {
                "privilege": "ListResourcesForWebACL",
                "description": "Grants permission to retrieve an array of the Amazon Resource Names (ARNs) for the resources that are associated with a web ACL",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_ListResourcesForWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetLoggingConfiguration": {
                "privilege": "GetLoggingConfiguration",
                "description": "Grants permission to retrieve LoggingConfiguration for a WebACL",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetLoggingConfiguration.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetRateBasedStatementManagedKeys": {
                "privilege": "GetRateBasedStatementManagedKeys",
                "description": "Grants permission to retrieve the keys that are currently blocked by a rate-based rule",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetRateBasedStatementManagedKeys.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetSampledRequests": {
                "privilege": "GetSampledRequests",
                "description": "Grants permission to retrieve detailed information about a sampling of web requests",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetSampledRequests.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetWebACL": {
                "privilege": "GetWebACL",
                "description": "Grants permission to retrieve details about a WebACL",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetWebACL.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_ListTagsForResource.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateWebACL": {
                "privilege": "AssociateWebACL",
                "description": "Grants permission to associate a WebACL with a resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "CreateWebACL": {
                "privilege": "CreateWebACL",
                "description": "Grants permission to create a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateWebACL.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteFirewallManagerRuleGroups": {
                "privilege": "DeleteFirewallManagerRuleGroups",
                "description": "Grants permission to delete FirewallManagedRulesGroups from a WebACL if not managed by Firewall Manager anymore",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DeleteFirewallManagerRuleGroups.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteLoggingConfiguration": {
                "privilege": "DeleteLoggingConfiguration",
                "description": "Grants permission to delete the LoggingConfiguration from a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DeleteLoggingConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteWebACL": {
                "privilege": "DeleteWebACL",
                "description": "Grants permission to delete a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DeleteWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateFirewallManager": {
                "privilege": "DisassociateFirewallManager",
                "description": "Grants permission to disassociate Firewall Manager from a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DisassociateFirewallManager.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutFirewallManagerRuleGroups": {
                "privilege": "PutFirewallManagerRuleGroups",
                "description": "Grants permission to create FirewallManagedRulesGroups in a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_PutFirewallManagerRuleGroups.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutLoggingConfiguration": {
                "privilege": "PutLoggingConfiguration",
                "description": "Grants permission to enable a LoggingConfiguration, to start logging for a web ACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_PutLoggingConfiguration.html",
                "privConditions": {},
                "dependentActions": [
                    "iam:CreateServiceLinkedRole"
                ],
                "required": true
            },
            "UpdateWebACL": {
                "privilege": "UpdateWebACL",
                "description": "Grants permission to update a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateWebACL.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to associate tags with a AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_TagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to disassociate tags from an AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "ipset": {
        "resourceName": "ipset",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/ipset/${Name}/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetIPSet": {
                "privilege": "GetIPSet",
                "description": "Grants permission to retrieve details about an IPSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetIPSet.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_ListTagsForResource.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateIPSet": {
                "privilege": "CreateIPSet",
                "description": "Grants permission to create an IPSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateIPSet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateRuleGroup": {
                "privilege": "CreateRuleGroup",
                "description": "Grants permission to create a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateWebACL": {
                "privilege": "CreateWebACL",
                "description": "Grants permission to create a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateWebACL.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteIPSet": {
                "privilege": "DeleteIPSet",
                "description": "Grants permission to delete an IPSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DeleteIPSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateIPSet": {
                "privilege": "UpdateIPSet",
                "description": "Grants permission to update an IPSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateIPSet.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateRuleGroup": {
                "privilege": "UpdateRuleGroup",
                "description": "Grants permission to update a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateRuleGroup.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UpdateWebACL": {
                "privilege": "UpdateWebACL",
                "description": "Grants permission to update a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateWebACL.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to associate tags with a AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_TagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to disassociate tags from an AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "managedruleset": {
        "resourceName": "managedruleset",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/managedruleset/${Name}/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetManagedRuleSet": {
                "privilege": "GetManagedRuleSet",
                "description": "Grants permission to retrieve details about a ManagedRuleSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetManagedRuleSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateWebACL": {
                "privilege": "CreateWebACL",
                "description": "Grants permission to create a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateWebACL.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "PutManagedRuleSetVersions": {
                "privilege": "PutManagedRuleSetVersions",
                "description": "Grants permission to enable create a new or update an existing version of a ManagedRuleSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_PutManagedRuleSetVersions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateManagedRuleSetVersionExpiryDate": {
                "privilege": "UpdateManagedRuleSetVersionExpiryDate",
                "description": "Grants permission to update the expiry date of a version in ManagedRuleSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateManagedRuleSetVersionExpiryDate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateWebACL": {
                "privilege": "UpdateWebACL",
                "description": "Grants permission to update a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateWebACL.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "rulegroup": {
        "resourceName": "rulegroup",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/rulegroup/${Name}/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetPermissionPolicy": {
                "privilege": "GetPermissionPolicy",
                "description": "Grants permission to retrieve a PermissionPolicy for a RuleGroup",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetPermissionPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetRuleGroup": {
                "privilege": "GetRuleGroup",
                "description": "Grants permission to retrieve details about a RuleGroup",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetRuleGroup.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_ListTagsForResource.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateRuleGroup": {
                "privilege": "CreateRuleGroup",
                "description": "Grants permission to create a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateWebACL": {
                "privilege": "CreateWebACL",
                "description": "Grants permission to create a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateWebACL.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteRuleGroup": {
                "privilege": "DeleteRuleGroup",
                "description": "Grants permission to delete a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DeleteRuleGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutManagedRuleSetVersions": {
                "privilege": "PutManagedRuleSetVersions",
                "description": "Grants permission to enable create a new or update an existing version of a ManagedRuleSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_PutManagedRuleSetVersions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRuleGroup": {
                "privilege": "UpdateRuleGroup",
                "description": "Grants permission to update a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateRuleGroup.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UpdateWebACL": {
                "privilege": "UpdateWebACL",
                "description": "Grants permission to update a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateWebACL.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {
            "DeletePermissionPolicy": {
                "privilege": "DeletePermissionPolicy",
                "description": "Grants permission to delete the PermissionPolicy on a RuleGroup",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DeletePermissionPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutPermissionPolicy": {
                "privilege": "PutPermissionPolicy",
                "description": "Grants permission to attach an IAM policy to a resource, used to share rule groups between accounts",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_PutPermissionPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to associate tags with a AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_TagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to disassociate tags from an AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "regexpatternset": {
        "resourceName": "regexpatternset",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/regexpatternset/${Name}/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetRegexPatternSet": {
                "privilege": "GetRegexPatternSet",
                "description": "Grants permission to retrieve details about a RegexPatternSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetRegexPatternSet.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_ListTagsForResource.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateRegexPatternSet": {
                "privilege": "CreateRegexPatternSet",
                "description": "Grants permission to create a RegexPatternSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRegexPatternSet.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateRuleGroup": {
                "privilege": "CreateRuleGroup",
                "description": "Grants permission to create a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateWebACL": {
                "privilege": "CreateWebACL",
                "description": "Grants permission to create a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateWebACL.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteRegexPatternSet": {
                "privilege": "DeleteRegexPatternSet",
                "description": "Grants permission to delete a RegexPatternSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DeleteRegexPatternSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRegexPatternSet": {
                "privilege": "UpdateRegexPatternSet",
                "description": "Grants permission to update a RegexPatternSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateRegexPatternSet.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateRuleGroup": {
                "privilege": "UpdateRuleGroup",
                "description": "Grants permission to update a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateRuleGroup.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UpdateWebACL": {
                "privilege": "UpdateWebACL",
                "description": "Grants permission to update a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UpdateWebACL.html",
                "privConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to associate tags with a AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_TagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to disassociate tags from an AWS resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "loadbalancer/app/": {
        "resourceName": "loadbalancer/app/",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetWebACLForResource": {
                "privilege": "GetWebACLForResource",
                "description": "Grants permission to retrieve the WebACL that's associated with a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetWebACLForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateWebACL": {
                "privilege": "AssociateWebACL",
                "description": "Grants permission to associate a WebACL with a resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DisassociateWebACL": {
                "privilege": "DisassociateWebACL",
                "description": "Grants permission to disassociate a WebACL from an application resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DisassociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "apigateway": {
        "resourceName": "apigateway",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:apigateway:${Region}::/restapis/${ApiId}/stages/${StageName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetWebACLForResource": {
                "privilege": "GetWebACLForResource",
                "description": "Grants permission to retrieve the WebACL that's associated with a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetWebACLForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateWebACL": {
                "privilege": "AssociateWebACL",
                "description": "Grants permission to associate a WebACL with a resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DisassociateWebACL": {
                "privilege": "DisassociateWebACL",
                "description": "Grants permission to disassociate a WebACL from an application resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DisassociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "appsync": {
        "resourceName": "appsync",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetWebACLForResource": {
                "privilege": "GetWebACLForResource",
                "description": "Grants permission to retrieve the WebACL that's associated with a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetWebACLForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateWebACL": {
                "privilege": "AssociateWebACL",
                "description": "Grants permission to associate a WebACL with a resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DisassociateWebACL": {
                "privilege": "DisassociateWebACL",
                "description": "Grants permission to disassociate a WebACL from an application resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DisassociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "userpool": {
        "resourceName": "userpool",
        "service": "wafv2",
        "resourceArn": "arn:${Partition}:cognito-idp:${Region}:${Account}:userpool/${UserPoolId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetWebACLForResource": {
                "privilege": "GetWebACLForResource",
                "description": "Grants permission to retrieve the WebACL that's associated with a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_GetWebACLForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateWebACL": {
                "privilege": "AssociateWebACL",
                "description": "Grants permission to associate a WebACL with a resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DisassociateWebACL": {
                "privilege": "DisassociateWebACL",
                "description": "Grants permission to disassociate a WebACL from an application resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_DisassociateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    }
}
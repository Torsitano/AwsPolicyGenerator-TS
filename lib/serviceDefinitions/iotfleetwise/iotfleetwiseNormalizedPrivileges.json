{
    "associateVehicleFleet": {
        "privilege": "AssociateVehicleFleet",
        "description": "Grants permission to associate the given vehicle to a fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_AssociateVehicleFleet.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createCampaign": {
        "privilege": "CreateCampaign",
        "description": "Grants permission to create a campaign",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_CreateCampaign.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createDecoderManifest": {
        "privilege": "CreateDecoderManifest",
        "description": "Grants permission to create a decoder manifest for an existing model",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_CreateDecoderManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createFleet": {
        "privilege": "CreateFleet",
        "description": "Grants permission to create a fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_CreateFleet.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createModelManifest": {
        "privilege": "CreateModelManifest",
        "description": "Grants permission to create a model manifest definition",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_CreateModelManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSignalCatalog": {
        "privilege": "CreateSignalCatalog",
        "description": "Grants permission to create a signal catalog",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_CreateSignalCatalog.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {}
    },
    "createVehicle": {
        "privilege": "CreateVehicle",
        "description": "Grants permission to create a vehicle",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_CreateVehicle.html",
        "service": "iotfleetwise",
        "dependentActions": [
            "iot:CreateThing",
            "iot:DescribeThing"
        ],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteCampaign": {
        "privilege": "DeleteCampaign",
        "description": "Grants permission to delete a campaign",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_DeleteCampaign.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "campaign": {
                "resourceName": "campaign",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/${CampaignName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteDecoderManifest": {
        "privilege": "DeleteDecoderManifest",
        "description": "Grants permission to delete the given decoder manifest",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_DeleteDecoderManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteFleet": {
        "privilege": "DeleteFleet",
        "description": "Grants permission to delete a fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_DeleteFleet.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteModelManifest": {
        "privilege": "DeleteModelManifest",
        "description": "Grants permission to delete the given model manifest",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_DeleteModelManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteSignalCatalog": {
        "privilege": "DeleteSignalCatalog",
        "description": "Grants permission to delete a specific signal catalog",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_DeleteSignalCatalog.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteVehicle": {
        "privilege": "DeleteVehicle",
        "description": "Grants permission to delete a vehicle",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_DeleteVehicle.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disassociateVehicleFleet": {
        "privilege": "DisassociateVehicleFleet",
        "description": "Grants permission to disassociate a vehicle from an existing fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_DisassociateVehicleFleet.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getCampaign": {
        "privilege": "GetCampaign",
        "description": "Grants permission to get summary information for a given campaign",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetCampaign.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "campaign": {
                "resourceName": "campaign",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/${CampaignName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getDecoderManifest": {
        "privilege": "GetDecoderManifest",
        "description": "Grants permission to get summary information for a given decoder manifest definition",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetDecoderManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getFleet": {
        "privilege": "GetFleet",
        "description": "Grants permission to get summary information for a fleet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetFleet.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getLoggingOptions": {
        "privilege": "GetLoggingOptions",
        "description": "Grants permission to get the logging options for the AWS account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetLoggingOptions.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "getModelManifest": {
        "privilege": "GetModelManifest",
        "description": "Grants permission to get summary information for a given model manifest definition",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetModelManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getRegisterAccountStatus": {
        "privilege": "GetRegisterAccountStatus",
        "description": "Grants permission to get the account registration status with IoT FleetWise",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetRegisterAccountStatus.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "getSignalCatalog": {
        "privilege": "GetSignalCatalog",
        "description": "Grants permission to get summary information for a specific signal catalog",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetSignalCatalog.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getVehicle": {
        "privilege": "GetVehicle",
        "description": "Grants permission to get summary information for a vehicle",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetVehicle.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getVehicleStatus": {
        "privilege": "GetVehicleStatus",
        "description": "Grants permission to get the status of the campaigns running on a specific vehicle",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_GetVehicleStatus.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "importDecoderManifest": {
        "privilege": "ImportDecoderManifest",
        "description": "Grants permission to import an existing decoder manifest",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ImportDecoderManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "importSignalCatalog": {
        "privilege": "ImportSignalCatalog",
        "description": "Grants permission to create a signal catalog by importing existing definitions",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ImportSignalCatalog.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {}
    },
    "listCampaigns": {
        "privilege": "ListCampaigns",
        "description": "Grants permission to list campaigns",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListCampaigns.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listDecoderManifestNetworkInterfaces": {
        "privilege": "ListDecoderManifestNetworkInterfaces",
        "description": "Grants permission to list network interfaces associated to the existing decoder manifest",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListDecoderManifestNetworkInterfaces.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listDecoderManifestSignals": {
        "privilege": "ListDecoderManifestSignals",
        "description": "Grants permission to list decoder manifest signals",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListDecoderManifestSignals.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listDecoderManifests": {
        "privilege": "ListDecoderManifests",
        "description": "Grants permission to list all decoder manifests, with an optional filter on model manifest",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListDecoderManifests.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listFleets": {
        "privilege": "ListFleets",
        "description": "Grants permission to list all fleets",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListFleets.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listFleetsForVehicle": {
        "privilege": "ListFleetsForVehicle",
        "description": "Grants permission to list all the fleets that the given vehicle is associated with",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListFleetsForVehicle.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listModelManifestNodes": {
        "privilege": "ListModelManifestNodes",
        "description": "Grants permission to list all nodes for the given model manifest",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListModelManifestNodes.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listModelManifests": {
        "privilege": "ListModelManifests",
        "description": "Grants permission to list all model manifests, with an optional filter on signal catalog",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListModelManifests.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listSignalCatalogNodes": {
        "privilege": "ListSignalCatalogNodes",
        "description": "Grants permission to list all nodes for a given signal catalog",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListSignalCatalogNodes.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listSignalCatalogs": {
        "privilege": "ListSignalCatalogs",
        "description": "Grants permission to list all signal catalogs",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListSignalCatalogs.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listTagsForResource": {
        "privilege": "ListTagsForResource",
        "description": "Grants permission to list tags for a resource",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListTagsForResource.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "campaign": {
                "resourceName": "campaign",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/${CampaignName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listVehicles": {
        "privilege": "ListVehicles",
        "description": "Grants permission to list all vehicles, with an optional filter on model manifest",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListVehicles.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listVehiclesInFleet": {
        "privilege": "ListVehiclesInFleet",
        "description": "Grants permission to list vehicles in the given fleet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_ListVehiclesInFleet.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putLoggingOptions": {
        "privilege": "PutLoggingOptions",
        "description": "Grants permission to put the logging options for the AWS account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_PutLoggingOptions.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "registerAccount": {
        "privilege": "RegisterAccount",
        "description": "Grants permission to register an AWS account to IoT FleetWise",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_RegisterAccount.html",
        "service": "iotfleetwise",
        "dependentActions": [
            "iam:PassRole"
        ],
        "privConditions": {},
        "resources": {}
    },
    "tagResource": {
        "privilege": "TagResource",
        "description": "Grants permission to add tags to a resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_TagResource.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the presence of tag key-value pairs in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "campaign": {
                "resourceName": "campaign",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/${CampaignName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "untagResource": {
        "privilege": "UntagResource",
        "description": "Grants permission to remove tags from a resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_UntagResource.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "campaign": {
                "resourceName": "campaign",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/${CampaignName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateCampaign": {
        "privilege": "UpdateCampaign",
        "description": "Grants permission to update the given campaign",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_UpdateCampaign.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "campaign": {
                "resourceName": "campaign",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/${CampaignName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateDecoderManifest": {
        "privilege": "UpdateDecoderManifest",
        "description": "Grants permission to update a decoder manifest defnition",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_UpdateDecoderManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateFleet": {
        "privilege": "UpdateFleet",
        "description": "Grants permission to update the fleet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_UpdateFleet.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "fleet": {
                "resourceName": "fleet",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateModelManifest": {
        "privilege": "UpdateModelManifest",
        "description": "Grants permission to update the given model manifest definition",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_UpdateModelManifest.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateSignalCatalog": {
        "privilege": "UpdateSignalCatalog",
        "description": "Grants permission to update a specific signal catalog definition",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_UpdateSignalCatalog.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "signalcatalog": {
                "resourceName": "signalcatalog",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateVehicle": {
        "privilege": "UpdateVehicle",
        "description": "Grants permission to update the vehicle",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iot-fleetwise/latest/APIReference/API_UpdateVehicle.html",
        "service": "iotfleetwise",
        "dependentActions": [],
        "privConditions": {
            "iotfleetwise:UpdateToModelManifestArn": {
                "condition": "iotfleetwise:UpdateToModelManifestArn",
                "description": "Filters access by a list of IoT FleetWise Model Manifest ARNs",
                "type": "String"
            },
            "iotfleetwise:UpdateToDecoderManifestArn": {
                "condition": "iotfleetwise:UpdateToDecoderManifestArn",
                "description": "Filters access by a list of IoT FleetWise Decoder Manifest ARNs",
                "type": "String"
            }
        },
        "resources": {
            "vehicle": {
                "resourceName": "vehicle",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "decodermanifest": {
                "resourceName": "decodermanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "modelmanifest": {
                "resourceName": "modelmanifest",
                "resourceArn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    }
}
{
    "wirelessDevice": {
        "resourceName": "WirelessDevice",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessDevice/${WirelessDeviceId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetPosition": {
                "privilege": "GetPosition",
                "description": "Grants permission to get position for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetPosition.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetPositionConfiguration": {
                "privilege": "GetPositionConfiguration",
                "description": "Grants permission to get position configuration for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetPositionConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetResourceEventConfiguration": {
                "privilege": "GetResourceEventConfiguration",
                "description": "Grants permission to get an event configuration for an identifier",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourceEventConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetResourceLogLevel": {
                "privilege": "GetResourceLogLevel",
                "description": "Grants permission to get resource log level",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourceLogLevel.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetWirelessDevice": {
                "privilege": "GetWirelessDevice",
                "description": "Grants permission to get the WirelessDevice",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessDevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetWirelessDeviceStatistics": {
                "privilege": "GetWirelessDeviceStatistics",
                "description": "Grants permission to get statistics info for a given WirelessDevice",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessDeviceStatistics.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateWirelessDeviceWithFuotaTask": {
                "privilege": "AssociateWirelessDeviceWithFuotaTask",
                "description": "Grants permission to associate the wireless device with FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessDeviceWithFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateWirelessDeviceWithMulticastGroup": {
                "privilege": "AssociateWirelessDeviceWithMulticastGroup",
                "description": "Grants permission to associate the WirelessDevice with MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessDeviceWithMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateWirelessDeviceWithThing": {
                "privilege": "AssociateWirelessDeviceWithThing",
                "description": "Grants permission to associate the wireless device with AWS IoT thing for a given wirelessDeviceId",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessDeviceWithThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateNetworkAnalyzerConfiguration": {
                "privilege": "CreateNetworkAnalyzerConfiguration",
                "description": "Grants permission to create a NetworkAnalyzerConfiguration resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_CreateNetworkAnalyzerConfiguration.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteWirelessDevice": {
                "privilege": "DeleteWirelessDevice",
                "description": "Grants permission to delete a WirelessDevice",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteWirelessDevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessDeviceFromFuotaTask": {
                "privilege": "DisassociateWirelessDeviceFromFuotaTask",
                "description": "Grants permission to disassociate the wireless device from FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessDeviceFromFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessDeviceFromMulticastGroup": {
                "privilege": "DisassociateWirelessDeviceFromMulticastGroup",
                "description": "Grants permission to disassociate the wireless device from MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessDeviceFromMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessDeviceFromThing": {
                "privilege": "DisassociateWirelessDeviceFromThing",
                "description": "Grants permission to disassociate a wireless device from a AWS IoT thing",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessDeviceFromThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutPositionConfiguration": {
                "privilege": "PutPositionConfiguration",
                "description": "Grants permission to put position configuration for a given resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_PutPositionConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "PutResourceLogLevel": {
                "privilege": "PutResourceLogLevel",
                "description": "Grants permission to put resource log level",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_PutResourceLogLevel.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ResetResourceLogLevel": {
                "privilege": "ResetResourceLogLevel",
                "description": "Grants permission to reset resource log level",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ResetResourceLogLevel.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "SendDataToWirelessDevice": {
                "privilege": "SendDataToWirelessDevice",
                "description": "Grants permission to send the decrypted application data frame to the target device",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_SendDataToWirelessDevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "TestWirelessDevice": {
                "privilege": "TestWirelessDevice",
                "description": "Grants permission to simulate a provisioned device to send an uplink data with payload of 'Hello'",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TestWirelessDevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateNetworkAnalyzerConfiguration": {
                "privilege": "UpdateNetworkAnalyzerConfiguration",
                "description": "Grants permission to update the NetworkAnalyzerConfiguration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateNetworkAnalyzerConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdatePosition": {
                "privilege": "UpdatePosition",
                "description": "Grants permission to update position for a given resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdatePosition.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateResourceEventConfiguration": {
                "privilege": "UpdateResourceEventConfiguration",
                "description": "Grants permission to update an event configuration for an identifier",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourceEventConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateWirelessDevice": {
                "privilege": "UpdateWirelessDevice",
                "description": "Grants permission to update a WirelessDevice resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateWirelessDevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "wirelessGateway": {
        "resourceName": "WirelessGateway",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessGateway/${WirelessGatewayId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetPosition": {
                "privilege": "GetPosition",
                "description": "Grants permission to get position for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetPosition.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetPositionConfiguration": {
                "privilege": "GetPositionConfiguration",
                "description": "Grants permission to get position configuration for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetPositionConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetResourceEventConfiguration": {
                "privilege": "GetResourceEventConfiguration",
                "description": "Grants permission to get an event configuration for an identifier",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourceEventConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetResourceLogLevel": {
                "privilege": "GetResourceLogLevel",
                "description": "Grants permission to get resource log level",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourceLogLevel.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetWirelessGateway": {
                "privilege": "GetWirelessGateway",
                "description": "Grants permission to get the WirelessGateway",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessGateway.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetWirelessGatewayCertificate": {
                "privilege": "GetWirelessGatewayCertificate",
                "description": "Grants permission to get the IoT Core Identity certificate id associated with the WirelessGateway",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessGatewayCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetWirelessGatewayFirmwareInformation": {
                "privilege": "GetWirelessGatewayFirmwareInformation",
                "description": "Grants permission to get Current firmware version and other information for the WirelessGateway",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessGatewayFirmwareInformation.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetWirelessGatewayStatistics": {
                "privilege": "GetWirelessGatewayStatistics",
                "description": "Grants permission to get statistics info for a given WirelessGateway",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessGatewayStatistics.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetWirelessGatewayTask": {
                "privilege": "GetWirelessGatewayTask",
                "description": "Grants permission to get the task for a given WirelessGateway",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessGatewayTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateWirelessGatewayWithCertificate": {
                "privilege": "AssociateWirelessGatewayWithCertificate",
                "description": "Grants permission to associate a WirelessGateway with the IoT Core Identity certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessGatewayWithCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateWirelessGatewayWithThing": {
                "privilege": "AssociateWirelessGatewayWithThing",
                "description": "Grants permission to associate the wireless gateway with AWS IoT thing for a given wirelessGatewayId",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessGatewayWithThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateNetworkAnalyzerConfiguration": {
                "privilege": "CreateNetworkAnalyzerConfiguration",
                "description": "Grants permission to create a NetworkAnalyzerConfiguration resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_CreateNetworkAnalyzerConfiguration.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateWirelessGatewayTask": {
                "privilege": "CreateWirelessGatewayTask",
                "description": "Grants permission to create a task for a given WirelessGateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_CreateWirelessGatewayTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteWirelessGateway": {
                "privilege": "DeleteWirelessGateway",
                "description": "Grants permission to delete a WirelessGateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteWirelessGateway.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteWirelessGatewayTask": {
                "privilege": "DeleteWirelessGatewayTask",
                "description": "Grants permission to delete task for a given WirelessGateway",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteWirelessGatewayTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessGatewayFromCertificate": {
                "privilege": "DisassociateWirelessGatewayFromCertificate",
                "description": "Grants permission to disassociate a WirelessGateway from a IoT Core Identity certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessGatewayFromCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessGatewayFromThing": {
                "privilege": "DisassociateWirelessGatewayFromThing",
                "description": "Grants permission to disassociate a WirelessGateway from a IoT Core thing",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessGatewayFromThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutPositionConfiguration": {
                "privilege": "PutPositionConfiguration",
                "description": "Grants permission to put position configuration for a given resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_PutPositionConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "PutResourceLogLevel": {
                "privilege": "PutResourceLogLevel",
                "description": "Grants permission to put resource log level",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_PutResourceLogLevel.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ResetResourceLogLevel": {
                "privilege": "ResetResourceLogLevel",
                "description": "Grants permission to reset resource log level",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ResetResourceLogLevel.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateNetworkAnalyzerConfiguration": {
                "privilege": "UpdateNetworkAnalyzerConfiguration",
                "description": "Grants permission to update the NetworkAnalyzerConfiguration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateNetworkAnalyzerConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdatePosition": {
                "privilege": "UpdatePosition",
                "description": "Grants permission to update position for a given resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdatePosition.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateResourceEventConfiguration": {
                "privilege": "UpdateResourceEventConfiguration",
                "description": "Grants permission to update an event configuration for an identifier",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourceEventConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateWirelessGateway": {
                "privilege": "UpdateWirelessGateway",
                "description": "Grants permission to update a WirelessGateway resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateWirelessGateway.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "deviceProfile": {
        "resourceName": "DeviceProfile",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:DeviceProfile/${DeviceProfileId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetDeviceProfile": {
                "privilege": "GetDeviceProfile",
                "description": "Grants permission to get the DeviceProfile",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetDeviceProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteDeviceProfile": {
                "privilege": "DeleteDeviceProfile",
                "description": "Grants permission to delete a DeviceProfile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteDeviceProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "serviceProfile": {
        "resourceName": "ServiceProfile",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:ServiceProfile/${ServiceProfileId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetServiceProfile": {
                "privilege": "GetServiceProfile",
                "description": "Grants permission to get the ServiceProfile",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetServiceProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteServiceProfile": {
                "privilege": "DeleteServiceProfile",
                "description": "Grants permission to delete a ServiceProfile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteServiceProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "destination": {
        "resourceName": "Destination",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:Destination/${DestinationName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetDestination": {
                "privilege": "GetDestination",
                "description": "Grants permission to get the Destination",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteDestination": {
                "privilege": "DeleteDestination",
                "description": "Grants permission to delete a Destination",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateDestination": {
                "privilege": "UpdateDestination",
                "description": "Grants permission to update a Destination resource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "sidewalkAccount": {
        "resourceName": "SidewalkAccount",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:SidewalkAccount/${SidewalkAccountId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetPartnerAccount": {
                "privilege": "GetPartnerAccount",
                "description": "Grants permission to get the associated PartnerAccount",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetPartnerAccount.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetResourceEventConfiguration": {
                "privilege": "GetResourceEventConfiguration",
                "description": "Grants permission to get an event configuration for an identifier",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourceEventConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DisassociateAwsAccountFromPartnerAccount": {
                "privilege": "DisassociateAwsAccountFromPartnerAccount",
                "description": "Grants permission to disassociate an AWS account from a partner account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateAwsAccountFromPartnerAccount.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdatePartnerAccount": {
                "privilege": "UpdatePartnerAccount",
                "description": "Grants permission to update a partner account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdatePartnerAccount.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateResourceEventConfiguration": {
                "privilege": "UpdateResourceEventConfiguration",
                "description": "Grants permission to update an event configuration for an identifier",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourceEventConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "wirelessGatewayTaskDefinition": {
        "resourceName": "WirelessGatewayTaskDefinition",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessGatewayTaskDefinition/${WirelessGatewayTaskDefinitionId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetWirelessGatewayTaskDefinition": {
                "privilege": "GetWirelessGatewayTaskDefinition",
                "description": "Grants permission to get the given WirelessGateway task definition",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetWirelessGatewayTaskDefinition.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteWirelessGatewayTaskDefinition": {
                "privilege": "DeleteWirelessGatewayTaskDefinition",
                "description": "Grants permission to delete a WirelessGateway task definition",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteWirelessGatewayTaskDefinition.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "fuotaTask": {
        "resourceName": "FuotaTask",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:FuotaTask/${FuotaTaskId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetFuotaTask": {
                "privilege": "GetFuotaTask",
                "description": "Grants permission to get the FuotaTask",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListMulticastGroupsByFuotaTask": {
                "privilege": "ListMulticastGroupsByFuotaTask",
                "description": "Grants permission to list information of available MulticastGroups by FuotaTask based on the AWS account",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListMulticastGroupsByFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateMulticastGroupWithFuotaTask": {
                "privilege": "AssociateMulticastGroupWithFuotaTask",
                "description": "Grants permission to associate the MulticastGroup with FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateMulticastGroupWithFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateWirelessDeviceWithFuotaTask": {
                "privilege": "AssociateWirelessDeviceWithFuotaTask",
                "description": "Grants permission to associate the wireless device with FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessDeviceWithFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteFuotaTask": {
                "privilege": "DeleteFuotaTask",
                "description": "Grants permission to delete the FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateMulticastGroupFromFuotaTask": {
                "privilege": "DisassociateMulticastGroupFromFuotaTask",
                "description": "Grants permission to disassociate the MulticastGroup from FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateMulticastGroupFromFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessDeviceFromFuotaTask": {
                "privilege": "DisassociateWirelessDeviceFromFuotaTask",
                "description": "Grants permission to disassociate the wireless device from FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessDeviceFromFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartFuotaTask": {
                "privilege": "StartFuotaTask",
                "description": "Grants permission to start the FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_StartFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateFuotaTask": {
                "privilege": "UpdateFuotaTask",
                "description": "Grants permission to update the FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "multicastGroup": {
        "resourceName": "MulticastGroup",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:MulticastGroup/${MulticastGroupId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetMulticastGroup": {
                "privilege": "GetMulticastGroup",
                "description": "Grants permission to get the MulticastGroup",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetMulticastGroupSession": {
                "privilege": "GetMulticastGroupSession",
                "description": "Grants permission to get the MulticastGroup session",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetMulticastGroupSession.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateMulticastGroupWithFuotaTask": {
                "privilege": "AssociateMulticastGroupWithFuotaTask",
                "description": "Grants permission to associate the MulticastGroup with FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateMulticastGroupWithFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateWirelessDeviceWithMulticastGroup": {
                "privilege": "AssociateWirelessDeviceWithMulticastGroup",
                "description": "Grants permission to associate the WirelessDevice with MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessDeviceWithMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CancelMulticastGroupSession": {
                "privilege": "CancelMulticastGroupSession",
                "description": "Grants permission to cancel the MulticastGroup session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_CancelMulticastGroupSession.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteMulticastGroup": {
                "privilege": "DeleteMulticastGroup",
                "description": "Grants permission to delete the MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateMulticastGroupFromFuotaTask": {
                "privilege": "DisassociateMulticastGroupFromFuotaTask",
                "description": "Grants permission to disassociate the MulticastGroup from FuotaTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateMulticastGroupFromFuotaTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessDeviceFromMulticastGroup": {
                "privilege": "DisassociateWirelessDeviceFromMulticastGroup",
                "description": "Grants permission to disassociate the wireless device from MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessDeviceFromMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "SendDataToMulticastGroup": {
                "privilege": "SendDataToMulticastGroup",
                "description": "Grants permission to send data to the MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_SendDataToMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartBulkAssociateWirelessDeviceWithMulticastGroup": {
                "privilege": "StartBulkAssociateWirelessDeviceWithMulticastGroup",
                "description": "Grants permission to associate the WirelessDevices with MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_StartBulkAssociateWirelessDeviceWithMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartBulkDisassociateWirelessDeviceFromMulticastGroup": {
                "privilege": "StartBulkDisassociateWirelessDeviceFromMulticastGroup",
                "description": "Grants permission to bulk disassociate the WirelessDevices from MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_StartBulkDisassociateWirelessDeviceFromMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartMulticastGroupSession": {
                "privilege": "StartMulticastGroupSession",
                "description": "Grants permission to start the MulticastGroup session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_StartMulticastGroupSession.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateMulticastGroup": {
                "privilege": "UpdateMulticastGroup",
                "description": "Grants permission to update the MulticastGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateMulticastGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "networkAnalyzerConfiguration": {
        "resourceName": "NetworkAnalyzerConfiguration",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iotwireless:${Region}:${Account}:NetworkAnalyzerConfiguration/${NetworkAnalyzerConfigurationName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by tag key component of a tag attached to an IoT Wireless resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetNetworkAnalyzerConfiguration": {
                "privilege": "GetNetworkAnalyzerConfiguration",
                "description": "Grants permission to get the NetworkAnalyzerConfiguration",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetNetworkAnalyzerConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteNetworkAnalyzerConfiguration": {
                "privilege": "DeleteNetworkAnalyzerConfiguration",
                "description": "Grants permission to delete the NetworkAnalyzerConfiguration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DeleteNetworkAnalyzerConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartNetworkAnalyzerStream": {
                "privilege": "StartNetworkAnalyzerStream",
                "description": "Grants permission to start NetworkAnalyzer stream",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/connect-iot-lorawan-network-analyzer-api.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateNetworkAnalyzerConfiguration": {
                "privilege": "UpdateNetworkAnalyzerConfiguration",
                "description": "Grants permission to update the NetworkAnalyzerConfiguration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateNetworkAnalyzerConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a given resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request that the user makes to IoT Wireless",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove the given tags from the resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names associated with the resource in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "thing": {
        "resourceName": "thing",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:thing/${ThingName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateWirelessDeviceWithThing": {
                "privilege": "AssociateWirelessDeviceWithThing",
                "description": "Grants permission to associate the wireless device with AWS IoT thing for a given wirelessDeviceId",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessDeviceWithThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateWirelessGatewayWithThing": {
                "privilege": "AssociateWirelessGatewayWithThing",
                "description": "Grants permission to associate the wireless gateway with AWS IoT thing for a given wirelessGatewayId",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessGatewayWithThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessDeviceFromThing": {
                "privilege": "DisassociateWirelessDeviceFromThing",
                "description": "Grants permission to disassociate a wireless device from a AWS IoT thing",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessDeviceFromThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessGatewayFromThing": {
                "privilege": "DisassociateWirelessGatewayFromThing",
                "description": "Grants permission to disassociate a WirelessGateway from a IoT Core thing",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessGatewayFromThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "cert": {
        "resourceName": "cert",
        "service": "iotwireless",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:cert/${Certificate}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssociateWirelessGatewayWithCertificate": {
                "privilege": "AssociateWirelessGatewayWithCertificate",
                "description": "Grants permission to associate a WirelessGateway with the IoT Core Identity certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_AssociateWirelessGatewayWithCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisassociateWirelessGatewayFromCertificate": {
                "privilege": "DisassociateWirelessGatewayFromCertificate",
                "description": "Grants permission to disassociate a WirelessGateway from a IoT Core Identity certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_DisassociateWirelessGatewayFromCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    }
}
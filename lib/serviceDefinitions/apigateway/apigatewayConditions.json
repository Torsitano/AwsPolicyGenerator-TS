{
    "apigateway:Request/AccessLoggingDestination": {
        "condition": "apigateway:Request/AccessLoggingDestination",
        "description": "Filters access by access log destination. Available during the CreateStage and UpdateStage operations",
        "type": "String"
    },
    "apigateway:Request/AccessLoggingFormat": {
        "condition": "apigateway:Request/AccessLoggingFormat",
        "description": "Filters access by access log format. Available during the CreateStage and UpdateStage operations",
        "type": "String"
    },
    "apigateway:Request/ApiKeyRequired": {
        "condition": "apigateway:Request/ApiKeyRequired",
        "description": "Filters access by the requirement of API. Available during the CreateRoute and UpdateRoute operations. Also available as a collection during import and reimport",
        "type": "ArrayOfBool"
    },
    "apigateway:Request/ApiName": {
        "condition": "apigateway:Request/ApiName",
        "description": "Filters access by API name. Available during the CreateApi and UpdateApi operations",
        "type": "String"
    },
    "apigateway:Request/AuthorizerType": {
        "condition": "apigateway:Request/AuthorizerType",
        "description": "Filters access by type of authorizer in the request, for example REQUEST or JWT. Available during CreateAuthorizer and UpdateAuthorizer. Also available during import and reimport as an ArrayOfString",
        "type": "ArrayOfString"
    },
    "apigateway:Request/AuthorizerUri": {
        "condition": "apigateway:Request/AuthorizerUri",
        "description": "Filters access by URI of a Lambda authorizer function. Available during CreateAuthorizer and UpdateAuthorizer. Also available during import and reimport as an ArrayOfString",
        "type": "ArrayOfString"
    },
    "apigateway:Request/DisableExecuteApiEndpoint": {
        "condition": "apigateway:Request/DisableExecuteApiEndpoint",
        "description": "Filters access by status of the default execute-api endpoint. Available during the CreateApi and UpdateApi operations",
        "type": "Bool"
    },
    "apigateway:Request/EndpointType": {
        "condition": "apigateway:Request/EndpointType",
        "description": "Filters access by endpoint type. Available during the CreateDomainName, UpdateDomainName, CreateApi, and UpdateApi operations",
        "type": "ArrayOfString"
    },
    "apigateway:Request/MtlsTrustStoreUri": {
        "condition": "apigateway:Request/MtlsTrustStoreUri",
        "description": "Filters access by URI of the truststore used for mutual TLS authentication. Available during the CreateDomainName and UpdateDomainName operations",
        "type": "String"
    },
    "apigateway:Request/MtlsTrustStoreVersion": {
        "condition": "apigateway:Request/MtlsTrustStoreVersion",
        "description": "Filters access by version of the truststore used for mutual TLS authentication. Available during the CreateDomainName and UpdateDomainName operations",
        "type": "String"
    },
    "apigateway:Request/RouteAuthorizationType": {
        "condition": "apigateway:Request/RouteAuthorizationType",
        "description": "Filters access by authorization type, for example NONE, AWS_IAM, CUSTOM, JWT. Available during the CreateRoute and UpdateRoute operations. Also available as a collection during import",
        "type": "ArrayOfString"
    },
    "apigateway:Request/SecurityPolicy": {
        "condition": "apigateway:Request/SecurityPolicy",
        "description": "Filters access by TLS version. Available during the CreateDomain and UpdateDomain operations",
        "type": "ArrayOfString"
    },
    "apigateway:Request/StageName": {
        "condition": "apigateway:Request/StageName",
        "description": "Filters access by stage name of the deployment that you attempt to create. Available during the CreateDeployment operation",
        "type": "String"
    },
    "apigateway:Resource/AccessLoggingDestination": {
        "condition": "apigateway:Resource/AccessLoggingDestination",
        "description": "Filters access by access log destination of the current Stage resource. Available during the UpdateStage and DeleteStage operations",
        "type": "String"
    },
    "apigateway:Resource/AccessLoggingFormat": {
        "condition": "apigateway:Resource/AccessLoggingFormat",
        "description": "Filters access by access log format of the current Stage resource. Available during the UpdateStage and DeleteStage operations",
        "type": "String"
    },
    "apigateway:Resource/ApiKeyRequired": {
        "condition": "apigateway:Resource/ApiKeyRequired",
        "description": "Filters access by the requirement of API key for the existing Route resource. Available during the UpdateRoute and DeleteRoute operations. Also available as a collection during reimport",
        "type": "ArrayOfBool"
    },
    "apigateway:Resource/ApiName": {
        "condition": "apigateway:Resource/ApiName",
        "description": "Filters access by API name. Available during the UpdateApi and DeleteApi operations",
        "type": "String"
    },
    "apigateway:Resource/AuthorizerType": {
        "condition": "apigateway:Resource/AuthorizerType",
        "description": "Filters access by the current type of authorizer, for example REQUEST or JWT. Available during UpdateAuthorizer and DeleteAuthorizer operations. Also available during import and reimport as an ArrayOfString",
        "type": "ArrayOfString"
    },
    "apigateway:Resource/AuthorizerUri": {
        "condition": "apigateway:Resource/AuthorizerUri",
        "description": "Filters access by the URI of the current Lambda authorizer associated with the current API. Available during UpdateAuthorizer and DeleteAuthorizer. Also available as a collection during reimport",
        "type": "ArrayOfString"
    },
    "apigateway:Resource/DisableExecuteApiEndpoint": {
        "condition": "apigateway:Resource/DisableExecuteApiEndpoint",
        "description": "Filters access by status of the default execute-api endpoint. Available during the UpdateApi and DeleteApi operations",
        "type": "Bool"
    },
    "apigateway:Resource/EndpointType": {
        "condition": "apigateway:Resource/EndpointType",
        "description": "Filters access by endpoint type. Available during the UpdateDomainName, DeleteDomainName, UpdateApi, and DeleteApi operations",
        "type": "ArrayOfString"
    },
    "apigateway:Resource/MtlsTrustStoreUri": {
        "condition": "apigateway:Resource/MtlsTrustStoreUri",
        "description": "Filters access by URI of the truststore used for mutual TLS authentication. Available during the UpdateDomainName and DeleteDomainName operations",
        "type": "String"
    },
    "apigateway:Resource/MtlsTrustStoreVersion": {
        "condition": "apigateway:Resource/MtlsTrustStoreVersion",
        "description": "Filters access by version of the truststore used for mutual TLS authentication. Available during the UpdateDomainName and DeleteDomainName operations",
        "type": "String"
    },
    "apigateway:Resource/RouteAuthorizationType": {
        "condition": "apigateway:Resource/RouteAuthorizationType",
        "description": "Filters access by authorization type of the existing Route resource, for example NONE, AWS_IAM, CUSTOM. Available during the UpdateRoute and DeleteRoute operations. Also available as a collection during reimport",
        "type": "ArrayOfString"
    },
    "apigateway:Resource/SecurityPolicy": {
        "condition": "apigateway:Resource/SecurityPolicy",
        "description": "Filters access by TLS version. Available during the UpdateDomainName and DeleteDomainName operations",
        "type": "ArrayOfString"
    },
    "aws:RequestTag/${TagKey}": {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by the presence of tag key-value pairs in the request",
        "type": "String"
    },
    "aws:ResourceTag/${TagKey}": {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by tag key-value pairs attached to the resource",
        "type": "String"
    },
    "aws:TagKeys": {
        "condition": "aws:TagKeys",
        "description": "Filters access by the presence of tag keys in the request",
        "type": "ArrayOfString"
    }
}
{
    "activateEventSource": {
        "privilege": "ActivateEventSource",
        "description": "Grants permission to activate partner event sources",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventSource": {
                "resourceName": "event-source",
                "resourceArn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "cancelReplay": {
        "privilege": "CancelReplay",
        "description": "Grants permission to cancel a replay",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CancelReplay.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "replay": {
                "resourceName": "replay",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:replay/${ReplayName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createApiDestination": {
        "privilege": "CreateApiDestination",
        "description": "Grants permission to create a new api destination",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateApiDestination.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "apiDestination": {
                "resourceName": "api-destination",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:api-destination/${ApiDestinationName}",
                "required": true,
                "resourceConditions": {}
            },
            "connection": {
                "resourceName": "connection",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createArchive": {
        "privilege": "CreateArchive",
        "description": "Grants permission to create a new archive",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateArchive.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "archive": {
                "resourceName": "archive",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:archive/${ArchiveName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createConnection": {
        "privilege": "CreateConnection",
        "description": "Grants permission to create a new connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateConnection.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "connection": {
                "resourceName": "connection",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createEventBus": {
        "privilege": "CreateEventBus",
        "description": "Grants permission to create event buses",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the allowed set of values for each of the tags to event bus and rule actions",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tags in the request to event bus and rule actions",
                "type": "String"
            }
        },
        "resources": {
            "eventBus": {
                "resourceName": "event-bus",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createPartnerEventSource": {
        "privilege": "CreatePartnerEventSource",
        "description": "Grants permission to create partner event sources",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreatePartnerEventSource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventSource": {
                "resourceName": "event-source",
                "resourceArn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deactivateEventSource": {
        "privilege": "DeactivateEventSource",
        "description": "Grants permission to deactivate event sources",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeactivateEventSource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventSource": {
                "resourceName": "event-source",
                "resourceArn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deauthorizeConnection": {
        "privilege": "DeauthorizeConnection",
        "description": "Grants permission to deauthorize a connection, deleting its stored authorization secrets",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeauthorizeConnection.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "connection": {
                "resourceName": "connection",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteApiDestination": {
        "privilege": "DeleteApiDestination",
        "description": "Grants permission to delete an api destination",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteApiDestination.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "apiDestination": {
                "resourceName": "api-destination",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:api-destination/${ApiDestinationName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteArchive": {
        "privilege": "DeleteArchive",
        "description": "Grants permission to delete an archive",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteArchive.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "archive": {
                "resourceName": "archive",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:archive/${ArchiveName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteConnection": {
        "privilege": "DeleteConnection",
        "description": "Grants permission to delete a connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteConnection.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "connection": {
                "resourceName": "connection",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteEventBus": {
        "privilege": "DeleteEventBus",
        "description": "Grants permission to delete event buses",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeletePartnerEventSource",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventBus": {
                "resourceName": "event-bus",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deletePartnerEventSource": {
        "privilege": "DeletePartnerEventSource",
        "description": "Grants permission to delete partner event sources",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeletePartnerEventSource",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventSource": {
                "resourceName": "event-source",
                "resourceArn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteRule": {
        "privilege": "DeleteRule",
        "description": "Grants permission to delete rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            },
            "events:ManagedBy": {
                "condition": "events:ManagedBy",
                "description": "Filters access by AWS services. If a rule is created by an AWS service on your behalf, the value is the principal name of the service that created the rule",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeApiDestination": {
        "privilege": "DescribeApiDestination",
        "description": "Grants permission to retrieve details about an api destination",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeApiDestination.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "apiDestination": {
                "resourceName": "api-destination",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:api-destination/${ApiDestinationName}",
                "required": true,
                "resourceConditions": {}
            },
            "connection": {
                "resourceName": "connection",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeArchive": {
        "privilege": "DescribeArchive",
        "description": "Grants permission to retrieve details about an archive",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeArchive.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "archive": {
                "resourceName": "archive",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:archive/${ArchiveName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeConnection": {
        "privilege": "DescribeConnection",
        "description": "Grants permission to retrieve details about a conection",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeConnection.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "connection": {
                "resourceName": "connection",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeEventBus": {
        "privilege": "DescribeEventBus",
        "description": "Grants permission to retrieve details about event buses",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventBus": {
                "resourceName": "event-bus",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeEventSource": {
        "privilege": "DescribeEventSource",
        "description": "Grants permission to retrieve details about event sources",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventSource": {
                "resourceName": "event-source",
                "resourceArn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describePartnerEventSource": {
        "privilege": "DescribePartnerEventSource",
        "description": "Grants permission to retrieve details about partner event sources",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribePartnerEventSource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventSource": {
                "resourceName": "event-source",
                "resourceArn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeReplay": {
        "privilege": "DescribeReplay",
        "description": "Grants permission to retrieve the details of a replay",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeReplay.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "replay": {
                "resourceName": "replay",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:replay/${ReplayName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeRule": {
        "privilege": "DescribeRule",
        "description": "Grants permission to retrieve details about rules",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeRule.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableRule": {
        "privilege": "DisableRule",
        "description": "Grants permission to disable rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            },
            "events:ManagedBy": {
                "condition": "events:ManagedBy",
                "description": "Filters access by AWS services. If a rule is created by an AWS service on your behalf, the value is the principal name of the service that created the rule",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableRule": {
        "privilege": "EnableRule",
        "description": "Grants permission to enable rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_EnableRule.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            },
            "events:ManagedBy": {
                "condition": "events:ManagedBy",
                "description": "Filters access by AWS services. If a rule is created by an AWS service on your behalf, the value is the principal name of the service that created the rule",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "invokeApiDestination": {
        "privilege": "InvokeApiDestination",
        "description": "Grants permission to invoke an api destination",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/userguide/iam-identity-based-access-control-eventbridge.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "apiDestination": {
                "resourceName": "api-destination",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:api-destination/${ApiDestinationName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listApiDestinations": {
        "privilege": "ListApiDestinations",
        "description": "Grants permission to retrieve a list of api destinations",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListApiDestinations.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listArchives": {
        "privilege": "ListArchives",
        "description": "Grants permission to retrieve a list of archives",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListArchives.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listConnections": {
        "privilege": "ListConnections",
        "description": "Grants permission to retrieve a list of connections",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListConnections.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listEventBuses": {
        "privilege": "ListEventBuses",
        "description": "Grants permission to to retrieve a list of the event buses in your account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListEventBuses.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listEventSources": {
        "privilege": "ListEventSources",
        "description": "Grants permission to to retrieve a list of event sources shared with this account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListEventSources.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listPartnerEventSourceAccounts": {
        "privilege": "ListPartnerEventSourceAccounts",
        "description": "Grants permission to retrieve a list of AWS account IDs associated with an event source",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListPartnerEventSourceAccounts.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "eventSource": {
                "resourceName": "event-source",
                "resourceArn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listPartnerEventSources": {
        "privilege": "ListPartnerEventSources",
        "description": "Grants permission to retrieve a list partner event sources",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListPartnerEventSources.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listReplays": {
        "privilege": "ListReplays",
        "description": "Grants permission to retrieve a list of replays",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListReplays.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listRuleNamesByTarget": {
        "privilege": "ListRuleNamesByTarget",
        "description": "Grants permission to retrieve a list of the names of the rules associated with a target",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListRuleNamesByTarget.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listRules": {
        "privilege": "ListRules",
        "description": "Grants permission to retrieve a list of the Amazon EventBridge rules in the account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListRules.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listTagsForResource": {
        "privilege": "ListTagsForResource",
        "description": "Grants permission to retrieve a list of tags associated with an Amazon EventBridge resource",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTagsForResource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            }
        },
        "resources": {
            "eventBus": {
                "resourceName": "event-bus",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            },
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listTargetsByRule": {
        "privilege": "ListTargetsByRule",
        "description": "Grants permission to retrieve a list of targets defined for a rule",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putEvents": {
        "privilege": "PutEvents",
        "description": "Grants permission to send custom events to Amazon EventBridge",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:source": {
                "condition": "events:source",
                "description": "Filters access by the AWS service or AWS partner event source that generated the event to PutEvents and PutRule actions. Matches the literal string of the source field of the event",
                "type": "ArrayOfString"
            },
            "events:eventBusInvocation": {
                "condition": "events:eventBusInvocation",
                "description": "Filters access by whether the event was generated via API or cross-account bus invocation to PutEvents actions",
                "type": "String"
            },
            "aws:SourceArn": {
                "condition": "aws:SourceArn",
                "description": "Filters access by the Amazon Resource Name (ARN) of the source making the request to PutEvents actions",
                "type": "String"
            },
            "aws:SourceAccount": {
                "condition": "aws:SourceAccount",
                "description": "Filters access by the source account of the request to PutEvents actions",
                "type": "String"
            }
        },
        "resources": {
            "eventBus": {
                "resourceName": "event-bus",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putPartnerEvents": {
        "privilege": "PutPartnerEvents",
        "description": "Grants permission to sends custom events to Amazon EventBridge",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPartnerEvents.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "putPermission": {
        "privilege": "PutPermission",
        "description": "Grants permission to use the PutPermission action to grants permission to another AWS account to put events to your default event bus",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "putRule": {
        "privilege": "PutRule",
        "description": "Grants permission to create or updates rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutRule.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:detail.userIdentity.principalId": {
                "condition": "events:detail.userIdentity.principalId",
                "description": "Filters access by the literal string for the detail.useridentity.principalid field of the event to PutRule actions",
                "type": "String"
            },
            "events:source": {
                "condition": "events:source",
                "description": "Filters access by the AWS service or AWS partner event source that generated the event to PutEvents and PutRule actions. Matches the literal string of the source field of the event",
                "type": "ArrayOfString"
            },
            "events:detail.service": {
                "condition": "events:detail.service",
                "description": "Filters access by the literal string for the detail.service field of the event to PutRule actions",
                "type": "String"
            },
            "events:detail.eventTypeCode": {
                "condition": "events:detail.eventTypeCode",
                "description": "Filters access by the literal string for the detail.eventTypeCode field of the event to PutRule actions",
                "type": "String"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the allowed set of values for each of the tags to event bus and rule actions",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tags in the request to event bus and rule actions",
                "type": "String"
            },
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            },
            "events:ManagedBy": {
                "condition": "events:ManagedBy",
                "description": "Filters access by AWS services. If a rule is created by an AWS service on your behalf, the value is the principal name of the service that created the rule",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putTargets": {
        "privilege": "PutTargets",
        "description": "Grants permission to add targets to a rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutTargets.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:TargetArn": {
                "condition": "events:TargetArn",
                "description": "Filters access by the ARN of a target that can be put to a rule to PutTargets actions",
                "type": "ArrayOfARN"
            },
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            },
            "events:ManagedBy": {
                "condition": "events:ManagedBy",
                "description": "Filters access by AWS services. If a rule is created by an AWS service on your behalf, the value is the principal name of the service that created the rule",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "removePermission": {
        "privilege": "RemovePermission",
        "description": "Grants permission to revoke the permission of another AWS account to put events to your default event bus",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemovePermission.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "removeTargets": {
        "privilege": "RemoveTargets",
        "description": "Grants permission to removes targets from a rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            },
            "events:ManagedBy": {
                "condition": "events:ManagedBy",
                "description": "Filters access by AWS services. If a rule is created by an AWS service on your behalf, the value is the principal name of the service that created the rule",
                "type": "String"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "startReplay": {
        "privilege": "StartReplay",
        "description": "Grants permission to start a replay of an archive",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_StartReplay.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "archive": {
                "resourceName": "archive",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:archive/${ArchiveName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "tagResource": {
        "privilege": "TagResource",
        "description": "Grants permission to add a tag to an Amazon EventBridge resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tags in the request to event bus and rule actions",
                "type": "String"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the allowed set of values for each of the tags to event bus and rule actions",
                "type": "String"
            },
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            }
        },
        "resources": {
            "eventBus": {
                "resourceName": "event-bus",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            },
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "testEventPattern": {
        "privilege": "TestEventPattern",
        "description": "Grants permission to test whether an event pattern matches the provided event",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TestEventPattern.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "untagResource": {
        "privilege": "UntagResource",
        "description": "Grants permission to remove a tag from an Amazon EventBridge resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tags in the request to event bus and rule actions",
                "type": "String"
            },
            "events:creatorAccount": {
                "condition": "events:creatorAccount",
                "description": "Filters access by the account the rule was created in to rule actions",
                "type": "String"
            }
        },
        "resources": {
            "eventBus": {
                "resourceName": "event-bus",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            },
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by tag-value associated with the resource to event bus and rule actions",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateApiDestination": {
        "privilege": "UpdateApiDestination",
        "description": "Grants permission to update an api destination",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UpdateApiDestination.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "apiDestination": {
                "resourceName": "api-destination",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:api-destination/${ApiDestinationName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateArchive": {
        "privilege": "UpdateArchive",
        "description": "Grants permission to update an archive",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UpdateArchive.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "archive": {
                "resourceName": "archive",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:archive/${ArchiveName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateConnection": {
        "privilege": "UpdateConnection",
        "description": "Grants permission to update a connection",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UpdateConnection.html",
        "service": "events",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "connection": {
                "resourceName": "connection",
                "resourceArn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    }
}
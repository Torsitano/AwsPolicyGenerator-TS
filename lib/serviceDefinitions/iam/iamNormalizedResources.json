{
    "accessReport": {
        "resourceName": "access-report",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:access-report/${EntityPath}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GenerateOrganizationsAccessReport": {
                "privilege": "GenerateOrganizationsAccessReport",
                "description": "Grants permission to generate an access report for an AWS Organizations entity",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateOrganizationsAccessReport.html",
                "privConditions": {
                    "iam:OrganizationsPolicyId": {
                        "condition": "iam:OrganizationsPolicyId",
                        "description": "Filters access by the ID of an AWS Organizations policy",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "organizations:DescribePolicy",
                    "organizations:ListChildren",
                    "organizations:ListParents",
                    "organizations:ListPoliciesForTarget",
                    "organizations:ListRoots",
                    "organizations:ListTargetsForPolicy"
                ],
                "required": true
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "assumedRole": {
        "resourceName": "assumed-role",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:assumed-role/${RoleName}/${RoleSessionName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "federatedUser": {
        "resourceName": "federated-user",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:federated-user/${UserName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "group": {
        "resourceName": "group",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:group/${GroupNameWithPath}",
        "resourceConditions": {},
        "listPrivileges": {
            "ListAttachedGroupPolicies": {
                "privilege": "ListAttachedGroupPolicies",
                "description": "Grants permission to list all managed policies that are attached to the specified IAM group",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedGroupPolicies.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListGroupPolicies": {
                "privilege": "ListGroupPolicies",
                "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM group",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupPolicies.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListPoliciesGrantingServiceAccess": {
                "privilege": "ListPoliciesGrantingServiceAccess",
                "description": "Grants permission to list information about the policies that grant an entity access to a specific service",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPoliciesGrantingServiceAccess.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GenerateServiceLastAccessedDetails": {
                "privilege": "GenerateServiceLastAccessedDetails",
                "description": "Grants permission to generate a service last accessed data report for an IAM resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateServiceLastAccessedDetails.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetContextKeysForPrincipalPolicy": {
                "privilege": "GetContextKeysForPrincipalPolicy",
                "description": "Grants permission to retrieve a list of all context keys that are referenced in all IAM policies that are attached to the specified IAM identity (user, group, or role)",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetContextKeysForPrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetGroup": {
                "privilege": "GetGroup",
                "description": "Grants permission to retrieve a list of IAM users in the specified IAM group",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetGroupPolicy": {
                "privilege": "GetGroupPolicy",
                "description": "Grants permission to retrieve an inline policy document that is embedded in the specified IAM group",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroupPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "SimulatePrincipalPolicy": {
                "privilege": "SimulatePrincipalPolicy",
                "description": "Grants permission to simulate whether an identity-based policy that is attached to a specified IAM entity (user or role) provides permissions for specific API operations and resources",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SimulatePrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "AddUserToGroup": {
                "privilege": "AddUserToGroup",
                "description": "Grants permission to add an IAM user to the specified IAM group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AddUserToGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AttachGroupPolicy": {
                "privilege": "AttachGroupPolicy",
                "description": "Grants permission to attach a managed policy to the specified IAM group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html",
                "privConditions": {
                    "iam:PolicyARN": {
                        "condition": "iam:PolicyARN",
                        "description": "Filters access by the ARN of an IAM policy",
                        "type": "ARN"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateGroup": {
                "privilege": "CreateGroup",
                "description": "Grants permission to create a new group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteGroup": {
                "privilege": "DeleteGroup",
                "description": "Grants permission to delete the specified IAM group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteGroupPolicy": {
                "privilege": "DeleteGroupPolicy",
                "description": "Grants permission to delete the specified inline policy from its group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DetachGroupPolicy": {
                "privilege": "DetachGroupPolicy",
                "description": "Grants permission to detach a managed policy from the specified IAM group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html",
                "privConditions": {
                    "iam:PolicyARN": {
                        "condition": "iam:PolicyARN",
                        "description": "Filters access by the ARN of an IAM policy",
                        "type": "ARN"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutGroupPolicy": {
                "privilege": "PutGroupPolicy",
                "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemoveUserFromGroup": {
                "privilege": "RemoveUserFromGroup",
                "description": "Grants permission to remove an IAM user from the specified group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveUserFromGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateGroup": {
                "privilege": "UpdateGroup",
                "description": "Grants permission to update the name or path of the specified IAM group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {}
    },
    "instanceProfile": {
        "resourceName": "instance-profile",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:instance-profile/${InstanceProfileNameWithPath}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListInstanceProfileTags": {
                "privilege": "ListInstanceProfileTags",
                "description": "Grants permission to list the tags that are attached to the specified instance profile",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfileTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListInstanceProfiles": {
                "privilege": "ListInstanceProfiles",
                "description": "Grants permission to list the instance profiles that have the specified path prefix",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfiles.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetInstanceProfile": {
                "privilege": "GetInstanceProfile",
                "description": "Grants permission to retrieve information about the specified instance profile, including the instance profile's path, GUID, ARN, and role",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetInstanceProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "AddRoleToInstanceProfile": {
                "privilege": "AddRoleToInstanceProfile",
                "description": "Grants permission to add an IAM role to the specified instance profile",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AddRoleToInstanceProfile.html",
                "privConditions": {},
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            },
            "CreateInstanceProfile": {
                "privilege": "CreateInstanceProfile",
                "description": "Grants permission to create a new instance profile",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateInstanceProfile.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteInstanceProfile": {
                "privilege": "DeleteInstanceProfile",
                "description": "Grants permission to delete the specified instance profile",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteInstanceProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemoveRoleFromInstanceProfile": {
                "privilege": "RemoveRoleFromInstanceProfile",
                "description": "Grants permission to remove an IAM role from the specified EC2 instance profile",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveRoleFromInstanceProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagInstanceProfile": {
                "privilege": "TagInstanceProfile",
                "description": "Grants permission to add tags to an instance profile",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagInstanceProfile.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagInstanceProfile": {
                "privilege": "UntagInstanceProfile",
                "description": "Grants permission to remove the specified tags from the instance profile",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagInstanceProfile.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "mfa": {
        "resourceName": "mfa",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:mfa/${MfaTokenIdWithPath}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListMFADeviceTags": {
                "privilege": "ListMFADeviceTags",
                "description": "Grants permission to list the tags that are attached to the specified virtual mfa device",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADeviceTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {
            "CreateVirtualMFADevice": {
                "privilege": "CreateVirtualMFADevice",
                "description": "Grants permission to create a new virtual MFA device",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateVirtualMFADevice.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteVirtualMFADevice": {
                "privilege": "DeleteVirtualMFADevice",
                "description": "Grants permission to delete a virtual MFA device",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteVirtualMFADevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "tagPrivileges": {
            "TagMFADevice": {
                "privilege": "TagMFADevice",
                "description": "Grants permission to add tags to a virtual mfa device",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagMFADevice.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagMFADevice": {
                "privilege": "UntagMFADevice",
                "description": "Grants permission to remove the specified tags from the virtual mfa device",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagMFADevice.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "oidcProvider": {
        "resourceName": "oidc-provider",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:oidc-provider/${OidcProviderName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListOpenIDConnectProviderTags": {
                "privilege": "ListOpenIDConnectProviderTags",
                "description": "Grants permission to list the tags that are attached to the specified OpenID Connect provider",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListOpenIDConnectProviderTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetOpenIDConnectProvider": {
                "privilege": "GetOpenIDConnectProvider",
                "description": "Grants permission to retrieve information about the specified OpenID Connect (OIDC) provider resource in IAM",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetOpenIDConnectProvider.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "AddClientIDToOpenIDConnectProvider": {
                "privilege": "AddClientIDToOpenIDConnectProvider",
                "description": "Grants permission to add a new client ID (audience) to the list of registered IDs for the specified IAM OpenID Connect (OIDC) provider resource",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AddClientIDToOpenIDConnectProvider.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateOpenIDConnectProvider": {
                "privilege": "CreateOpenIDConnectProvider",
                "description": "Grants permission to create an IAM resource that describes an identity provider (IdP) that supports OpenID Connect (OIDC)",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteOpenIDConnectProvider": {
                "privilege": "DeleteOpenIDConnectProvider",
                "description": "Grants permission to delete an OpenID Connect identity provider (IdP) resource object in IAM",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteOpenIDConnectProvider.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemoveClientIDFromOpenIDConnectProvider": {
                "privilege": "RemoveClientIDFromOpenIDConnectProvider",
                "description": "Grants permission to remove the client ID (audience) from the list of client IDs in the specified IAM OpenID Connect (OIDC) provider resource",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveClientIDFromOpenIDConnectProvider.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateOpenIDConnectProviderThumbprint": {
                "privilege": "UpdateOpenIDConnectProviderThumbprint",
                "description": "Grants permission to update the entire list of server certificate thumbprints that are associated with an OpenID Connect (OIDC) provider resource",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateOpenIDConnectProviderThumbprint.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagOpenIDConnectProvider": {
                "privilege": "TagOpenIDConnectProvider",
                "description": "Grants permission to add tags to an OpenID Connect provider",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagOpenIDConnectProvider.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagOpenIDConnectProvider": {
                "privilege": "UntagOpenIDConnectProvider",
                "description": "Grants permission to remove the specified tags from the OpenID Connect provider",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagOpenIDConnectProvider.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "policy": {
        "resourceName": "policy",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:policy/${PolicyNameWithPath}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListEntitiesForPolicy": {
                "privilege": "ListEntitiesForPolicy",
                "description": "Grants permission to list all IAM identities to which the specified managed policy is attached",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListEntitiesForPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListPolicyTags": {
                "privilege": "ListPolicyTags",
                "description": "Grants permission to list the tags that are attached to the specified managed policy",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicyTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListPolicyVersions": {
                "privilege": "ListPolicyVersions",
                "description": "Grants permission to list information about the versions of the specified managed policy, including the version that is currently set as the policy's default version",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicyVersions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GenerateServiceLastAccessedDetails": {
                "privilege": "GenerateServiceLastAccessedDetails",
                "description": "Grants permission to generate a service last accessed data report for an IAM resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateServiceLastAccessedDetails.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetPolicy": {
                "privilege": "GetPolicy",
                "description": "Grants permission to retrieve information about the specified managed policy, including the policy's default version and the total number of identities to which the policy is attached",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetPolicyVersion": {
                "privilege": "GetPolicyVersion",
                "description": "Grants permission to retrieve information about a version of the specified managed policy, including the policy document",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "CreatePolicy": {
                "privilege": "CreatePolicy",
                "description": "Grants permission to create a new managed policy",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreatePolicyVersion": {
                "privilege": "CreatePolicyVersion",
                "description": "Grants permission to create a new version of the specified managed policy",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeletePolicy": {
                "privilege": "DeletePolicy",
                "description": "Grants permission to delete the specified managed policy and remove it from any IAM entities (users, groups, or roles) to which it is attached",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeletePolicyVersion": {
                "privilege": "DeletePolicyVersion",
                "description": "Grants permission to delete a version from the specified managed policy",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "SetDefaultPolicyVersion": {
                "privilege": "SetDefaultPolicyVersion",
                "description": "Grants permission to set the version of the specified policy as the policy's default version",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SetDefaultPolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagPolicy": {
                "privilege": "TagPolicy",
                "description": "Grants permission to add tags to a managed policy",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagPolicy.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagPolicy": {
                "privilege": "UntagPolicy",
                "description": "Grants permission to remove the specified tags from the managed policy",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagPolicy.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "role": {
        "resourceName": "role",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            },
            "iam:ResourceTag/${TagKey}": {
                "condition": "iam:ResourceTag/${TagKey}",
                "description": "Filters access by the tags attached to an IAM entity (user or role)",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListAttachedRolePolicies": {
                "privilege": "ListAttachedRolePolicies",
                "description": "Grants permission to list all managed policies that are attached to the specified IAM role",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedRolePolicies.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListInstanceProfilesForRole": {
                "privilege": "ListInstanceProfilesForRole",
                "description": "Grants permission to list the instance profiles that have the specified associated IAM role",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfilesForRole.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListPoliciesGrantingServiceAccess": {
                "privilege": "ListPoliciesGrantingServiceAccess",
                "description": "Grants permission to list information about the policies that grant an entity access to a specific service",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPoliciesGrantingServiceAccess.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListRolePolicies": {
                "privilege": "ListRolePolicies",
                "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM role",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRolePolicies.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListRoleTags": {
                "privilege": "ListRoleTags",
                "description": "Grants permission to list the tags that are attached to the specified IAM role",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRoleTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GenerateServiceLastAccessedDetails": {
                "privilege": "GenerateServiceLastAccessedDetails",
                "description": "Grants permission to generate a service last accessed data report for an IAM resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateServiceLastAccessedDetails.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetContextKeysForPrincipalPolicy": {
                "privilege": "GetContextKeysForPrincipalPolicy",
                "description": "Grants permission to retrieve a list of all context keys that are referenced in all IAM policies that are attached to the specified IAM identity (user, group, or role)",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetContextKeysForPrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetRole": {
                "privilege": "GetRole",
                "description": "Grants permission to retrieve information about the specified role, including the role's path, GUID, ARN, and the role's trust policy",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRole.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetRolePolicy": {
                "privilege": "GetRolePolicy",
                "description": "Grants permission to retrieve an inline policy document that is embedded with the specified IAM role",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRolePolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetServiceLinkedRoleDeletionStatus": {
                "privilege": "GetServiceLinkedRoleDeletionStatus",
                "description": "Grants permission to retrieve an IAM service-linked role deletion status",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServiceLinkedRoleDeletionStatus.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "SimulatePrincipalPolicy": {
                "privilege": "SimulatePrincipalPolicy",
                "description": "Grants permission to simulate whether an identity-based policy that is attached to a specified IAM entity (user or role) provides permissions for specific API operations and resources",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SimulatePrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "AttachRolePolicy": {
                "privilege": "AttachRolePolicy",
                "description": "Grants permission to attach a managed policy to the specified IAM role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html",
                "privConditions": {
                    "iam:PolicyARN": {
                        "condition": "iam:PolicyARN",
                        "description": "Filters access by the ARN of an IAM policy",
                        "type": "ARN"
                    },
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateRole": {
                "privilege": "CreateRole",
                "description": "Grants permission to create a new role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateServiceLinkedRole": {
                "privilege": "CreateServiceLinkedRole",
                "description": "Grants permission to create an IAM role that allows an AWS service to perform actions on your behalf",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html",
                "privConditions": {
                    "iam:AWSServiceName": {
                        "condition": "iam:AWSServiceName",
                        "description": "Filters access by the AWS service to which this role is attached",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteRole": {
                "privilege": "DeleteRole",
                "description": "Grants permission to delete the specified role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRole.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteRolePermissionsBoundary": {
                "privilege": "DeleteRolePermissionsBoundary",
                "description": "Grants permission to remove the permissions boundary from a role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePermissionsBoundary.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteRolePolicy": {
                "privilege": "DeleteRolePolicy",
                "description": "Grants permission to delete the specified inline policy from the specified role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteServiceLinkedRole": {
                "privilege": "DeleteServiceLinkedRole",
                "description": "Grants permission to delete an IAM role that is linked to a specific AWS service, if the service is no longer using it",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServiceLinkedRole.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DetachRolePolicy": {
                "privilege": "DetachRolePolicy",
                "description": "Grants permission to detach a managed policy from the specified role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html",
                "privConditions": {
                    "iam:PolicyARN": {
                        "condition": "iam:PolicyARN",
                        "description": "Filters access by the ARN of an IAM policy",
                        "type": "ARN"
                    },
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PassRole": {
                "privilege": "PassRole",
                "description": "Grants permission to pass a role to a service",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html",
                "privConditions": {
                    "iam:AssociatedResourceArn": {
                        "condition": "iam:AssociatedResourceArn",
                        "description": "Filters by the resource that the role will be used on behalf of",
                        "type": "ARN"
                    },
                    "iam:PassedToService": {
                        "condition": "iam:PassedToService",
                        "description": "Filters access by the AWS service to which this role is passed",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutRolePermissionsBoundary": {
                "privilege": "PutRolePermissionsBoundary",
                "description": "Grants permission to set a managed policy as a permissions boundary for a role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePermissionsBoundary.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutRolePolicy": {
                "privilege": "PutRolePolicy",
                "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateAssumeRolePolicy": {
                "privilege": "UpdateAssumeRolePolicy",
                "description": "Grants permission to update the policy that grants an IAM entity permission to assume a role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAssumeRolePolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRole": {
                "privilege": "UpdateRole",
                "description": "Grants permission to update the description or maximum session duration setting of a role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateRole.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRoleDescription": {
                "privilege": "UpdateRoleDescription",
                "description": "Grants permission to update only the description of a role",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateRoleDescription.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagRole": {
                "privilege": "TagRole",
                "description": "Grants permission to add tags to an IAM role",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagRole.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagRole": {
                "privilege": "UntagRole",
                "description": "Grants permission to remove the specified tags from the role",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagRole.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "samlProvider": {
        "resourceName": "saml-provider",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:saml-provider/${SamlProviderName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListSAMLProviderTags": {
                "privilege": "ListSAMLProviderTags",
                "description": "Grants permission to list the tags that are attached to the specified SAML provider",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSAMLProviderTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetSAMLProvider": {
                "privilege": "GetSAMLProvider",
                "description": "Grants permission to retrieve the SAML provider metadocument that was uploaded when the IAM SAML provider resource was created or updated",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetSAMLProvider.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "CreateSAMLProvider": {
                "privilege": "CreateSAMLProvider",
                "description": "Grants permission to create an IAM resource that describes an identity provider (IdP) that supports SAML 2.0",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateSAMLProvider.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteSAMLProvider": {
                "privilege": "DeleteSAMLProvider",
                "description": "Grants permission to delete a SAML provider resource in IAM",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSAMLProvider.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateSAMLProvider": {
                "privilege": "UpdateSAMLProvider",
                "description": "Grants permission to update the metadata document for an existing SAML provider resource",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSAMLProvider.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagSAMLProvider": {
                "privilege": "TagSAMLProvider",
                "description": "Grants permission to add tags to a SAML Provider",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagSAMLProvider.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagSAMLProvider": {
                "privilege": "UntagSAMLProvider",
                "description": "Grants permission to remove the specified tags from the SAML Provider",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagSAMLProvider.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "serverCertificate": {
        "resourceName": "server-certificate",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:server-certificate/${CertificateNameWithPath}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListServerCertificateTags": {
                "privilege": "ListServerCertificateTags",
                "description": "Grants permission to list the tags that are attached to the specified server certificate",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServerCertificateTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetServerCertificate": {
                "privilege": "GetServerCertificate",
                "description": "Grants permission to retrieve information about the specified server certificate stored in IAM",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServerCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "DeleteServerCertificate": {
                "privilege": "DeleteServerCertificate",
                "description": "Grants permission to delete the specified server certificate",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServerCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateServerCertificate": {
                "privilege": "UpdateServerCertificate",
                "description": "Grants permission to update the name or the path of the specified server certificate stored in IAM",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateServerCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UploadServerCertificate": {
                "privilege": "UploadServerCertificate",
                "description": "Grants permission to upload a server certificate entity for the AWS account",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadServerCertificate.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagServerCertificate": {
                "privilege": "TagServerCertificate",
                "description": "Grants permission to add tags to a server certificate",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagServerCertificate.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagServerCertificate": {
                "privilege": "UntagServerCertificate",
                "description": "Grants permission to remove the specified tags from the server certificate",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagServerCertificate.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "smsMfa": {
        "resourceName": "sms-mfa",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:sms-mfa/${MfaTokenIdWithPath}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {},
        "permManPrivileges": {
            "DeleteVirtualMFADevice": {
                "privilege": "DeleteVirtualMFADevice",
                "description": "Grants permission to delete a virtual MFA device",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteVirtualMFADevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "tagPrivileges": {}
    },
    "user": {
        "resourceName": "user",
        "service": "iam",
        "resourceArn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access based on the tags associated with the resource",
                "type": "String"
            },
            "iam:ResourceTag/${TagKey}": {
                "condition": "iam:ResourceTag/${TagKey}",
                "description": "Filters access by the tags attached to an IAM entity (user or role)",
                "type": "String"
            }
        },
        "listPrivileges": {
            "GetLoginProfile": {
                "privilege": "GetLoginProfile",
                "description": "Grants permission to retrieve the user name and password creation date for the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetLoginProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListAccessKeys": {
                "privilege": "ListAccessKeys",
                "description": "Grants permission to list information about the access key IDs that are associated with the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccessKeys.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListAttachedUserPolicies": {
                "privilege": "ListAttachedUserPolicies",
                "description": "Grants permission to list all managed policies that are attached to the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedUserPolicies.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListGroupsForUser": {
                "privilege": "ListGroupsForUser",
                "description": "Grants permission to list the IAM groups that the specified IAM user belongs to",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupsForUser.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListMFADevices": {
                "privilege": "ListMFADevices",
                "description": "Grants permission to list the MFA devices for an IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListPoliciesGrantingServiceAccess": {
                "privilege": "ListPoliciesGrantingServiceAccess",
                "description": "Grants permission to list information about the policies that grant an entity access to a specific service",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPoliciesGrantingServiceAccess.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListSSHPublicKeys": {
                "privilege": "ListSSHPublicKeys",
                "description": "Grants permission to list information about the SSH public keys that are associated with the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSSHPublicKeys.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListServiceSpecificCredentials": {
                "privilege": "ListServiceSpecificCredentials",
                "description": "Grants permission to list the service-specific credentials that are associated with the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServiceSpecificCredentials.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListSigningCertificates": {
                "privilege": "ListSigningCertificates",
                "description": "Grants permission to list information about the signing certificates that are associated with the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSigningCertificates.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListUserPolicies": {
                "privilege": "ListUserPolicies",
                "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUserPolicies.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListUserTags": {
                "privilege": "ListUserTags",
                "description": "Grants permission to list the tags that are attached to the specified IAM user",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUserTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GenerateServiceLastAccessedDetails": {
                "privilege": "GenerateServiceLastAccessedDetails",
                "description": "Grants permission to generate a service last accessed data report for an IAM resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateServiceLastAccessedDetails.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetAccessKeyLastUsed": {
                "privilege": "GetAccessKeyLastUsed",
                "description": "Grants permission to retrieve information about when the specified access key was last used",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccessKeyLastUsed.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetContextKeysForPrincipalPolicy": {
                "privilege": "GetContextKeysForPrincipalPolicy",
                "description": "Grants permission to retrieve a list of all context keys that are referenced in all IAM policies that are attached to the specified IAM identity (user, group, or role)",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetContextKeysForPrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetSSHPublicKey": {
                "privilege": "GetSSHPublicKey",
                "description": "Grants permission to retrieve the specified SSH public key, including metadata about the key",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetSSHPublicKey.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetUser": {
                "privilege": "GetUser",
                "description": "Grants permission to retrieve information about the specified IAM user, including the user's creation date, path, unique ID, and ARN",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUser.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetUserPolicy": {
                "privilege": "GetUserPolicy",
                "description": "Grants permission to retrieve an inline policy document that is embedded in the specified IAM user",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUserPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "SimulatePrincipalPolicy": {
                "privilege": "SimulatePrincipalPolicy",
                "description": "Grants permission to simulate whether an identity-based policy that is attached to a specified IAM entity (user or role) provides permissions for specific API operations and resources",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_SimulatePrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {
            "AttachUserPolicy": {
                "privilege": "AttachUserPolicy",
                "description": "Grants permission to attach a managed policy to the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html",
                "privConditions": {
                    "iam:PolicyARN": {
                        "condition": "iam:PolicyARN",
                        "description": "Filters access by the ARN of an IAM policy",
                        "type": "ARN"
                    },
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ChangePassword": {
                "privilege": "ChangePassword",
                "description": "Grants permission for an IAM user to to change their own password",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ChangePassword.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateAccessKey": {
                "privilege": "CreateAccessKey",
                "description": "Grants permission to create access key and secret access key for the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccessKey.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateLoginProfile": {
                "privilege": "CreateLoginProfile",
                "description": "Grants permission to create a password for the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateLoginProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateServiceSpecificCredential": {
                "privilege": "CreateServiceSpecificCredential",
                "description": "Grants permission to create a new service-specific credential for an IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceSpecificCredential.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateUser": {
                "privilege": "CreateUser",
                "description": "Grants permission to create a new IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateUser.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeactivateMFADevice": {
                "privilege": "DeactivateMFADevice",
                "description": "Grants permission to deactivate the specified MFA device and remove its association with the IAM user for which it was originally enabled",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeactivateMFADevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteAccessKey": {
                "privilege": "DeleteAccessKey",
                "description": "Grants permission to delete the access key pair that is associated with the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccessKey.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteLoginProfile": {
                "privilege": "DeleteLoginProfile",
                "description": "Grants permission to delete the password for the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteLoginProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteSSHPublicKey": {
                "privilege": "DeleteSSHPublicKey",
                "description": "Grants permission to delete the specified SSH public key",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSSHPublicKey.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteServiceSpecificCredential": {
                "privilege": "DeleteServiceSpecificCredential",
                "description": "Grants permission to delete the specified service-specific credential for an IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServiceSpecificCredential.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteSigningCertificate": {
                "privilege": "DeleteSigningCertificate",
                "description": "Grants permission to delete a signing certificate that is associated with the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSigningCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteUser": {
                "privilege": "DeleteUser",
                "description": "Grants permission to delete the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUser.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteUserPermissionsBoundary": {
                "privilege": "DeleteUserPermissionsBoundary",
                "description": "Grants permission to remove the permissions boundary from the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPermissionsBoundary.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteUserPolicy": {
                "privilege": "DeleteUserPolicy",
                "description": "Grants permission to delete the specified inline policy from an IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DetachUserPolicy": {
                "privilege": "DetachUserPolicy",
                "description": "Grants permission to detach a managed policy from the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html",
                "privConditions": {
                    "iam:PolicyARN": {
                        "condition": "iam:PolicyARN",
                        "description": "Filters access by the ARN of an IAM policy",
                        "type": "ARN"
                    },
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableMFADevice": {
                "privilege": "EnableMFADevice",
                "description": "Grants permission to enable an MFA device and associate it with the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutUserPermissionsBoundary": {
                "privilege": "PutUserPermissionsBoundary",
                "description": "Grants permission to set a managed policy as a permissions boundary for an IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPermissionsBoundary.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutUserPolicy": {
                "privilege": "PutUserPolicy",
                "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html",
                "privConditions": {
                    "iam:PermissionsBoundary": {
                        "condition": "iam:PermissionsBoundary",
                        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ResetServiceSpecificCredential": {
                "privilege": "ResetServiceSpecificCredential",
                "description": "Grants permission to reset the password for an existing service-specific credential for an IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ResetServiceSpecificCredential.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ResyncMFADevice": {
                "privilege": "ResyncMFADevice",
                "description": "Grants permission to synchronize the specified MFA device with its IAM entity (user or role)",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_ResyncMFADevice.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateAccessKey": {
                "privilege": "UpdateAccessKey",
                "description": "Grants permission to update the status of the specified access key as Active or Inactive",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccessKey.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateLoginProfile": {
                "privilege": "UpdateLoginProfile",
                "description": "Grants permission to change the password for the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateLoginProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateSSHPublicKey": {
                "privilege": "UpdateSSHPublicKey",
                "description": "Grants permission to update the status of an IAM user's SSH public key to active or inactive",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSSHPublicKey.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateServiceSpecificCredential": {
                "privilege": "UpdateServiceSpecificCredential",
                "description": "Grants permission to update the status of a service-specific credential to active or inactive for an IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateServiceSpecificCredential.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateSigningCertificate": {
                "privilege": "UpdateSigningCertificate",
                "description": "Grants permission to update the status of the specified user signing certificate to active or disabled",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSigningCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateUser": {
                "privilege": "UpdateUser",
                "description": "Grants permission to update the name or the path of the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateUser.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UploadSSHPublicKey": {
                "privilege": "UploadSSHPublicKey",
                "description": "Grants permission to upload an SSH public key and associate it with the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadSSHPublicKey.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UploadSigningCertificate": {
                "privilege": "UploadSigningCertificate",
                "description": "Grants permission to upload an X.509 signing certificate and associate it with the specified IAM user",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadSigningCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagUser": {
                "privilege": "TagUser",
                "description": "Grants permission to add tags to an IAM user",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagUser.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagUser": {
                "privilege": "UntagUser",
                "description": "Grants permission to remove the specified tags from the user",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/APIReference/API_UntagUser.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the tag keys that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    }
}
{
    "bytematchset": {
        "resourceName": "bytematchset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:bytematchset/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetByteMatchSet": {
                "privilege": "GetByteMatchSet",
                "description": "Grants permission to retrieve a ByteMatchSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetByteMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateByteMatchSet": {
                "privilege": "CreateByteMatchSet",
                "description": "Grants permission to create a ByteMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateByteMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteByteMatchSet": {
                "privilege": "DeleteByteMatchSet",
                "description": "Grants permission to delete a ByteMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteByteMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateByteMatchSet": {
                "privilege": "UpdateByteMatchSet",
                "description": "Grants permission to insert or delete ByteMatchTuple objects in a ByteMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateByteMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "ipset": {
        "resourceName": "ipset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:ipset/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetIPSet": {
                "privilege": "GetIPSet",
                "description": "Grants permission to retrieve an IPSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetIPSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateIPSet": {
                "privilege": "CreateIPSet",
                "description": "Grants permission to create an IPSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateIPSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteIPSet": {
                "privilege": "DeleteIPSet",
                "description": "Grants permission to delete an IPSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteIPSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateIPSet": {
                "privilege": "UpdateIPSet",
                "description": "Grants permission to insert or delete IPSetDescriptor objects in an IPSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateIPSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "ratebasedrule": {
        "resourceName": "ratebasedrule",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:ratebasedrule/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetRateBasedRule": {
                "privilege": "GetRateBasedRule",
                "description": "Grants permission to retrieve a RateBasedRule",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetRateBasedRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetRateBasedRuleManagedKeys": {
                "privilege": "GetRateBasedRuleManagedKeys",
                "description": "Grants permission to retrieve the array of IP addresses that are currently being blocked by a RateBasedRule",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetRateBasedRuleManagedKeys.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to retrieve the tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateRateBasedRule": {
                "privilege": "CreateRateBasedRule",
                "description": "Grants permission to create a RateBasedRule for limiting the volume of requests from a single IP address",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateRateBasedRule.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteRateBasedRule": {
                "privilege": "DeleteRateBasedRule",
                "description": "Grants permission to delete a RateBasedRule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteRateBasedRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRateBasedRule": {
                "privilege": "UpdateRateBasedRule",
                "description": "Grants permission to modify a rate based rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateRateBasedRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to add a Tag to a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove a Tag from a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "rule": {
        "resourceName": "rule",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:rule/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetRule": {
                "privilege": "GetRule",
                "description": "Grants permission to retrieve a Rule",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetSampledRequests": {
                "privilege": "GetSampledRequests",
                "description": "Grants permission to retrieve detailed information about a sample set of web requests",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetSampledRequests.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to retrieve the tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateRule": {
                "privilege": "CreateRule",
                "description": "Grants permission to create a Rule for filtering web requests",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateRule.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteRule": {
                "privilege": "DeleteRule",
                "description": "Grants permission to delete a Rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRule": {
                "privilege": "UpdateRule",
                "description": "Grants permission to modify a Rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to add a Tag to a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove a Tag from a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "sizeconstraintset": {
        "resourceName": "sizeconstraintset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:sizeconstraintset/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetSizeConstraintSet": {
                "privilege": "GetSizeConstraintSet",
                "description": "Grants permission to retrieve a SizeConstraintSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetSizeConstraintSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateSizeConstraintSet": {
                "privilege": "CreateSizeConstraintSet",
                "description": "Grants permission to create a SizeConstraintSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateSizeConstraintSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteSizeConstraintSet": {
                "privilege": "DeleteSizeConstraintSet",
                "description": "Grants permission to delete a SizeConstraintSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteSizeConstraintSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateSizeConstraintSet": {
                "privilege": "UpdateSizeConstraintSet",
                "description": "Grants permission to insert or delete SizeConstraint objects in a SizeConstraintSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateSizeConstraintSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "sqlinjectionmatchset": {
        "resourceName": "sqlinjectionmatchset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:sqlinjectionset/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetSqlInjectionMatchSet": {
                "privilege": "GetSqlInjectionMatchSet",
                "description": "Grants permission to retrieve an SqlInjectionMatchSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetSqlInjectionMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateSqlInjectionMatchSet": {
                "privilege": "CreateSqlInjectionMatchSet",
                "description": "Grants permission to create an SqlInjectionMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateSqlInjectionMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteSqlInjectionMatchSet": {
                "privilege": "DeleteSqlInjectionMatchSet",
                "description": "Grants permission to delete an SqlInjectionMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteSqlInjectionMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateSqlInjectionMatchSet": {
                "privilege": "UpdateSqlInjectionMatchSet",
                "description": "Grants permission to insert or delete SqlInjectionMatchTuple objects in an SqlInjectionMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateSqlInjectionMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "webacl": {
        "resourceName": "webacl",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:webacl/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetLoggingConfiguration": {
                "privilege": "GetLoggingConfiguration",
                "description": "Grants permission to retrieve a LoggingConfiguration for a web ACL",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetLoggingConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetSampledRequests": {
                "privilege": "GetSampledRequests",
                "description": "Grants permission to retrieve detailed information about a sample set of web requests",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetSampledRequests.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetWebACL": {
                "privilege": "GetWebACL",
                "description": "Grants permission to retrieve a WebACL",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to retrieve the tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateWebACL": {
                "privilege": "CreateWebACL",
                "description": "Grants permission to create a WebACL, which contains rules for filtering web requests",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateWebACL.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateWebACLMigrationStack": {
                "privilege": "CreateWebACLMigrationStack",
                "description": "Grants permission to create a CloudFormation web ACL template in an S3 bucket for the purposes of migrating the web ACL from AWS WAF Classic to AWS WAF v2",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateWebACLMigrationStack.html",
                "privConditions": {},
                "dependentActions": [
                    "s3:PutObject"
                ],
                "required": true
            },
            "DeleteLoggingConfiguration": {
                "privilege": "DeleteLoggingConfiguration",
                "description": "Grants permission to delete the LoggingConfiguration from a web ACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteLoggingConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteWebACL": {
                "privilege": "DeleteWebACL",
                "description": "Grants permission to delete a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutLoggingConfiguration": {
                "privilege": "PutLoggingConfiguration",
                "description": "Grants permission to associate a LoggingConfiguration with a specified web ACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_PutLoggingConfiguration.html",
                "privConditions": {},
                "dependentActions": [
                    "iam:CreateServiceLinkedRole"
                ],
                "required": true
            },
            "UpdateWebACL": {
                "privilege": "UpdateWebACL",
                "description": "Grants permission to insert or delete ActivatedRule objects in a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateWebACL.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to add a Tag to a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove a Tag from a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "xssmatchset": {
        "resourceName": "xssmatchset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:xssmatchset/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetXssMatchSet": {
                "privilege": "GetXssMatchSet",
                "description": "Grants permission to retrieve an XssMatchSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetXssMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateXssMatchSet": {
                "privilege": "CreateXssMatchSet",
                "description": "Grants permission to create an XssMatchSet, which you use to detect requests that contain cross-site scripting attacks",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateXssMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteXssMatchSet": {
                "privilege": "DeleteXssMatchSet",
                "description": "Grants permission to delete an XssMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteXssMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateXssMatchSet": {
                "privilege": "UpdateXssMatchSet",
                "description": "Grants permission to insert or delete XssMatchTuple objects in an XssMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateXssMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "regexmatchset": {
        "resourceName": "regexmatchset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:regexmatch/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetRegexMatchSet": {
                "privilege": "GetRegexMatchSet",
                "description": "Grants permission to retrieve a RegexMatchSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetRegexMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateRegexMatchSet": {
                "privilege": "CreateRegexMatchSet",
                "description": "Grants permission to create a RegexMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateRegexMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteRegexMatchSet": {
                "privilege": "DeleteRegexMatchSet",
                "description": "Grants permission to delete a RegexMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteRegexMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRegexMatchSet": {
                "privilege": "UpdateRegexMatchSet",
                "description": "Grants permission to insert or delete RegexMatchTuple objects in a RegexMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateRegexMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "regexpatternset": {
        "resourceName": "regexpatternset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:regexpatternset/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetRegexPatternSet": {
                "privilege": "GetRegexPatternSet",
                "description": "Grants permission to retrieve a RegexPatternSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetRegexPatternSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateRegexPatternSet": {
                "privilege": "CreateRegexPatternSet",
                "description": "Grants permission to create a RegexPatternSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateRegexPatternSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteRegexPatternSet": {
                "privilege": "DeleteRegexPatternSet",
                "description": "Grants permission to delete a RegexPatternSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteRegexPatternSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRegexPatternSet": {
                "privilege": "UpdateRegexPatternSet",
                "description": "Grants permission to insert or delete RegexPatternStrings in a RegexPatternSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateRegexPatternSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "geomatchset": {
        "resourceName": "geomatchset",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:geomatchset/${Id}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetGeoMatchSet": {
                "privilege": "GetGeoMatchSet",
                "description": "Grants permission to retrieve a GeoMatchSet",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetGeoMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateGeoMatchSet": {
                "privilege": "CreateGeoMatchSet",
                "description": "Grants permission to create a GeoMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateGeoMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteGeoMatchSet": {
                "privilege": "DeleteGeoMatchSet",
                "description": "Grants permission to delete a GeoMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteGeoMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateGeoMatchSet": {
                "privilege": "UpdateGeoMatchSet",
                "description": "Grants permission to insert or delete GeoMatchConstraint objects in a GeoMatchSet",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateGeoMatchSet.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "rulegroup": {
        "resourceName": "rulegroup",
        "service": "waf",
        "resourceArn": "arn:${Partition}:waf::${Account}:rulegroup/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on tag-value associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetPermissionPolicy": {
                "privilege": "GetPermissionPolicy",
                "description": "Grants permission to retrieve an IAM policy for a rule group",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetPermissionPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetRuleGroup": {
                "privilege": "GetRuleGroup",
                "description": "Grants permission to retrieve a RuleGroup",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_GetRuleGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to retrieve the tags for a resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateRuleGroup": {
                "privilege": "CreateRuleGroup",
                "description": "Grants permission to create a RuleGroup, which is a collection of predefined rules that you can use in a WebACL",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_CreateRuleGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteRuleGroup": {
                "privilege": "DeleteRuleGroup",
                "description": "Grants permission to delete a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeleteRuleGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRuleGroup": {
                "privilege": "UpdateRuleGroup",
                "description": "Grants permission to insert or delete ActivatedRule objects in a RuleGroup",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UpdateRuleGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "DeletePermissionPolicy": {
                "privilege": "DeletePermissionPolicy",
                "description": "Grants permission to delete an IAM policy from a rule group",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_DeletePermissionPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutPermissionPolicy": {
                "privilege": "PutPermissionPolicy",
                "description": "Grants permission to attach an IAM policy to a rule group, to share the rule group between accounts",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_PutPermissionPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to add a Tag to a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters actions based on the allowed set of values for each of the tags",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove a Tag from a resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters actions based on the presence of mandatory tags in the request",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    }
}
{
    "client": {
        "resourceName": "client",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:client/${ClientId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "Connect": {
                "privilege": "Connect",
                "description": "Grants permission to connect as the specified client",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "index": {
        "resourceName": "index",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:index/${IndexName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeIndex": {
                "privilege": "DescribeIndex",
                "description": "Grants permission to get information about the specified index",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeIndex.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetBucketsAggregation": {
                "privilege": "GetBucketsAggregation",
                "description": "Grants permission to get buckets aggregation for IoT fleet index",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/iot-indexing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetCardinality": {
                "privilege": "GetCardinality",
                "description": "Grants permission to get cardinality for IoT fleet index",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetCardinality.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetPercentiles": {
                "privilege": "GetPercentiles",
                "description": "Grants permission to get percentiles for IoT fleet index",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetPercentiles.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetStatistics": {
                "privilege": "GetStatistics",
                "description": "Grants permission to get statistics for IoT fleet index",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetStatistics.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "SearchIndex": {
                "privilege": "SearchIndex",
                "description": "Grants permission to search IoT fleet index",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_SearchIndex.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateFleetMetric": {
                "privilege": "CreateFleetMetric",
                "description": "Grants permission to create a fleet metric",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/iot-indexing.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateFleetMetric": {
                "privilege": "UpdateFleetMetric",
                "description": "Grants permission to update a fleet metric",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/iot-indexing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "fleetmetric": {
        "resourceName": "fleetmetric",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:fleetmetric/${FleetMetricName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeFleetMetric": {
                "privilege": "DescribeFleetMetric",
                "description": "Grants permission to get information about the specified fleet metric",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/iot-indexing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateFleetMetric": {
                "privilege": "CreateFleetMetric",
                "description": "Grants permission to create a fleet metric",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/iot-indexing.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteFleetMetric": {
                "privilege": "DeleteFleetMetric",
                "description": "Grants permission to delete the specified fleet metric",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/iot-indexing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateFleetMetric": {
                "privilege": "UpdateFleetMetric",
                "description": "Grants permission to update a fleet metric",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/iot-indexing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "job": {
        "resourceName": "job",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:job/${JobId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListJobExecutionsForJob": {
                "privilege": "ListJobExecutionsForJob",
                "description": "Grants permission to list the job executions for a job",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListJobExecutionsForJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "DescribeJob": {
                "privilege": "DescribeJob",
                "description": "Grants permission to describe a job",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DescribeJobExecution": {
                "privilege": "DescribeJobExecution",
                "description": "Grants permission to describe a job execution",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "GetJobDocument": {
                "privilege": "GetJobDocument",
                "description": "Grants permission to get a job document",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetJobDocument.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AssociateTargetsWithJob": {
                "privilege": "AssociateTargetsWithJob",
                "description": "Grants permission to associate a group with a continuous job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AssociateTargetsWithJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CancelJob": {
                "privilege": "CancelJob",
                "description": "Grants permission to cancel a job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CancelJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CancelJobExecution": {
                "privilege": "CancelJobExecution",
                "description": "Grants permission to cancel a job execution on a particular device",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CancelJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateJob": {
                "privilege": "CreateJob",
                "description": "Grants permission to create a job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateJob.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateJobTemplate": {
                "privilege": "CreateJobTemplate",
                "description": "Grants permission to create a job template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateJobTemplate.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteJob": {
                "privilege": "DeleteJob",
                "description": "Grants permission to delete a job and its related job executions",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteJobExecution": {
                "privilege": "DeleteJobExecution",
                "description": "Grants permission to delete a job execution",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateJob": {
                "privilege": "UpdateJob",
                "description": "Grants permission to update a job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "jobtemplate": {
        "resourceName": "jobtemplate",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:jobtemplate/${JobTemplateId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeJobTemplate": {
                "privilege": "DescribeJobTemplate",
                "description": "Grants permission to describe a job template",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeJobTemplate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DescribeManagedJobTemplate": {
                "privilege": "DescribeManagedJobTemplate",
                "description": "Grants permission to describe a managed job template",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeManagedJobTemplate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateJob": {
                "privilege": "CreateJob",
                "description": "Grants permission to create a job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateJob.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateJobTemplate": {
                "privilege": "CreateJobTemplate",
                "description": "Grants permission to create a job template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateJobTemplate.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteJobTemplate": {
                "privilege": "DeleteJobTemplate",
                "description": "Grants permission to delete a job template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteJobTemplate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "tunnel": {
        "resourceName": "tunnel",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:tunnel/${TunnelId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeTunnel": {
                "privilege": "DescribeTunnel",
                "description": "Grants permission to describe a tunnel",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeTunnel.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CloseTunnel": {
                "privilege": "CloseTunnel",
                "description": "Grants permission to close a tunnel",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CloseTunnel.html",
                "privConditions": {
                    "iot:Delete": {
                        "condition": "iot:Delete",
                        "description": "Filters access by a flag indicating whether or not to also delete an IoT Tunnel immediately when making iot:CloseTunnel request",
                        "type": "Bool"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "thing": {
        "resourceName": "thing",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:thing/${ThingName}",
        "resourceConditions": {},
        "listPrivileges": {
            "ListActiveViolations": {
                "privilege": "ListActiveViolations",
                "description": "Grants permission to list the active violations for a given Device Defender security profile or Thing",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListActiveViolations.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListDetectMitigationActionsExecutions": {
                "privilege": "ListDetectMitigationActionsExecutions",
                "description": "Grants permission to lists mitigation actions executions for a Device Defender ML Detect Security Profile",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListDetectMitigationActionsExecutions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListJobExecutionsForThing": {
                "privilege": "ListJobExecutionsForThing",
                "description": "Grants permission to list the job executions for the specified thing",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListJobExecutionsForThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListNamedShadowsForThing": {
                "privilege": "ListNamedShadowsForThing",
                "description": "Grants permission to list all named shadows for a given thing",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListNamedShadowsForThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListThingGroupsForThing": {
                "privilege": "ListThingGroupsForThing",
                "description": "Grants permission to list thing groups to which the specified thing belongs",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListThingGroupsForThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListViolationEvents": {
                "privilege": "ListViolationEvents",
                "description": "Grants permission to list the Device Defender security profile violations discovered during the given time period",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListViolationEvents.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {
            "DescribeJobExecution": {
                "privilege": "DescribeJobExecution",
                "description": "Grants permission to describe a job execution",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DescribeThing": {
                "privilege": "DescribeThing",
                "description": "Grants permission to get information about the specified thing",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetPendingJobExecutions": {
                "privilege": "GetPendingJobExecutions",
                "description": "Grants permission to get the list of all jobs for a thing that are not in a terminal state",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetPendingJobExecutions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetThingShadow": {
                "privilege": "GetThingShadow",
                "description": "Grants permission to get the thing shadow",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "AddThingToBillingGroup": {
                "privilege": "AddThingToBillingGroup",
                "description": "Grants permission to add a thing to the specified billing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AddThingToBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AddThingToThingGroup": {
                "privilege": "AddThingToThingGroup",
                "description": "Grants permission to add a thing to the specified thing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AddThingToThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateTargetsWithJob": {
                "privilege": "AssociateTargetsWithJob",
                "description": "Grants permission to associate a group with a continuous job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AssociateTargetsWithJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CancelJobExecution": {
                "privilege": "CancelJobExecution",
                "description": "Grants permission to cancel a job execution on a particular device",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CancelJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateJob": {
                "privilege": "CreateJob",
                "description": "Grants permission to create a job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateJob.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateThing": {
                "privilege": "CreateThing",
                "description": "Grants permission to create a thing in the thing registry",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DeleteJobExecution": {
                "privilege": "DeleteJobExecution",
                "description": "Grants permission to delete a job execution",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteThing": {
                "privilege": "DeleteThing",
                "description": "Grants permission to delete the specified thing",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteThingShadow": {
                "privilege": "DeleteThingShadow",
                "description": "Grants permission to delete the specified thing shadow",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemoveThingFromBillingGroup": {
                "privilege": "RemoveThingFromBillingGroup",
                "description": "Grants permission to remove thing from the specified billing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_RemoveThingFromBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemoveThingFromThingGroup": {
                "privilege": "RemoveThingFromThingGroup",
                "description": "Grants permission to remove thing from the specified thing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_RemoveThingFromThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartNextPendingJobExecution": {
                "privilege": "StartNextPendingJobExecution",
                "description": "Grants permission to get and start the next pending job execution for a thing",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_StartNextPendingJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateJobExecution": {
                "privilege": "UpdateJobExecution",
                "description": "Grants permission to update a job execution",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateJobExecution.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateThing": {
                "privilege": "UpdateThing",
                "description": "Grants permission to update information associated with the specified thing",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateThingGroupsForThing": {
                "privilege": "UpdateThingGroupsForThing",
                "description": "Grants permission to update the thing groups to which the thing belongs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateThingGroupsForThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateThingShadow": {
                "privilege": "UpdateThingShadow",
                "description": "Grants permission to update the thing shadow",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "thinggroup": {
        "resourceName": "thinggroup",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:thinggroup/${ThingGroupName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListSecurityProfilesForTarget": {
                "privilege": "ListSecurityProfilesForTarget",
                "description": "Grants permission to list the Device Defender security profiles attached to a target",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfilesForTarget.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListThingsInThingGroup": {
                "privilege": "ListThingsInThingGroup",
                "description": "Grants permission to list all things in the specified thing group",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListThingsInThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "DescribeThingGroup": {
                "privilege": "DescribeThingGroup",
                "description": "Grants permission to get information about the specified thing group",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AddThingToThingGroup": {
                "privilege": "AddThingToThingGroup",
                "description": "Grants permission to add a thing to the specified thing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AddThingToThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AssociateTargetsWithJob": {
                "privilege": "AssociateTargetsWithJob",
                "description": "Grants permission to associate a group with a continuous job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AssociateTargetsWithJob.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "AttachSecurityProfile": {
                "privilege": "AttachSecurityProfile",
                "description": "Grants permission to associate a Device Defender security profile with a thing group or with this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AttachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "CreateJob": {
                "privilege": "CreateJob",
                "description": "Grants permission to create a job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateJob.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "CreateThingGroup": {
                "privilege": "CreateThingGroup",
                "description": "Grants permission to create a thing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateThingGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteThingGroup": {
                "privilege": "DeleteThingGroup",
                "description": "Grants permission to delete the specified thing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DetachSecurityProfile": {
                "privilege": "DetachSecurityProfile",
                "description": "Grants permission to disassociate a Device Defender security profile from a thing group or from this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DetachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "RemoveThingFromThingGroup": {
                "privilege": "RemoveThingFromThingGroup",
                "description": "Grants permission to remove thing from the specified thing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_RemoveThingFromThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateThingGroup": {
                "privilege": "UpdateThingGroup",
                "description": "Grants permission to update information associated with the specified thing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateThingGroupsForThing": {
                "privilege": "UpdateThingGroupsForThing",
                "description": "Grants permission to update the thing groups to which the thing belongs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateThingGroupsForThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {
            "AttachPolicy": {
                "privilege": "AttachPolicy",
                "description": "Grants permission to attach a policy to the specified target",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AttachPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DetachPolicy": {
                "privilege": "DetachPolicy",
                "description": "Grants permission to detach a policy from the specified target",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DetachPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "billinggroup": {
        "resourceName": "billinggroup",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:billinggroup/${BillingGroupName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListThingsInBillingGroup": {
                "privilege": "ListThingsInBillingGroup",
                "description": "Grants permission to list all things in the specified billing group",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListThingsInBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "DescribeBillingGroup": {
                "privilege": "DescribeBillingGroup",
                "description": "Grants permission to get information about the specified billing group",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AddThingToBillingGroup": {
                "privilege": "AddThingToBillingGroup",
                "description": "Grants permission to add a thing to the specified billing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AddThingToBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateBillingGroup": {
                "privilege": "CreateBillingGroup",
                "description": "Grants permission to create a billing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateBillingGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateThing": {
                "privilege": "CreateThing",
                "description": "Grants permission to create a thing in the thing registry",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateThing.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DeleteBillingGroup": {
                "privilege": "DeleteBillingGroup",
                "description": "Grants permission to delete the specified billing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemoveThingFromBillingGroup": {
                "privilege": "RemoveThingFromBillingGroup",
                "description": "Grants permission to remove thing from the specified billing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_RemoveThingFromBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateBillingGroup": {
                "privilege": "UpdateBillingGroup",
                "description": "Grants permission to update information associated with the specified billing group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateBillingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "dynamicthinggroup": {
        "resourceName": "dynamicthinggroup",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:thinggroup/${ThingGroupName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateDynamicThingGroup": {
                "privilege": "CreateDynamicThingGroup",
                "description": "Grants permission to create a Dynamic Thing Group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateDynamicThingGroup.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteDynamicThingGroup": {
                "privilege": "DeleteDynamicThingGroup",
                "description": "Grants permission to delete the specified Dynamic Thing Group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteDynamicThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateDynamicThingGroup": {
                "privilege": "UpdateDynamicThingGroup",
                "description": "Grants permission to update a Dynamic Thing Group",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateDynamicThingGroup.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "thingtype": {
        "resourceName": "thingtype",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:thingtype/${ThingTypeName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeThingType": {
                "privilege": "DescribeThingType",
                "description": "Grants permission to get information about the specified thing type",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeThingType.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateThingType": {
                "privilege": "CreateThingType",
                "description": "Grants permission to create a new thing type",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateThingType.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteThingType": {
                "privilege": "DeleteThingType",
                "description": "Grants permission to delete the specified thing type",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteThingType.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeprecateThingType": {
                "privilege": "DeprecateThingType",
                "description": "Grants permission to deprecate the specified thing type",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeprecateThingType.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "topic": {
        "resourceName": "topic",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:topic/${TopicName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetRetainedMessage": {
                "privilege": "GetRetainedMessage",
                "description": "Grants permission to get the retained message on the specified topic",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "Publish": {
                "privilege": "Publish",
                "description": "Grants permission to publish to the specified topic",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "Receive": {
                "privilege": "Receive",
                "description": "Grants permission to receive from the specified topic",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RetainPublish": {
                "privilege": "RetainPublish",
                "description": "Grants permission to publish a retained message to the specified topic",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "topicfilter": {
        "resourceName": "topicfilter",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:topicfilter/${TopicFilter}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "Subscribe": {
                "privilege": "Subscribe",
                "description": "Grants permission to subscribe to the specified TopicFilter",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/developerguide/policy-actions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "rolealias": {
        "resourceName": "rolealias",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:rolealias/${RoleAlias}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeRoleAlias": {
                "privilege": "DescribeRoleAlias",
                "description": "Grants permission to describe a role alias",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeRoleAlias.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateRoleAlias": {
                "privilege": "CreateRoleAlias",
                "description": "Grants permission to create a role alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateRoleAlias.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            },
            "DeleteRoleAlias": {
                "privilege": "DeleteRoleAlias",
                "description": "Grants permission to delete the specified role alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteRoleAlias.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateRoleAlias": {
                "privilege": "UpdateRoleAlias",
                "description": "Grants permission to update the role alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateRoleAlias.html",
                "privConditions": {},
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "authorizer": {
        "resourceName": "authorizer",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:authorizer/${AuthorizerName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeAuthorizer": {
                "privilege": "DescribeAuthorizer",
                "description": "Grants permission to describe an authorizer",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeAuthorizer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "TestInvokeAuthorizer": {
                "privilege": "TestInvokeAuthorizer",
                "description": "Grants permission to test invoke the specified custom authorizer for testing purposes",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TestInvokeAuthorizer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateAuthorizer": {
                "privilege": "CreateAuthorizer",
                "description": "Grants permission to create an authorizer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateAuthorizer.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteAuthorizer": {
                "privilege": "DeleteAuthorizer",
                "description": "Grants permission to delete the specified authorizer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteAuthorizer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateAuthorizer": {
                "privilege": "UpdateAuthorizer",
                "description": "Grants permission to update an authorizer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateAuthorizer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "SetDefaultAuthorizer": {
                "privilege": "SetDefaultAuthorizer",
                "description": "Grants permission to set the default authorizer. This will be used if a websocket connection is made without specifying an authorizer",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_SetDefaultAuthorizer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "policy": {
        "resourceName": "policy",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:policy/${PolicyName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListPolicyVersions": {
                "privilege": "ListPolicyVersions",
                "description": "Grants permission to list the versions of the specified policy, and identifies the default version",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListPolicyVersions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTargetsForPolicy": {
                "privilege": "ListTargetsForPolicy",
                "description": "Grants permission to list targets for the specified policy",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTargetsForPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetPolicy": {
                "privilege": "GetPolicy",
                "description": "Grants permission to get information about the specified policy with the policy document of the default version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetPolicyVersion": {
                "privilege": "GetPolicyVersion",
                "description": "Grants permission to get information about the specified policy version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetPolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreatePolicy": {
                "privilege": "CreatePolicy",
                "description": "Grants permission to create an AWS IoT policy",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreatePolicy.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreatePolicyVersion": {
                "privilege": "CreatePolicyVersion",
                "description": "Grants permission to create a new version of the specified AWS IoT policy",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreatePolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeletePolicy": {
                "privilege": "DeletePolicy",
                "description": "Grants permission to delete the specified policy",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeletePolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeletePolicyVersion": {
                "privilege": "DeletePolicyVersion",
                "description": "Grants permission to Delete the specified version of the specified policy",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeletePolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "SetDefaultPolicyVersion": {
                "privilege": "SetDefaultPolicyVersion",
                "description": "Grants permission to set the specified version of the specified policy as the policy's default (operative) version",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_SetDefaultPolicyVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "cert": {
        "resourceName": "cert",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:cert/${Certificate}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeCertificate": {
                "privilege": "DescribeCertificate",
                "description": "Grants permission to get information about the specified certificate",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetEffectivePolicies": {
                "privilege": "GetEffectivePolicies",
                "description": "Grants permission to get effective policies",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetEffectivePolicies.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "TestAuthorization": {
                "privilege": "TestAuthorization",
                "description": "Grants permission to test the policies evaluation for group policies",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TestAuthorization.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AcceptCertificateTransfer": {
                "privilege": "AcceptCertificateTransfer",
                "description": "Grants permission to accept a pending certificate transfer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AcceptCertificateTransfer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CancelCertificateTransfer": {
                "privilege": "CancelCertificateTransfer",
                "description": "Grants permission to cancel a pending transfer for the specified certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CancelCertificateTransfer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteCertificate": {
                "privilege": "DeleteCertificate",
                "description": "Grants permission to delete the specified certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RejectCertificateTransfer": {
                "privilege": "RejectCertificateTransfer",
                "description": "Grants permission to reject a pending certificate transfer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_RejectCertificateTransfer.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "TransferCertificate": {
                "privilege": "TransferCertificate",
                "description": "Grants permission to transfer the specified certificate to the specified AWS account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TransferCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateCertificate": {
                "privilege": "UpdateCertificate",
                "description": "Grants permission to update the status of the specified certificate. This operation is idempotent",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateCertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "AttachPolicy": {
                "privilege": "AttachPolicy",
                "description": "Grants permission to attach a policy to the specified target",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AttachPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "AttachPrincipalPolicy": {
                "privilege": "AttachPrincipalPolicy",
                "description": "Grants permission to attach the specified policy to the specified principal (certificate or other credential)",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AttachPrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DetachPolicy": {
                "privilege": "DetachPolicy",
                "description": "Grants permission to detach a policy from the specified target",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DetachPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DetachPrincipalPolicy": {
                "privilege": "DetachPrincipalPolicy",
                "description": "Grants permission to remove the specified policy from the specified certificate",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DetachPrincipalPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "tagPrivileges": {}
    },
    "cacert": {
        "resourceName": "cacert",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:cacert/${CACertificate}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeCACertificate": {
                "privilege": "DescribeCACertificate",
                "description": "Grants permission to describe a registered CA certificate",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeCACertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteCACertificate": {
                "privilege": "DeleteCACertificate",
                "description": "Grants permission to delete a registered CA certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteCACertificate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateCACertificate": {
                "privilege": "UpdateCACertificate",
                "description": "Grants permission to update a registered CA certificate",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateCACertificate.html",
                "privConditions": {},
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "stream": {
        "resourceName": "stream",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:stream/${StreamId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeStream": {
                "privilege": "DescribeStream",
                "description": "Grants permission to get information about the specified stream",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeStream.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateStream": {
                "privilege": "CreateStream",
                "description": "Grants permission to create a new AWS IoT stream",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateStream.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteStream": {
                "privilege": "DeleteStream",
                "description": "Grants permission to delete a specified stream",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteStream.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateStream": {
                "privilege": "UpdateStream",
                "description": "Grants permission to update the data for a stream",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateStream.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "otaupdate": {
        "resourceName": "otaupdate",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:otaupdate/${OtaUpdateId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetOTAUpdate": {
                "privilege": "GetOTAUpdate",
                "description": "Grants permission to get the information about the OTA update job",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetOTAUpdate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateOTAUpdate": {
                "privilege": "CreateOTAUpdate",
                "description": "Grants permission to create an OTA update job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateOTAUpdate.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteOTAUpdate": {
                "privilege": "DeleteOTAUpdate",
                "description": "Grants permission to delete an OTA update job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteOTAUpdate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "scheduledaudit": {
        "resourceName": "scheduledaudit",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:scheduledaudit/${ScheduleName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeScheduledAudit": {
                "privilege": "DescribeScheduledAudit",
                "description": "Grants permission to get information about a scheduled audit",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeScheduledAudit.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateScheduledAudit": {
                "privilege": "CreateScheduledAudit",
                "description": "Grants permission to create a scheduled audit that is run at a specified time interval",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateScheduledAudit.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteScheduledAudit": {
                "privilege": "DeleteScheduledAudit",
                "description": "Grants permission to delete a scheduled audit",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteScheduledAudit.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateScheduledAudit": {
                "privilege": "UpdateScheduledAudit",
                "description": "Grants permission to update a scheduled audit, including what checks are performed and how often the audit takes place",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateScheduledAudit.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "mitigationaction": {
        "resourceName": "mitigationaction",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:mitigationaction/${MitigationActionName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeMitigationAction": {
                "privilege": "DescribeMitigationAction",
                "description": "Grants permission to get information about a mitigation action",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeMitigationAction.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateMitigationAction": {
                "privilege": "CreateMitigationAction",
                "description": "Grants permission to define an action that can be applied to audit findings by using StartAuditMitigationActionsTask",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateMitigationAction.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteMitigationAction": {
                "privilege": "DeleteMitigationAction",
                "description": "Grants permission to delete a defined mitigation action from your AWS account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteMitigationAction.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateMitigationAction": {
                "privilege": "UpdateMitigationAction",
                "description": "Grants permission to update the definition for the specified mitigation action",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateMitigationAction.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "securityprofile": {
        "resourceName": "securityprofile",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:securityprofile/${SecurityProfileName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "GetBehaviorModelTrainingSummaries": {
                "privilege": "GetBehaviorModelTrainingSummaries",
                "description": "Grants permission to fetch a Device Defender's ML Detect Security Profile training model's status",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetBehaviorModelTrainingSummaries.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListActiveViolations": {
                "privilege": "ListActiveViolations",
                "description": "Grants permission to list the active violations for a given Device Defender security profile or Thing",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListActiveViolations.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "ListTargetsForSecurityProfile": {
                "privilege": "ListTargetsForSecurityProfile",
                "description": "Grants permission to list the targets associated with a given Device Defender security profile",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTargetsForSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListViolationEvents": {
                "privilege": "ListViolationEvents",
                "description": "Grants permission to list the Device Defender security profile violations discovered during the given time period",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListViolationEvents.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {
            "DescribeSecurityProfile": {
                "privilege": "DescribeSecurityProfile",
                "description": "Grants permission to get information about a Device Defender security profile",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AttachSecurityProfile": {
                "privilege": "AttachSecurityProfile",
                "description": "Grants permission to associate a Device Defender security profile with a thing group or with this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AttachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "CreateSecurityProfile": {
                "privilege": "CreateSecurityProfile",
                "description": "Grants permission to create a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateSecurityProfile.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteSecurityProfile": {
                "privilege": "DeleteSecurityProfile",
                "description": "Grants permission to delete a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DetachSecurityProfile": {
                "privilege": "DetachSecurityProfile",
                "description": "Grants permission to disassociate a Device Defender security profile from a thing group or from this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DetachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "StartDetectMitigationActionsTask": {
                "privilege": "StartDetectMitigationActionsTask",
                "description": "Grants permission to start a Device Defender ML Detect mitigation actions task",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_StartDetectMitigationActionsTask.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateSecurityProfile": {
                "privilege": "UpdateSecurityProfile",
                "description": "Grants permission to update a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "custommetric": {
        "resourceName": "custommetric",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:custommetric/${MetricName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListSecurityProfiles": {
                "privilege": "ListSecurityProfiles",
                "description": "Grants permission to list the Device Defender security profiles you have created",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfiles.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {
            "DescribeCustomMetric": {
                "privilege": "DescribeCustomMetric",
                "description": "Grants permission to describe a custom metric that is defined in your AWS account",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeCustomMetric.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AttachSecurityProfile": {
                "privilege": "AttachSecurityProfile",
                "description": "Grants permission to associate a Device Defender security profile with a thing group or with this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AttachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "CreateCustomMetric": {
                "privilege": "CreateCustomMetric",
                "description": "Grants permission to create a custom metric for device side metric reporting and monitoring",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateCustomMetric.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateSecurityProfile": {
                "privilege": "CreateSecurityProfile",
                "description": "Grants permission to create a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateSecurityProfile.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteCustomMetric": {
                "privilege": "DeleteCustomMetric",
                "description": "Grants permission to deletes the specified custom metric from your AWS account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteCustomMetric.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteSecurityProfile": {
                "privilege": "DeleteSecurityProfile",
                "description": "Grants permission to delete a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DetachSecurityProfile": {
                "privilege": "DetachSecurityProfile",
                "description": "Grants permission to disassociate a Device Defender security profile from a thing group or from this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DetachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateCustomMetric": {
                "privilege": "UpdateCustomMetric",
                "description": "Grants permission to update the specified custom metric",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateCustomMetric.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateSecurityProfile": {
                "privilege": "UpdateSecurityProfile",
                "description": "Grants permission to update a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "dimension": {
        "resourceName": "dimension",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:dimension/${DimensionName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListSecurityProfiles": {
                "privilege": "ListSecurityProfiles",
                "description": "Grants permission to list the Device Defender security profiles you have created",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfiles.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "readPrivileges": {
            "DescribeDimension": {
                "privilege": "DescribeDimension",
                "description": "Grants permission to get details about a dimension that is defined in your AWS account",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeDimension.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "AttachSecurityProfile": {
                "privilege": "AttachSecurityProfile",
                "description": "Grants permission to associate a Device Defender security profile with a thing group or with this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_AttachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "CreateDimension": {
                "privilege": "CreateDimension",
                "description": "Grants permission to define a dimension that can be used to to limit the scope of a metric used in a security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateDimension.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateSecurityProfile": {
                "privilege": "CreateSecurityProfile",
                "description": "Grants permission to create a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateSecurityProfile.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "DeleteDimension": {
                "privilege": "DeleteDimension",
                "description": "Grants permission to remove the specified dimension from your AWS account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteDimension.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteSecurityProfile": {
                "privilege": "DeleteSecurityProfile",
                "description": "Grants permission to delete a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "DetachSecurityProfile": {
                "privilege": "DetachSecurityProfile",
                "description": "Grants permission to disassociate a Device Defender security profile from a thing group or from this account",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DetachSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "UpdateDimension": {
                "privilege": "UpdateDimension",
                "description": "Grants permission to update the definition for a dimension",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateDimension.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateSecurityProfile": {
                "privilege": "UpdateSecurityProfile",
                "description": "Grants permission to update a Device Defender security profile",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateSecurityProfile.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "rule": {
        "resourceName": "rule",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:rule/${RuleName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetTopicRule": {
                "privilege": "GetTopicRule",
                "description": "Grants permission to get information about the specified rule",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetTopicRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateTopicRule": {
                "privilege": "CreateTopicRule",
                "description": "Grants permission to create a rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateTopicRule.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteTopicRule": {
                "privilege": "DeleteTopicRule",
                "description": "Grants permission to delete the specified rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteTopicRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DisableTopicRule": {
                "privilege": "DisableTopicRule",
                "description": "Grants permission to disable the specified rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DisableTopicRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "EnableTopicRule": {
                "privilege": "EnableTopicRule",
                "description": "Grants permission to enable the specified rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_EnableTopicRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ReplaceTopicRule": {
                "privilege": "ReplaceTopicRule",
                "description": "Grants permission to replace the specified rule",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ReplaceTopicRule.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "destination": {
        "resourceName": "destination",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:destination/${DestinationType}/${Uuid}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetTopicRuleDestination": {
                "privilege": "GetTopicRuleDestination",
                "description": "Grants permission to get a TopicRuleDestination",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_GetTopicRuleDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "ConfirmTopicRuleDestination": {
                "privilege": "ConfirmTopicRuleDestination",
                "description": "Grants permission to confirm a http url TopicRuleDestinationDestination",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ConfirmTopicRuleDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateTopicRuleDestination": {
                "privilege": "CreateTopicRuleDestination",
                "description": "Grants permission to create a TopicRuleDestination",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateTopicRuleDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteTopicRuleDestination": {
                "privilege": "DeleteTopicRuleDestination",
                "description": "Grants permission to delete a TopicRuleDestination",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteTopicRuleDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateTopicRuleDestination": {
                "privilege": "UpdateTopicRuleDestination",
                "description": "Grants permission to update a TopicRuleDestination",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateTopicRuleDestination.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "provisioningtemplate": {
        "resourceName": "provisioningtemplate",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:provisioningtemplate/${ProvisioningTemplate}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {
            "ListProvisioningTemplateVersions": {
                "privilege": "ListProvisioningTemplateVersions",
                "description": "Grants permission to get a list of fleet provisioning template versions",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListProvisioningTemplateVersions.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "DescribeProvisioningTemplate": {
                "privilege": "DescribeProvisioningTemplate",
                "description": "Grants permission to get information about a fleet provisioning template",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeProvisioningTemplate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DescribeProvisioningTemplateVersion": {
                "privilege": "DescribeProvisioningTemplateVersion",
                "description": "Grants permission to get information about a fleet provisioning template version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeProvisioningTemplateVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateProvisioningClaim": {
                "privilege": "CreateProvisioningClaim",
                "description": "Grants permission to create a provisioning claim",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningClaim.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateProvisioningTemplate": {
                "privilege": "CreateProvisioningTemplate",
                "description": "Grants permission to create a fleet provisioning template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningTemplate.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            },
            "CreateProvisioningTemplateVersion": {
                "privilege": "CreateProvisioningTemplateVersion",
                "description": "Grants permission to create a new version of a fleet provisioning template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningTemplateVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteProvisioningTemplate": {
                "privilege": "DeleteProvisioningTemplate",
                "description": "Grants permission to delete a fleet provisioning template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteProvisioningTemplate.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteProvisioningTemplateVersion": {
                "privilege": "DeleteProvisioningTemplateVersion",
                "description": "Grants permission to delete a fleet provisioning template version",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteProvisioningTemplateVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateProvisioningTemplate": {
                "privilege": "UpdateProvisioningTemplate",
                "description": "Grants permission to update a fleet provisioning template",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateProvisioningTemplate.html",
                "privConditions": {},
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "domainconfiguration": {
        "resourceName": "domainconfiguration",
        "service": "iot",
        "resourceArn": "arn:${Partition}:iot:${Region}:${Account}:domainconfiguration/${DomainConfigurationName}/${Id}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by a tag key component of a tag associated to the IoT resource in the request",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeDomainConfiguration": {
                "privilege": "DescribeDomainConfiguration",
                "description": "Grants permission to get information about the domain configuration",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeDomainConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTagsForResource": {
                "privilege": "ListTagsForResource",
                "description": "Grants permission to list all tags for a given resource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_ListTagsForResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "CreateDomainConfiguration": {
                "privilege": "CreateDomainConfiguration",
                "description": "Grants permission to create a domain configuration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_CreateDomainConfiguration.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    },
                    "iot:DomainName": {
                        "condition": "iot:DomainName",
                        "description": "Filters access by based on the domain name of an IoT DomainConfiguration",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteDomainConfiguration": {
                "privilege": "DeleteDomainConfiguration",
                "description": "Grants permission to delete a domain configuration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_DeleteDomainConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateDomainConfiguration": {
                "privilege": "UpdateDomainConfiguration",
                "description": "Grants permission to update a domain configuration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateDomainConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to tag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a tag key that is present in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to untag a specified resource",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/iot/latest/apireference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by a list of tag keys associated to the IoT resource in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    }
}
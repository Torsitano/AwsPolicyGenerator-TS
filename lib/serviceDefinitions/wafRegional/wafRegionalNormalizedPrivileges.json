{
    "associateWebACL": {
        "privilege": "AssociateWebACL",
        "description": "Grants permission to associate a web ACL with a resource",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_AssociateWebACL.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "loadbalancer/app/": {
                "resourceName": "loadbalancer/app/",
                "resourceArn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
                "required": true,
                "resourceConditions": {}
            },
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createByteMatchSet": {
        "privilege": "CreateByteMatchSet",
        "description": "Grants permission to create a ByteMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateByteMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "bytematchset": {
                "resourceName": "bytematchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createGeoMatchSet": {
        "privilege": "CreateGeoMatchSet",
        "description": "Grants permission to create a GeoMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateGeoMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "geomatchset": {
                "resourceName": "geomatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createIPSet": {
        "privilege": "CreateIPSet",
        "description": "Grants permission to create an IPSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateIPSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ipset": {
                "resourceName": "ipset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createRateBasedRule": {
        "privilege": "CreateRateBasedRule",
        "description": "Grants permission to create a RateBasedRule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateRateBasedRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createRegexMatchSet": {
        "privilege": "CreateRegexMatchSet",
        "description": "Grants permission to create a RegexMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateRegexMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexmatchset": {
                "resourceName": "regexmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createRegexPatternSet": {
        "privilege": "CreateRegexPatternSet",
        "description": "Grants permission to create a RegexPatternSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateRegexPatternSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexpatternset": {
                "resourceName": "regexpatternset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createRule": {
        "privilege": "CreateRule",
        "description": "Grants permission to create a Rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createRuleGroup": {
        "privilege": "CreateRuleGroup",
        "description": "Grants permission to create a RuleGroup",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateRuleGroup.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSizeConstraintSet": {
        "privilege": "CreateSizeConstraintSet",
        "description": "Grants permission to create a SizeConstraintSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateSizeConstraintSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sizeconstraintset": {
                "resourceName": "sizeconstraintset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createSqlInjectionMatchSet": {
        "privilege": "CreateSqlInjectionMatchSet",
        "description": "Grants permission to create an SqlInjectionMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateSqlInjectionMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sqlinjectionmatchset": {
                "resourceName": "sqlinjectionmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createWebACL": {
        "privilege": "CreateWebACL",
        "description": "Grants permission to create a WebACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateWebACL.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createWebACLMigrationStack": {
        "privilege": "CreateWebACLMigrationStack",
        "description": "Grants permission to create a CloudFormation web ACL template in an S3 bucket for the purposes of migrating the web ACL from AWS WAF Classic to AWS WAF v2",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateWebACLMigrationStack.html",
        "service": "wafRegional",
        "dependentActions": [
            "s3:PutObject"
        ],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createXssMatchSet": {
        "privilege": "CreateXssMatchSet",
        "description": "Grants permission to create an XssMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_CreateXssMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "xssmatchset": {
                "resourceName": "xssmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteByteMatchSet": {
        "privilege": "DeleteByteMatchSet",
        "description": "Grants permission to delete a ByteMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteByteMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "bytematchset": {
                "resourceName": "bytematchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteGeoMatchSet": {
        "privilege": "DeleteGeoMatchSet",
        "description": "Grants permission to delete a GeoMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteGeoMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "geomatchset": {
                "resourceName": "geomatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteIPSet": {
        "privilege": "DeleteIPSet",
        "description": "Grants permission to delete an IPSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteIPSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ipset": {
                "resourceName": "ipset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteLoggingConfiguration": {
        "privilege": "DeleteLoggingConfiguration",
        "description": "Grants permission to delete a LoggingConfiguration from a web ACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteLoggingConfiguration.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deletePermissionPolicy": {
        "privilege": "DeletePermissionPolicy",
        "description": "Grants permission to delete an IAM policy from a rule group",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeletePermissionPolicy.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteRateBasedRule": {
        "privilege": "DeleteRateBasedRule",
        "description": "Grants permission to delete a RateBasedRule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteRateBasedRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteRegexMatchSet": {
        "privilege": "DeleteRegexMatchSet",
        "description": "Grants permission to delete a RegexMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteRegexMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexmatchset": {
                "resourceName": "regexmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteRegexPatternSet": {
        "privilege": "DeleteRegexPatternSet",
        "description": "Grants permission to delete a RegexPatternSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteRegexPatternSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexpatternset": {
                "resourceName": "regexpatternset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteRule": {
        "privilege": "DeleteRule",
        "description": "Grants permission to delete a Rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteRuleGroup": {
        "privilege": "DeleteRuleGroup",
        "description": "Grants permission to delete a RuleGroup",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteRuleGroup.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteSizeConstraintSet": {
        "privilege": "DeleteSizeConstraintSet",
        "description": "Grants permission to delete a SizeConstraintSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteSizeConstraintSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sizeconstraintset": {
                "resourceName": "sizeconstraintset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteSqlInjectionMatchSet": {
        "privilege": "DeleteSqlInjectionMatchSet",
        "description": "Grants permission to delete an SqlInjectionMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteSqlInjectionMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sqlinjectionmatchset": {
                "resourceName": "sqlinjectionmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteWebACL": {
        "privilege": "DeleteWebACL",
        "description": "Grants permission to delete a WebACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteWebACL.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteXssMatchSet": {
        "privilege": "DeleteXssMatchSet",
        "description": "Grants permission to delete an XssMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DeleteXssMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "xssmatchset": {
                "resourceName": "xssmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "disassociateWebACL": {
        "privilege": "DisassociateWebACL",
        "description": "Grants permission to delete an association between a web ACL and a resource",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_DisassociateWebACL.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "loadbalancer/app/": {
                "resourceName": "loadbalancer/app/",
                "resourceArn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getByteMatchSet": {
        "privilege": "GetByteMatchSet",
        "description": "Grants permission to retrieve a ByteMatchSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetByteMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "bytematchset": {
                "resourceName": "bytematchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getChangeToken": {
        "privilege": "GetChangeToken",
        "description": "Grants permission to retrieve a change token to use in create, update, and delete requests",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetChangeToken.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "getChangeTokenStatus": {
        "privilege": "GetChangeTokenStatus",
        "description": "Grants permission to retrieve the status of a change token",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetChangeTokenStatus.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "getGeoMatchSet": {
        "privilege": "GetGeoMatchSet",
        "description": "Grants permission to retrieve a GeoMatchSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetGeoMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "geomatchset": {
                "resourceName": "geomatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getIPSet": {
        "privilege": "GetIPSet",
        "description": "Grants permission to retrieve an IPSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetIPSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ipset": {
                "resourceName": "ipset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getLoggingConfiguration": {
        "privilege": "GetLoggingConfiguration",
        "description": "Grants permission to retrieve a LoggingConfiguration",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetLoggingConfiguration.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getPermissionPolicy": {
        "privilege": "GetPermissionPolicy",
        "description": "Grants permission to retrieve an IAM policy attached to a RuleGroup",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetPermissionPolicy.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getRateBasedRule": {
        "privilege": "GetRateBasedRule",
        "description": "Grants permission to retrieve a RateBasedRule",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetRateBasedRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getRateBasedRuleManagedKeys": {
        "privilege": "GetRateBasedRuleManagedKeys",
        "description": "Grants permission to retrieve the array of IP addresses that are currently being blocked by a RateBasedRule",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetRateBasedRuleManagedKeys.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getRegexMatchSet": {
        "privilege": "GetRegexMatchSet",
        "description": "Grants permission to retrieve a RegexMatchSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetRegexMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexmatchset": {
                "resourceName": "regexmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getRegexPatternSet": {
        "privilege": "GetRegexPatternSet",
        "description": "Grants permission to retrieve a RegexPatternSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetRegexPatternSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexpatternset": {
                "resourceName": "regexpatternset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getRule": {
        "privilege": "GetRule",
        "description": "Grants permission to retrieve a Rule",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getRuleGroup": {
        "privilege": "GetRuleGroup",
        "description": "Grants permission to retrieve a RuleGroup",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetRuleGroup.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getSampledRequests": {
        "privilege": "GetSampledRequests",
        "description": "Grants permission to retrieve detailed information for a sample set of web requests",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetSampledRequests.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getSizeConstraintSet": {
        "privilege": "GetSizeConstraintSet",
        "description": "Grants permission to retrieve a SizeConstraintSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetSizeConstraintSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sizeconstraintset": {
                "resourceName": "sizeconstraintset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getSqlInjectionMatchSet": {
        "privilege": "GetSqlInjectionMatchSet",
        "description": "Grants permission to retrieve an SqlInjectionMatchSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetSqlInjectionMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sqlinjectionmatchset": {
                "resourceName": "sqlinjectionmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getWebACL": {
        "privilege": "GetWebACL",
        "description": "Grants permission to retrieve a WebACL",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetWebACL.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getWebACLForResource": {
        "privilege": "GetWebACLForResource",
        "description": "Grants permission to retrieve a WebACL that's associated with a specified resource",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetWebACLForResource.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "loadbalancer/app/": {
                "resourceName": "loadbalancer/app/",
                "resourceArn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getXssMatchSet": {
        "privilege": "GetXssMatchSet",
        "description": "Grants permission to retrieve an XssMatchSet",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_GetXssMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "xssmatchset": {
                "resourceName": "xssmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listActivatedRulesInRuleGroup": {
        "privilege": "ListActivatedRulesInRuleGroup",
        "description": "Grants permission to retrieve an array of ActivatedRule objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListActivatedRulesInRuleGroup.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listByteMatchSets": {
        "privilege": "ListByteMatchSets",
        "description": "Grants permission to retrieve an array of ByteMatchSetSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListByteMatchSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listGeoMatchSets": {
        "privilege": "ListGeoMatchSets",
        "description": "Grants permission to retrieve an array of GeoMatchSetSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListGeoMatchSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listIPSets": {
        "privilege": "ListIPSets",
        "description": "Grants permission to retrieve an array of IPSetSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListIPSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listLoggingConfigurations": {
        "privilege": "ListLoggingConfigurations",
        "description": "Grants permission to retrieve an array of LoggingConfiguration objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListLoggingConfigurations.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listRateBasedRules": {
        "privilege": "ListRateBasedRules",
        "description": "Grants permission to retrieve an array of RuleSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListRateBasedRules.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listRegexMatchSets": {
        "privilege": "ListRegexMatchSets",
        "description": "Grants permission to retrieve an array of RegexMatchSetSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListRegexMatchSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listRegexPatternSets": {
        "privilege": "ListRegexPatternSets",
        "description": "Grants permission to retrieve an array of RegexPatternSetSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListRegexPatternSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listResourcesForWebACL": {
        "privilege": "ListResourcesForWebACL",
        "description": "Grants permission to retrieve an array of resources associated with a specified WebACL",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListResourcesForWebACL.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listRuleGroups": {
        "privilege": "ListRuleGroups",
        "description": "Grants permission to retrieve an array of RuleGroup objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListRuleGroups.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listRules": {
        "privilege": "ListRules",
        "description": "Grants permission to retrieve an array of RuleSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListRules.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listSizeConstraintSets": {
        "privilege": "ListSizeConstraintSets",
        "description": "Grants permission to retrieve an array of SizeConstraintSetSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListSizeConstraintSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listSqlInjectionMatchSets": {
        "privilege": "ListSqlInjectionMatchSets",
        "description": "Grants permission to retrieve an array of SqlInjectionMatchSet objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListSqlInjectionMatchSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listSubscribedRuleGroups": {
        "privilege": "ListSubscribedRuleGroups",
        "description": "Grants permission to retrieve an array of RuleGroup objects that you are subscribed to",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListSubscribedRuleGroups.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listTagsForResource": {
        "privilege": "ListTagsForResource",
        "description": "Grants permission to lists the Tags for a resource",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListTagsForResource.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listWebACLs": {
        "privilege": "ListWebACLs",
        "description": "Grants permission to retrieve an array of WebACLSummary objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListWebACLs.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listXssMatchSets": {
        "privilege": "ListXssMatchSets",
        "description": "Grants permission to retrieve an array of XssMatchSet objects",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_ListXssMatchSets.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "putLoggingConfiguration": {
        "privilege": "PutLoggingConfiguration",
        "description": "Grants permission to associates a LoggingConfiguration with a web ACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_PutLoggingConfiguration.html",
        "service": "wafRegional",
        "dependentActions": [
            "iam:CreateServiceLinkedRole"
        ],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putPermissionPolicy": {
        "privilege": "PutPermissionPolicy",
        "description": "Grants permission to attach an IAM policy to a specified rule group, to support rule group sharing between accounts",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_PutPermissionPolicy.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "tagResource": {
        "privilege": "TagResource",
        "description": "Grants permission to add a Tag to a resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_TagResource.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "untagResource": {
        "privilege": "UntagResource",
        "description": "Grants permission to remove a Tag from a resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UntagResource.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            },
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateByteMatchSet": {
        "privilege": "UpdateByteMatchSet",
        "description": "Grants permission to insert or delete ByteMatchTuple objects in a ByteMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateByteMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "bytematchset": {
                "resourceName": "bytematchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateGeoMatchSet": {
        "privilege": "UpdateGeoMatchSet",
        "description": "Grants permission to insert or delete GeoMatchConstraint objects in a GeoMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateGeoMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "geomatchset": {
                "resourceName": "geomatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateIPSet": {
        "privilege": "UpdateIPSet",
        "description": "Grants permission to insert or delete IPSetDescriptor objects in an IPSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateIPSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ipset": {
                "resourceName": "ipset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateRateBasedRule": {
        "privilege": "UpdateRateBasedRule",
        "description": "Grants permission to insert or delete predicate objects in a rate based rule and update the RateLimit in the rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateRateBasedRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "ratebasedrule": {
                "resourceName": "ratebasedrule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateRegexMatchSet": {
        "privilege": "UpdateRegexMatchSet",
        "description": "Grants permission to insert or delete RegexMatchTuple objects in a RegexMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateRegexMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexmatchset": {
                "resourceName": "regexmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateRegexPatternSet": {
        "privilege": "UpdateRegexPatternSet",
        "description": "Grants permission to insert or delete RegexPatternStrings in a RegexPatternSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateRegexPatternSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "regexpatternset": {
                "resourceName": "regexpatternset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateRule": {
        "privilege": "UpdateRule",
        "description": "Grants permission to insert or delete predicate objects in a Rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateRule.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rule": {
                "resourceName": "rule",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateRuleGroup": {
        "privilege": "UpdateRuleGroup",
        "description": "Grants permission to insert or delete ActivatedRule objects in a RuleGroup",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateRuleGroup.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "rulegroup": {
                "resourceName": "rulegroup",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateSizeConstraintSet": {
        "privilege": "UpdateSizeConstraintSet",
        "description": "Grants permission to insert or delete SizeConstraint objects in a SizeConstraintSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateSizeConstraintSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sizeconstraintset": {
                "resourceName": "sizeconstraintset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateSqlInjectionMatchSet": {
        "privilege": "UpdateSqlInjectionMatchSet",
        "description": "Grants permission to insert or delete SqlInjectionMatchTuple objects in an SqlInjectionMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateSqlInjectionMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "sqlinjectionmatchset": {
                "resourceName": "sqlinjectionmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateWebACL": {
        "privilege": "UpdateWebACL",
        "description": "Grants permission to insert or delete ActivatedRule objects in a WebACL",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateWebACL.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "webacl": {
                "resourceName": "webacl",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value assoicated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateXssMatchSet": {
        "privilege": "UpdateXssMatchSet",
        "description": "Grants permission to insert or delete XssMatchTuple objects in an XssMatchSet",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_UpdateXssMatchSet.html",
        "service": "wafRegional",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "xssmatchset": {
                "resourceName": "xssmatchset",
                "resourceArn": "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/${Id}",
                "required": true,
                "resourceConditions": {}
            }
        }
    }
}
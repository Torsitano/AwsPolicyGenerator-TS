{
    "cancelRotateSecret": {
        "privilege": "CancelRotateSecret",
        "description": "Grants permission to cancel an in-progress secret rotation",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CancelRotateSecret.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "createSecret": {
        "privilege": "CreateSecret",
        "description": "Grants permission to create a secret that stores encrypted data that can be queried and rotated",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:Name": {
                "condition": "secretsmanager:Name",
                "description": "Filters access by the friendly name of the secret in the request",
                "type": "String"
            },
            "secretsmanager:Description": {
                "condition": "secretsmanager:Description",
                "description": "Filters access by the description text in the request",
                "type": "String"
            },
            "secretsmanager:KmsKeyId": {
                "condition": "secretsmanager:KmsKeyId",
                "description": "Filters access by the ARN of the KMS key in the request",
                "type": "String"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                "type": "String"
            },
            "secretsmanager:AddReplicaRegions": {
                "condition": "secretsmanager:AddReplicaRegions",
                "description": "Filters access by the list of Regions in which to replicate the secret",
                "type": "ArrayOfString"
            },
            "secretsmanager:ForceOverwriteReplicaSecret": {
                "condition": "secretsmanager:ForceOverwriteReplicaSecret",
                "description": "Filters access by whether to overwrite a secret with the same name in the destination Region",
                "type": "Bool"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteResourcePolicy": {
        "privilege": "DeleteResourcePolicy",
        "description": "Grants permission to delete the resource policy attached to a secret",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteResourcePolicy.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "deleteSecret": {
        "privilege": "DeleteSecret",
        "description": "Grants permission to delete a secret",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "secretsmanager:RecoveryWindowInDays": {
                "condition": "secretsmanager:RecoveryWindowInDays",
                "description": "Filters access by the number of days that Secrets Manager waits before it can delete the secret",
                "type": "Numeric"
            },
            "secretsmanager:ForceDeleteWithoutRecovery": {
                "condition": "secretsmanager:ForceDeleteWithoutRecovery",
                "description": "Filters access by whether the secret is to be deleted immediately without any recovery window",
                "type": "Bool"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "describeSecret": {
        "privilege": "DescribeSecret",
        "description": "Grants permission to retrieve the metadata about a secret, but not the encrypted data",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DescribeSecret.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "getRandomPassword": {
        "privilege": "GetRandomPassword",
        "description": "Grants permission to generate a random string for use in password creation",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetRandomPassword.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "getResourcePolicy": {
        "privilege": "GetResourcePolicy",
        "description": "Grants permission to get the resource policy attached to a secret",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetResourcePolicy.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "getSecretValue": {
        "privilege": "GetSecretValue",
        "description": "Grants permission to retrieve and decrypt the encrypted data",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:VersionId": {
                "condition": "secretsmanager:VersionId",
                "description": "Filters access by the unique identifier of the version of the secret in the request",
                "type": "String"
            },
            "secretsmanager:VersionStage": {
                "condition": "secretsmanager:VersionStage",
                "description": "Filters access by the list of version stages in the request",
                "type": "String"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "listSecretVersionIds": {
        "privilege": "ListSecretVersionIds",
        "description": "Grants permission to list the available versions of a secret",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_ListSecretVersionIds.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "listSecrets": {
        "privilege": "ListSecrets",
        "description": "Grants permission to list the available secrets",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_ListSecrets.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "putResourcePolicy": {
        "privilege": "PutResourcePolicy",
        "description": "Grants permission to attach a resource policy to a secret",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_PutResourcePolicy.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:BlockPublicPolicy": {
                "condition": "secretsmanager:BlockPublicPolicy",
                "description": "Filters access by whether the resource policy blocks broad AWS account access",
                "type": "Bool"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "putSecretValue": {
        "privilege": "PutSecretValue",
        "description": "Grants permission to create a new version of the secret with new encrypted data",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_PutSecretValue.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "removeRegionsFromReplication": {
        "privilege": "RemoveRegionsFromReplication",
        "description": "Grants permission to remove regions from replication",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_RemoveRegionsFromReplication.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "replicateSecretToRegions": {
        "privilege": "ReplicateSecretToRegions",
        "description": "Grants permission to convert an existing secret to a multi-Region secret and begin replicating the secret to a list of new regions",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_ReplicateSecretToRegions.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            },
            "secretsmanager:AddReplicaRegions": {
                "condition": "secretsmanager:AddReplicaRegions",
                "description": "Filters access by the list of Regions in which to replicate the secret",
                "type": "ArrayOfString"
            },
            "secretsmanager:ForceOverwriteReplicaSecret": {
                "condition": "secretsmanager:ForceOverwriteReplicaSecret",
                "description": "Filters access by whether to overwrite a secret with the same name in the destination Region",
                "type": "Bool"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "restoreSecret": {
        "privilege": "RestoreSecret",
        "description": "Grants permission to cancel deletion of a secret",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_RestoreSecret.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "rotateSecret": {
        "privilege": "RotateSecret",
        "description": "Grants permission to start rotation of a secret",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_RotateSecret.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:RotationLambdaARN": {
                "condition": "secretsmanager:RotationLambdaARN",
                "description": "Filters access by the ARN of the rotation Lambda function in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            },
            "secretsmanager:ModifyRotationRules": {
                "condition": "secretsmanager:ModifyRotationRules",
                "description": "Filters access by whether the rotation rules of the secret are to be modified",
                "type": "Bool"
            },
            "secretsmanager:RotateImmediately": {
                "condition": "secretsmanager:RotateImmediately",
                "description": "Filters access by whether the secret is to be rotated immediately",
                "type": "Bool"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "stopReplicationToReplica": {
        "privilege": "StopReplicationToReplica",
        "description": "Grants permission to remove the secret from replication and promote the secret to a regional secret in the replica Region",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_StopReplicationToReplica.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "tagResource": {
        "privilege": "TagResource",
        "description": "Grants permission to add tags to a secret",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_TagResource.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                "type": "String"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "untagResource": {
        "privilege": "UntagResource",
        "description": "Grants permission to remove tags from a secret",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_UntagResource.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                "type": "String"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "updateSecret": {
        "privilege": "UpdateSecret",
        "description": "Grants permission to update a secret with new metadata or with a new version of the encrypted data",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_UpdateSecret.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:Description": {
                "condition": "secretsmanager:Description",
                "description": "Filters access by the description text in the request",
                "type": "String"
            },
            "secretsmanager:KmsKeyId": {
                "condition": "secretsmanager:KmsKeyId",
                "description": "Filters access by the ARN of the KMS key in the request",
                "type": "String"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "updateSecretVersionStage": {
        "privilege": "UpdateSecretVersionStage",
        "description": "Grants permission to move a stage from one secret to another",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_UpdateSecretVersionStage.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:VersionStage": {
                "condition": "secretsmanager:VersionStage",
                "description": "Filters access by the list of version stages in the request",
                "type": "String"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    },
    "validateResourcePolicy": {
        "privilege": "ValidateResourcePolicy",
        "description": "Grants permission to validate a resource policy before attaching policy",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_ValidateResourcePolicy.html",
        "service": "secretsmanager",
        "dependentActions": [],
        "privConditions": {
            "secretsmanager:SecretId": {
                "condition": "secretsmanager:SecretId",
                "description": "Filters access by the SecretID value in the request",
                "type": "ARN"
            },
            "secretsmanager:resource/AllowRotationLambdaArn": {
                "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                "type": "ARN"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            },
            "secretsmanager:SecretPrimaryRegion": {
                "condition": "secretsmanager:SecretPrimaryRegion",
                "description": "Filters access by primary region in which the secret is created",
                "type": "String"
            }
        },
        "resources": {
            "secret": {
                "resourceName": "Secret",
                "resourceArn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Secrets Manager service",
                        "type": "String"
                    },
                    "secretsmanager:resource/AllowRotationLambdaArn": {
                        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
                        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret",
                        "type": "ARN"
                    }
                }
            }
        }
    }
}
{
    "addTagsToResource": {
        "privilege": "AddTagsToResource",
        "description": "Grants permission to add tags to an ElastiCache resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_AddTagsToResource.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "reservedInstance": {
                "resourceName": "reserved-instance",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:reserved-instance:${ReservedCacheNodeId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "authorizeCacheSecurityGroupIngress": {
        "privilege": "AuthorizeCacheSecurityGroupIngress",
        "description": "Grants permission to authorize an EC2 security group on a ElastiCache security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_AuthorizeCacheSecurityGroupIngress.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:AuthorizeSecurityGroupIngress"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "batchApplyUpdateAction": {
        "privilege": "BatchApplyUpdateAction",
        "description": "Grants permission to apply ElastiCache service updates to sets of clusters and replication groups",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_BatchApplyUpdateAction.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs",
            "s3:GetObject"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "batchStopUpdateAction": {
        "privilege": "BatchStopUpdateAction",
        "description": "Grants permission to stop ElastiCache service updates from being executed on a set of clusters",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_BatchStopUpdateAction.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "completeMigration": {
        "privilege": "CompleteMigration",
        "description": "Grants permission to complete an online migration of data from hosted Redis on Amazon EC2 to ElastiCache",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CompleteMigration.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "copySnapshot": {
        "privilege": "CopySnapshot",
        "description": "Grants permission to make a copy of an existing snapshot",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CopySnapshot.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource",
            "s3:DeleteObject",
            "s3:GetBucketAcl",
            "s3:PutObject"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "elasticache:KmsKeyId": {
                "condition": "elasticache:KmsKeyId",
                "description": "Filters access by the KmsKeyId parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createCacheCluster": {
        "privilege": "CreateCacheCluster",
        "description": "Grants permission to create a cache cluster",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheCluster.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs",
            "elasticache:AddTagsToResource",
            "s3:GetObject"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "elasticache:CacheNodeType": {
                "condition": "elasticache:CacheNodeType",
                "description": "Filters access by the cacheNodeType parameter present in the request. This key can be used to restrict which cache node types can be used on cluster creation or scaling operations",
                "type": "String"
            },
            "elasticache:EngineVersion": {
                "condition": "elasticache:EngineVersion",
                "description": "Filters access by the engineVersion parameter present in creation or cluster modification requests",
                "type": "String"
            },
            "elasticache:EngineType": {
                "condition": "elasticache:EngineType",
                "description": "Filters access by the engine type present in creation requests. For replication group creations, default engine ‘redis’ is used as key if parameter is not present",
                "type": "String"
            },
            "elasticache:MultiAZEnabled": {
                "condition": "elasticache:MultiAZEnabled",
                "description": "Filters access by the AZMode parameter, MultiAZEnabled parameter or the number of availability zones that the cluster or replication group can be placed in",
                "type": "Bool"
            },
            "elasticache:AuthTokenEnabled": {
                "condition": "elasticache:AuthTokenEnabled",
                "description": "Filters access by the presence of non empty AuthToken parameter in the request",
                "type": "Bool"
            },
            "elasticache:SnapshotRetentionLimit": {
                "condition": "elasticache:SnapshotRetentionLimit",
                "description": "Filters access by the SnapshotRetentionLimit parameter in the request",
                "type": "Numeric"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createCacheParameterGroup": {
        "privilege": "CreateCacheParameterGroup",
        "description": "Grants permission to create a parameter group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheParameterGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource"
        ],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createCacheSecurityGroup": {
        "privilege": "CreateCacheSecurityGroup",
        "description": "Grants permission to create a cache security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSecurityGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource"
        ],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createCacheSubnetGroup": {
        "privilege": "CreateCacheSubnetGroup",
        "description": "Grants permission to create a cache subnet group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource"
        ],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createGlobalReplicationGroup": {
        "privilege": "CreateGlobalReplicationGroup",
        "description": "Grants permission to create a global replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createReplicationGroup": {
        "privilege": "CreateReplicationGroup",
        "description": "Grants permission to create a replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs",
            "elasticache:AddTagsToResource",
            "s3:GetObject"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "elasticache:NumNodeGroups": {
                "condition": "elasticache:NumNodeGroups",
                "description": "Filters access by the NumNodeGroups or NodeGroupCount parameter specified in the request. This key can be used to restrict the number of node groups (shards) clusters can have after creation or scaling operations",
                "type": "Numeric"
            },
            "elasticache:CacheNodeType": {
                "condition": "elasticache:CacheNodeType",
                "description": "Filters access by the cacheNodeType parameter present in the request. This key can be used to restrict which cache node types can be used on cluster creation or scaling operations",
                "type": "String"
            },
            "elasticache:ReplicasPerNodeGroup": {
                "condition": "elasticache:ReplicasPerNodeGroup",
                "description": "Filters access by the number of replicas per node group (shards) specified in creations or scaling requests",
                "type": "Numeric"
            },
            "elasticache:EngineVersion": {
                "condition": "elasticache:EngineVersion",
                "description": "Filters access by the engineVersion parameter present in creation or cluster modification requests",
                "type": "String"
            },
            "elasticache:EngineType": {
                "condition": "elasticache:EngineType",
                "description": "Filters access by the engine type present in creation requests. For replication group creations, default engine ‘redis’ is used as key if parameter is not present",
                "type": "String"
            },
            "elasticache:AtRestEncryptionEnabled": {
                "condition": "elasticache:AtRestEncryptionEnabled",
                "description": "Filters access by the AtRestEncryptionEnabled parameter present in the request or default false value if parameter is not present",
                "type": "Bool"
            },
            "elasticache:TransitEncryptionEnabled": {
                "condition": "elasticache:TransitEncryptionEnabled",
                "description": "Filters access by the TransitEncryptionEnabled parameter present in the request or default false value if parameter is not present",
                "type": "Bool"
            },
            "elasticache:AutomaticFailoverEnabled": {
                "condition": "elasticache:AutomaticFailoverEnabled",
                "description": "Filters access by the AutomaticFailoverEnabled parameter in the request",
                "type": "Bool"
            },
            "elasticache:MultiAZEnabled": {
                "condition": "elasticache:MultiAZEnabled",
                "description": "Filters access by the AZMode parameter, MultiAZEnabled parameter or the number of availability zones that the cluster or replication group can be placed in",
                "type": "Bool"
            },
            "elasticache:ClusterModeEnabled": {
                "condition": "elasticache:ClusterModeEnabled",
                "description": "Filters access by the cluster mode parameter present in the request. Default value for single node group (shard) creations is false",
                "type": "Bool"
            },
            "elasticache:AuthTokenEnabled": {
                "condition": "elasticache:AuthTokenEnabled",
                "description": "Filters access by the presence of non empty AuthToken parameter in the request",
                "type": "Bool"
            },
            "elasticache:SnapshotRetentionLimit": {
                "condition": "elasticache:SnapshotRetentionLimit",
                "description": "Filters access by the SnapshotRetentionLimit parameter in the request",
                "type": "Numeric"
            },
            "elasticache:KmsKeyId": {
                "condition": "elasticache:KmsKeyId",
                "description": "Filters access by the KmsKeyId parameter in the request",
                "type": "String"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": false,
                "resourceConditions": {}
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createSnapshot": {
        "privilege": "CreateSnapshot",
        "description": "Grants permission to create a copy of an entire Redis cluster at a specific moment in time",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateSnapshot.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource",
            "s3:DeleteObject",
            "s3:GetBucketAcl",
            "s3:PutObject"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "elasticache:KmsKeyId": {
                "condition": "elasticache:KmsKeyId",
                "description": "Filters access by the KmsKeyId parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createUser": {
        "privilege": "CreateUser",
        "description": "Grants permission to create a Redis user for Redis engine version 6.x and onwards",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateUser.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource"
        ],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createUserGroup": {
        "privilege": "CreateUserGroup",
        "description": "Grants permission to create a Redis user group for Redis engine version 6.x and onwards",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateUserGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource"
        ],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "decreaseNodeGroupsInGlobalReplicationGroup": {
        "privilege": "DecreaseNodeGroupsInGlobalReplicationGroup",
        "description": "Grants permission to decrease the number of node groups in global replication groups",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DecreaseNodeGroupsInGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "elasticache:NumNodeGroups": {
                "condition": "elasticache:NumNodeGroups",
                "description": "Filters access by the NumNodeGroups or NodeGroupCount parameter specified in the request. This key can be used to restrict the number of node groups (shards) clusters can have after creation or scaling operations",
                "type": "Numeric"
            }
        },
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "decreaseReplicaCount": {
        "privilege": "DecreaseReplicaCount",
        "description": "Grants permission to decrease the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DecreaseReplicaCount.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:ReplicasPerNodeGroup": {
                "condition": "elasticache:ReplicasPerNodeGroup",
                "description": "Filters access by the number of replicas per node group (shards) specified in creations or scaling requests",
                "type": "Numeric"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteCacheCluster": {
        "privilege": "DeleteCacheCluster",
        "description": "Grants permission to delete a previously provisioned cluster",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteCacheCluster.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteCacheParameterGroup": {
        "privilege": "DeleteCacheParameterGroup",
        "description": "Grants permission to delete the specified cache parameter group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteCacheParameterGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteCacheSecurityGroup": {
        "privilege": "DeleteCacheSecurityGroup",
        "description": "Grants permission to delete a cache security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteCacheSecurityGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteCacheSubnetGroup": {
        "privilege": "DeleteCacheSubnetGroup",
        "description": "Grants permission to delete a cache subnet group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteCacheSubnetGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteGlobalReplicationGroup": {
        "privilege": "DeleteGlobalReplicationGroup",
        "description": "Grants permission to delete an existing global replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteReplicationGroup": {
        "privilege": "DeleteReplicationGroup",
        "description": "Grants permission to delete an existing replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteSnapshot": {
        "privilege": "DeleteSnapshot",
        "description": "Grants permission to delete an existing snapshot",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteSnapshot.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteUser": {
        "privilege": "DeleteUser",
        "description": "Grants permission to delete an existing user and thus remove it from all user groups and replication groups where it was assigned",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteUser.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteUserGroup": {
        "privilege": "DeleteUserGroup",
        "description": "Grants permission to delete an existing user group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DeleteUserGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeCacheClusters": {
        "privilege": "DescribeCacheClusters",
        "description": "Grants permission to list information about provisioned cache clusters",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeCacheClusters.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeCacheEngineVersions": {
        "privilege": "DescribeCacheEngineVersions",
        "description": "Grants permission to list available cache engines and their versions",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeCacheEngineVersions.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describeCacheParameterGroups": {
        "privilege": "DescribeCacheParameterGroups",
        "description": "Grants permission to list cache parameter group descriptions",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeCacheParameterGroups.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeCacheParameters": {
        "privilege": "DescribeCacheParameters",
        "description": "Grants permission to retrieve the detailed parameter list for a particular cache parameter group",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeCacheParameters.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeCacheSecurityGroups": {
        "privilege": "DescribeCacheSecurityGroups",
        "description": "Grants permission to list cache security group descriptions",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeCacheSecurityGroups.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeCacheSubnetGroups": {
        "privilege": "DescribeCacheSubnetGroups",
        "description": "Grants permission to list cache subnet group descriptions",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeCacheSubnetGroups.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeEngineDefaultParameters": {
        "privilege": "DescribeEngineDefaultParameters",
        "description": "Grants permission to retrieve the default engine and system parameter information for the specified cache engine",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEngineDefaultParameters.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describeEvents": {
        "privilege": "DescribeEvents",
        "description": "Grants permission to list events related to clusters, cache security groups, and cache parameter groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describeGlobalReplicationGroups": {
        "privilege": "DescribeGlobalReplicationGroups",
        "description": "Grants permission to list information about global replication groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeGlobalReplicationGroups.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeReplicationGroups": {
        "privilege": "DescribeReplicationGroups",
        "description": "Grants permission to list information about provisioned replication groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeReplicationGroups.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeReservedCacheNodes": {
        "privilege": "DescribeReservedCacheNodes",
        "description": "Grants permission to list information about purchased reserved cache nodes",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeReservedCacheNodes.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "reservedInstance": {
                "resourceName": "reserved-instance",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:reserved-instance:${ReservedCacheNodeId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeReservedCacheNodesOfferings": {
        "privilege": "DescribeReservedCacheNodesOfferings",
        "description": "Grants permission to list available reserved cache node offerings",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeReservedCacheNodesOfferings.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describeServiceUpdates": {
        "privilege": "DescribeServiceUpdates",
        "description": "Grants permission to list details of the service updates",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeServiceUpdates.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describeSnapshots": {
        "privilege": "DescribeSnapshots",
        "description": "Grants permission to list information about cluster or replication group snapshots",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeSnapshots.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeUpdateActions": {
        "privilege": "DescribeUpdateActions",
        "description": "Grants permission to list details of the update actions for a set of clusters or replication groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeUpdateActions.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeUserGroups": {
        "privilege": "DescribeUserGroups",
        "description": "Grants permission to list information about Redis user groups",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeUserGroups.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeUsers": {
        "privilege": "DescribeUsers",
        "description": "Grants permission to list information about Redis users",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeUsers.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disassociateGlobalReplicationGroup": {
        "privilege": "DisassociateGlobalReplicationGroup",
        "description": "Grants permission to remove a secondary replication group from the global replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DisassociateGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "failoverGlobalReplicationGroup": {
        "privilege": "FailoverGlobalReplicationGroup",
        "description": "Grants permission to failover the primary region to a selected secondary region of a global replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_FailoverGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "increaseNodeGroupsInGlobalReplicationGroup": {
        "privilege": "IncreaseNodeGroupsInGlobalReplicationGroup",
        "description": "Grants permission to increase the number of node groups in a global replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_IncreaseNodeGroupsInGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "elasticache:NumNodeGroups": {
                "condition": "elasticache:NumNodeGroups",
                "description": "Filters access by the NumNodeGroups or NodeGroupCount parameter specified in the request. This key can be used to restrict the number of node groups (shards) clusters can have after creation or scaling operations",
                "type": "Numeric"
            }
        },
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "increaseReplicaCount": {
        "privilege": "IncreaseReplicaCount",
        "description": "Grants permission to increase the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_IncreaseReplicaCount.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:ReplicasPerNodeGroup": {
                "condition": "elasticache:ReplicasPerNodeGroup",
                "description": "Filters access by the number of replicas per node group (shards) specified in creations or scaling requests",
                "type": "Numeric"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listAllowedNodeTypeModifications": {
        "privilege": "ListAllowedNodeTypeModifications",
        "description": "Grants permission to list available node type that can be used to scale a particular Redis cluster or replication group",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ListAllowedNodeTypeModifications.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listTagsForResource": {
        "privilege": "ListTagsForResource",
        "description": "Grants permission to list tags for an ElastiCache resource",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ListTagsForResource.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyCacheCluster": {
        "privilege": "ModifyCacheCluster",
        "description": "Grants permission to modify settings for a cluster",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheCluster.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:CacheNodeType": {
                "condition": "elasticache:CacheNodeType",
                "description": "Filters access by the cacheNodeType parameter present in the request. This key can be used to restrict which cache node types can be used on cluster creation or scaling operations",
                "type": "String"
            },
            "elasticache:EngineVersion": {
                "condition": "elasticache:EngineVersion",
                "description": "Filters access by the engineVersion parameter present in creation or cluster modification requests",
                "type": "String"
            },
            "elasticache:MultiAZEnabled": {
                "condition": "elasticache:MultiAZEnabled",
                "description": "Filters access by the AZMode parameter, MultiAZEnabled parameter or the number of availability zones that the cluster or replication group can be placed in",
                "type": "Bool"
            },
            "elasticache:AuthTokenEnabled": {
                "condition": "elasticache:AuthTokenEnabled",
                "description": "Filters access by the presence of non empty AuthToken parameter in the request",
                "type": "Bool"
            },
            "elasticache:SnapshotRetentionLimit": {
                "condition": "elasticache:SnapshotRetentionLimit",
                "description": "Filters access by the SnapshotRetentionLimit parameter in the request",
                "type": "Numeric"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyCacheParameterGroup": {
        "privilege": "ModifyCacheParameterGroup",
        "description": "Grants permission to modify parameters of a cache parameter group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyCacheSubnetGroup": {
        "privilege": "ModifyCacheSubnetGroup",
        "description": "Grants permission to modify an existing cache subnet group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheSubnetGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyGlobalReplicationGroup": {
        "privilege": "ModifyGlobalReplicationGroup",
        "description": "Grants permission to modify settings for a global replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "elasticache:CacheNodeType": {
                "condition": "elasticache:CacheNodeType",
                "description": "Filters access by the cacheNodeType parameter present in the request. This key can be used to restrict which cache node types can be used on cluster creation or scaling operations",
                "type": "String"
            },
            "elasticache:EngineVersion": {
                "condition": "elasticache:EngineVersion",
                "description": "Filters access by the engineVersion parameter present in creation or cluster modification requests",
                "type": "String"
            },
            "elasticache:AutomaticFailoverEnabled": {
                "condition": "elasticache:AutomaticFailoverEnabled",
                "description": "Filters access by the AutomaticFailoverEnabled parameter in the request",
                "type": "Bool"
            }
        },
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "modifyReplicationGroup": {
        "privilege": "ModifyReplicationGroup",
        "description": "Grants permission to modify the settings for a replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:CacheNodeType": {
                "condition": "elasticache:CacheNodeType",
                "description": "Filters access by the cacheNodeType parameter present in the request. This key can be used to restrict which cache node types can be used on cluster creation or scaling operations",
                "type": "String"
            },
            "elasticache:EngineVersion": {
                "condition": "elasticache:EngineVersion",
                "description": "Filters access by the engineVersion parameter present in creation or cluster modification requests",
                "type": "String"
            },
            "elasticache:AutomaticFailoverEnabled": {
                "condition": "elasticache:AutomaticFailoverEnabled",
                "description": "Filters access by the AutomaticFailoverEnabled parameter in the request",
                "type": "Bool"
            },
            "elasticache:MultiAZEnabled": {
                "condition": "elasticache:MultiAZEnabled",
                "description": "Filters access by the AZMode parameter, MultiAZEnabled parameter or the number of availability zones that the cluster or replication group can be placed in",
                "type": "Bool"
            },
            "elasticache:AuthTokenEnabled": {
                "condition": "elasticache:AuthTokenEnabled",
                "description": "Filters access by the presence of non empty AuthToken parameter in the request",
                "type": "Bool"
            },
            "elasticache:SnapshotRetentionLimit": {
                "condition": "elasticache:SnapshotRetentionLimit",
                "description": "Filters access by the SnapshotRetentionLimit parameter in the request",
                "type": "Numeric"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyReplicationGroupShardConfiguration": {
        "privilege": "ModifyReplicationGroupShardConfiguration",
        "description": "Grants permission to add shards, remove shards, or rebalance the keyspaces among existing shards of a replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyReplicationGroupShardConfiguration.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:NumNodeGroups": {
                "condition": "elasticache:NumNodeGroups",
                "description": "Filters access by the NumNodeGroups or NodeGroupCount parameter specified in the request. This key can be used to restrict the number of node groups (shards) clusters can have after creation or scaling operations",
                "type": "Numeric"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyUser": {
        "privilege": "ModifyUser",
        "description": "Grants permission to change Redis user password(s) and/or access string",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyUser.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "modifyUserGroup": {
        "privilege": "ModifyUserGroup",
        "description": "Grants permission to change list of users that belong to the user group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyUserGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "purchaseReservedCacheNodesOffering": {
        "privilege": "PurchaseReservedCacheNodesOffering",
        "description": "Grants permission to purchase a reserved cache node offering",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_PurchaseReservedCacheNodesOffering.html",
        "service": "elasticache",
        "dependentActions": [
            "elasticache:AddTagsToResource"
        ],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {
            "reservedInstance": {
                "resourceName": "reserved-instance",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:reserved-instance:${ReservedCacheNodeId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "rebalanceSlotsInGlobalReplicationGroup": {
        "privilege": "RebalanceSlotsInGlobalReplicationGroup",
        "description": "Grants permission to perform a key space rebalance operation to redistribute slots and ensure uniform key distribution across existing shards in a global replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_RebalanceSlotsInGlobalReplicationGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "globalreplicationgroup": {
                "resourceName": "globalreplicationgroup",
                "resourceArn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "rebootCacheCluster": {
        "privilege": "RebootCacheCluster",
        "description": "Grants permission to reboot some, or all, of the cache nodes within a provisioned cache cluster or replication group (cluster mode disabled)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_RebootCacheCluster.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "removeTagsFromResource": {
        "privilege": "RemoveTagsFromResource",
        "description": "Grants permission to remove tags from a ElastiCache resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_RemoveTagsFromResource.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "cluster": {
                "resourceName": "cluster",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "reservedInstance": {
                "resourceName": "reserved-instance",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:reserved-instance:${ReservedCacheNodeId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "snapshot": {
                "resourceName": "snapshot",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "subnetgroup": {
                "resourceName": "subnetgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "user": {
                "resourceName": "user",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            },
            "usergroup": {
                "resourceName": "usergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "resetCacheParameterGroup": {
        "privilege": "ResetCacheParameterGroup",
        "description": "Grants permission to modify parameters of a cache parameter group back to their default values",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ResetCacheParameterGroup.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            },
            "elasticache:CacheParameterGroupName": {
                "condition": "elasticache:CacheParameterGroupName",
                "description": "Filters access by the the CacheParameterGroupName parameter in the request",
                "type": "String"
            }
        },
        "resources": {
            "parametergroup": {
                "resourceName": "parametergroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "revokeCacheSecurityGroupIngress": {
        "privilege": "RevokeCacheSecurityGroupIngress",
        "description": "Grants permission to remove an EC2 security group ingress from a ElastiCache security group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_RevokeCacheSecurityGroupIngress.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "securitygroup": {
                "resourceName": "securitygroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "startMigration": {
        "privilege": "StartMigration",
        "description": "Grants permission to start a migration of data from hosted Redis on Amazon EC2 to ElastiCache for Redis",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_StartMigration.html",
        "service": "elasticache",
        "dependentActions": [],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "testFailover": {
        "privilege": "TestFailover",
        "description": "Grants permission to test automatic failover on a specified node group in a replication group",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_TestFailover.html",
        "service": "elasticache",
        "dependentActions": [
            "ec2:CreateNetworkInterface",
            "ec2:DeleteNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcs"
        ],
        "privConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters actions based on the tags associated with the resource",
                "type": "String"
            }
        },
        "resources": {
            "replicationgroup": {
                "resourceName": "replicationgroup",
                "resourceArn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    }
}
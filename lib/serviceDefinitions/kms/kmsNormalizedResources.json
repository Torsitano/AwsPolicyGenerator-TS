{
    "alias": {
        "resourceName": "alias",
        "service": "kms",
        "resourceArn": "arn:${Partition}:kms:${Region}:${Account}:alias/${Alias}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "CreateAlias": {
                "privilege": "CreateAlias",
                "description": "Controls permission to create an alias for an AWS KMS key. Aliases are optional friendly names that you can associate with KMS keys",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateAlias.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteAlias": {
                "privilege": "DeleteAlias",
                "description": "Controls permission to delete an alias. Aliases are optional friendly names that you can associate with AWS KMS keys",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_DeleteAlias.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateAlias": {
                "privilege": "UpdateAlias",
                "description": "Controls permission to associate an alias with a different AWS KMS key. An alias is an optional friendly name that you can associate with a KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_UpdateAlias.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "key": {
        "resourceName": "key",
        "service": "kms",
        "resourceArn": "arn:${Partition}:kms:${Region}:${Account}:key/${KeyId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access to the specified AWS KMS operations based on tags assigned to the AWS KMS key",
                "type": "String"
            },
            "kms:KeyOrigin": {
                "condition": "kms:KeyOrigin",
                "description": "Filters access to an API operation based on the Origin property of the AWS KMS key created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a KMS key",
                "type": "String"
            },
            "kms:KeySpec": {
                "condition": "kms:KeySpec",
                "description": "Filters access to an API operation based on the KeySpec property of the AWS KMS key that is created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a KMS key resource",
                "type": "String"
            },
            "kms:KeyUsage": {
                "condition": "kms:KeyUsage",
                "description": "Filters access to an API operation based on the KeyUsage property of the AWS KMS key created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a KMS key resource",
                "type": "String"
            },
            "kms:MultiRegion": {
                "condition": "kms:MultiRegion",
                "description": "Filters access to an API operation based on the MultiRegion property of the AWS KMS key created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a KMS key resource",
                "type": "Bool"
            },
            "kms:MultiRegionKeyType": {
                "condition": "kms:MultiRegionKeyType",
                "description": "Filters access to an API operation based on the MultiRegionKeyType property of the AWS KMS key created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a KMS key resource",
                "type": "String"
            },
            "kms:ResourceAliases": {
                "condition": "kms:ResourceAliases",
                "description": "Filters access to specified AWS KMS operations based on aliases associated with the AWS KMS key",
                "type": "ArrayOfString"
            }
        },
        "listPrivileges": {
            "ListGrants": {
                "privilege": "ListGrants",
                "description": "Controls permission to view all grants for an AWS KMS key",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ListGrants.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:GrantIsForAWSResource": {
                        "condition": "kms:GrantIsForAWSResource",
                        "description": "Filters access to the CreateGrant operation when the request comes from a specified AWS service",
                        "type": "Bool"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListKeyPolicies": {
                "privilege": "ListKeyPolicies",
                "description": "Controls permission to view the names of key policies for an AWS KMS key",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeyPolicies.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListResourceTags": {
                "privilege": "ListResourceTags",
                "description": "Controls permission to view all tags that are attached to an AWS KMS key",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ListResourceTags.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListRetirableGrants": {
                "privilege": "ListRetirableGrants",
                "description": "Controls permission to view grants in which the specified principal is the retiring principal. Other principals might be able to retire the grant and this principal might be able to retire other grants",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ListRetirableGrants.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "DescribeKey": {
                "privilege": "DescribeKey",
                "description": "Controls permission to view detailed information about an AWS KMS key",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetKeyPolicy": {
                "privilege": "GetKeyPolicy",
                "description": "Controls permission to view the key policy for the specified AWS KMS key",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GetKeyPolicy.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetKeyRotationStatus": {
                "privilege": "GetKeyRotationStatus",
                "description": "Controls permission to determine whether automatic key rotation is enabled on the AWS KMS key",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GetKeyRotationStatus.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetParametersForImport": {
                "privilege": "GetParametersForImport",
                "description": "Controls permission to get data that is required to import cryptographic material into a customer managed key, including a public key and import token",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GetParametersForImport.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    },
                    "kms:WrappingAlgorithm": {
                        "condition": "kms:WrappingAlgorithm",
                        "description": "Filters access to the GetParametersForImport operation based on the value of the WrappingAlgorithm parameter in the request",
                        "type": "String"
                    },
                    "kms:WrappingKeySpec": {
                        "condition": "kms:WrappingKeySpec",
                        "description": "Filters access to the GetParametersForImport operation based on the value of the WrappingKeySpec parameter in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetPublicKey": {
                "privilege": "GetPublicKey",
                "description": "Controls permission to download the public key of an asymmetric AWS KMS key",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CancelKeyDeletion": {
                "privilege": "CancelKeyDeletion",
                "description": "Controls permission to cancel the scheduled deletion of an AWS KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_CancelKeyDeletion.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "CreateAlias": {
                "privilege": "CreateAlias",
                "description": "Controls permission to create an alias for an AWS KMS key. Aliases are optional friendly names that you can associate with KMS keys",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateAlias.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "Decrypt": {
                "privilege": "Decrypt",
                "description": "Controls permission to decrypt ciphertext that was encrypted under an AWS KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_Decrypt.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:RecipientAttestation:ImageSha384": {
                        "condition": "kms:RecipientAttestation:ImageSha384",
                        "description": "Filters access to the Decrypt, GenerateDataKey, and GenerateRandom operations based on the image hash in the attestation document in the request",
                        "type": "String"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteAlias": {
                "privilege": "DeleteAlias",
                "description": "Controls permission to delete an alias. Aliases are optional friendly names that you can associate with AWS KMS keys",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_DeleteAlias.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteImportedKeyMaterial": {
                "privilege": "DeleteImportedKeyMaterial",
                "description": "Controls permission to delete cryptographic material that you imported into an AWS KMS key. This action makes the key unusable",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_DeleteImportedKeyMaterial.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableKey": {
                "privilege": "DisableKey",
                "description": "Controls permission to disable an AWS KMS key, which prevents it from being used in cryptographic operations",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableKeyRotation": {
                "privilege": "DisableKeyRotation",
                "description": "Controls permission to disable automatic rotation of a customer managed AWS KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKeyRotation.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableKey": {
                "privilege": "EnableKey",
                "description": "Controls permission to change the state of an AWS KMS key to enabled. This allows the KMS key to be used in cryptographic operations",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "EnableKeyRotation": {
                "privilege": "EnableKeyRotation",
                "description": "Controls permission to enable automatic rotation of the cryptographic material in an AWS KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKeyRotation.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "Encrypt": {
                "privilege": "Encrypt",
                "description": "Controls permission to use the specified AWS KMS key to encrypt data and data keys",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GenerateDataKey": {
                "privilege": "GenerateDataKey",
                "description": "Controls permission to use the AWS KMS key to generate data keys. You can use the data keys to encrypt data outside of AWS KMS",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:RecipientAttestation:ImageSha384": {
                        "condition": "kms:RecipientAttestation:ImageSha384",
                        "description": "Filters access to the Decrypt, GenerateDataKey, and GenerateRandom operations based on the image hash in the attestation document in the request",
                        "type": "String"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GenerateDataKeyPair": {
                "privilege": "GenerateDataKeyPair",
                "description": "Controls permission to use the AWS KMS key to generate data key pairs",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyPair.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:DataKeyPairSpec": {
                        "condition": "kms:DataKeyPairSpec",
                        "description": "Filters access to GenerateDataKeyPair and GenerateDataKeyPairWithoutPlaintext operations based on the value of the KeyPairSpec parameter in the request",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GenerateDataKeyPairWithoutPlaintext": {
                "privilege": "GenerateDataKeyPairWithoutPlaintext",
                "description": "Controls permission to use the AWS KMS key to generate data key pairs. Unlike the GenerateDataKeyPair operation, this operation returns an encrypted private key without a plaintext copy",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyPairWithoutPlaintext.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:DataKeyPairSpec": {
                        "condition": "kms:DataKeyPairSpec",
                        "description": "Filters access to GenerateDataKeyPair and GenerateDataKeyPairWithoutPlaintext operations based on the value of the KeyPairSpec parameter in the request",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GenerateDataKeyWithoutPlaintext": {
                "privilege": "GenerateDataKeyWithoutPlaintext",
                "description": "Controls permission to use the AWS KMS key to generate a data key. Unlike the GenerateDataKey operation, this operation returns an encrypted data key without a plaintext version of the data key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyWithoutPlaintext.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ImportKeyMaterial": {
                "privilege": "ImportKeyMaterial",
                "description": "Controls permission to import cryptographic material into an AWS KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ImportKeyMaterial.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ExpirationModel": {
                        "condition": "kms:ExpirationModel",
                        "description": "Filters access to the ImportKeyMaterial operation based on the value of the ExpirationModel parameter in the request",
                        "type": "String"
                    },
                    "kms:ValidTo": {
                        "condition": "kms:ValidTo",
                        "description": "Filters access to the ImportKeyMaterial operation based on the value of the ValidTo parameter in the request. You can use this condition key to allow users to import key material only when it expires by the specified date",
                        "type": "Date"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReEncryptFrom": {
                "privilege": "ReEncryptFrom",
                "description": "Controls permission to decrypt data as part of the process that decrypts and reencrypts the data within AWS KMS",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ReEncrypt.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:ReEncryptOnSameKey": {
                        "condition": "kms:ReEncryptOnSameKey",
                        "description": "Filters access to the ReEncrypt operation when it uses the same AWS KMS key that was used for the Encrypt operation",
                        "type": "Bool"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReEncryptTo": {
                "privilege": "ReEncryptTo",
                "description": "Controls permission to encrypt data as part of the process that decrypts and reencrypts the data within AWS KMS",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ReEncrypt.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:EncryptionAlgorithm": {
                        "condition": "kms:EncryptionAlgorithm",
                        "description": "Filters access to encryption operations based on the value of the encryption algorithm in the request",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:ReEncryptOnSameKey": {
                        "condition": "kms:ReEncryptOnSameKey",
                        "description": "Filters access to the ReEncrypt operation when it uses the same AWS KMS key that was used for the Encrypt operation",
                        "type": "Bool"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplicateKey": {
                "privilege": "ReplicateKey",
                "description": "Controls permission to replicate a multi-Region primary key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ReplicateKey.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ReplicaRegion": {
                        "condition": "kms:ReplicaRegion",
                        "description": "Filters access to the ReplicateKey operation based on the value of the ReplicaRegion parameter in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ScheduleKeyDeletion": {
                "privilege": "ScheduleKeyDeletion",
                "description": "Controls permission to schedule deletion of an AWS KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "Sign": {
                "privilege": "Sign",
                "description": "Controls permission to produce a digital signature for a message",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_Sign.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:MessageType": {
                        "condition": "kms:MessageType",
                        "description": "Filters access to the Sign and Verify operations based on the value of the MessageType parameter in the request",
                        "type": "String"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:SigningAlgorithm": {
                        "condition": "kms:SigningAlgorithm",
                        "description": "Filters access to the Sign and Verify operations based on the signing algorithm in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "SynchronizeMultiRegionKey": {
                "privilege": "SynchronizeMultiRegionKey",
                "description": "Controls access to internal APIs that synchronize multi-Region keys",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-auth.html#multi-region-auth-slr",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateAlias": {
                "privilege": "UpdateAlias",
                "description": "Controls permission to associate an alias with a different AWS KMS key. An alias is an optional friendly name that you can associate with a KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_UpdateAlias.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateKeyDescription": {
                "privilege": "UpdateKeyDescription",
                "description": "Controls permission to delete or change the description of an AWS KMS key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_UpdateKeyDescription.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdatePrimaryRegion": {
                "privilege": "UpdatePrimaryRegion",
                "description": "Controls permission to update the primary Region of a multi-Region primary key",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_UpdatePrimaryRegion.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:PrimaryRegion": {
                        "condition": "kms:PrimaryRegion",
                        "description": "Filters access to the UpdatePrimaryRegion operation based on the value of the PrimaryRegion parameter in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "Verify": {
                "privilege": "Verify",
                "description": "Controls permission to use the specified AWS KMS key to verify digital signatures",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_Verify.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:MessageType": {
                        "condition": "kms:MessageType",
                        "description": "Filters access to the Sign and Verify operations based on the value of the MessageType parameter in the request",
                        "type": "String"
                    },
                    "kms:RequestAlias": {
                        "condition": "kms:RequestAlias",
                        "description": "Filters access to cryptographic operations, DescribeKey, and GetPublicKey based on the alias in the request",
                        "type": "String"
                    },
                    "kms:SigningAlgorithm": {
                        "condition": "kms:SigningAlgorithm",
                        "description": "Filters access to the Sign and Verify operations based on the signing algorithm in the request",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "CreateGrant": {
                "privilege": "CreateGrant",
                "description": "Controls permission to add a grant to an AWS KMS key. You can use grants to add permissions without changing the key policy or IAM policy",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:EncryptionContext:${EncryptionContextKey}": {
                        "condition": "kms:EncryptionContext:${EncryptionContextKey}",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition evaluates the key and value in each key-value encryption context pair",
                        "type": "String"
                    },
                    "kms:EncryptionContextKeys": {
                        "condition": "kms:EncryptionContextKeys",
                        "description": "Filters access to a symmetric AWS KMS key based on the encryption context in a cryptographic operation. This condition key evaluates only the key in each key-value encryption context pair",
                        "type": "ArrayOfString"
                    },
                    "kms:GrantConstraintType": {
                        "condition": "kms:GrantConstraintType",
                        "description": "Filters access to the CreateGrant operation based on the grant constraint in the request",
                        "type": "String"
                    },
                    "kms:GranteePrincipal": {
                        "condition": "kms:GranteePrincipal",
                        "description": "Filters access to the CreateGrant operation based on the grantee principal in the grant",
                        "type": "String"
                    },
                    "kms:GrantIsForAWSResource": {
                        "condition": "kms:GrantIsForAWSResource",
                        "description": "Filters access to the CreateGrant operation when the request comes from a specified AWS service",
                        "type": "Bool"
                    },
                    "kms:GrantOperations": {
                        "condition": "kms:GrantOperations",
                        "description": "Filters access to the CreateGrant operation based on the operations in the grant",
                        "type": "ArrayOfString"
                    },
                    "kms:RetiringPrincipal": {
                        "condition": "kms:RetiringPrincipal",
                        "description": "Filters access to the CreateGrant operation based on the retiring principal in the grant",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutKeyPolicy": {
                "privilege": "PutKeyPolicy",
                "description": "Controls permission to replace the key policy for the specified AWS KMS key",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html",
                "privConditions": {
                    "kms:BypassPolicyLockoutSafetyCheck": {
                        "condition": "kms:BypassPolicyLockoutSafetyCheck",
                        "description": "Filters access to the CreateKey and PutKeyPolicy operations based on the value of the BypassPolicyLockoutSafetyCheck parameter in the request",
                        "type": "Bool"
                    },
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RetireGrant": {
                "privilege": "RetireGrant",
                "description": "Controls permission to retire a grant. The RetireGrant operation is typically called by the grant user after they complete the tasks that the grant allowed them to perform",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RevokeGrant": {
                "privilege": "RevokeGrant",
                "description": "Controls permission to revoke a grant, which denies permission for all operations that depend on the grant",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html",
                "privConditions": {
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:GrantIsForAWSResource": {
                        "condition": "kms:GrantIsForAWSResource",
                        "description": "Filters access to the CreateGrant operation when the request comes from a specified AWS service",
                        "type": "Bool"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Controls permission to create or update tags that are attached to an AWS KMS key",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_TagResource.html",
                "privConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access to the specified AWS KMS operations based on both the key and value of the tag in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access to the specified AWS KMS operations based on tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Controls permission to delete tags that are attached to an AWS KMS key",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/kms/latest/APIReference/API_UntagResource.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access to the specified AWS KMS operations based on tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "kms:CallerAccount": {
                        "condition": "kms:CallerAccount",
                        "description": "Filters access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement",
                        "type": "String"
                    },
                    "kms:ViaService": {
                        "condition": "kms:ViaService",
                        "description": "Filters access when a request made on the principal's behalf comes from a specified AWS service",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    }
}
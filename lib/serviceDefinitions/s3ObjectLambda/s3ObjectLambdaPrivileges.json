{
    "abortMultipartUpload": {
        "privilege": "AbortMultipartUpload",
        "description": "Grants permission to abort a multipart upload",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html"
    },
    "deleteObject": {
        "privilege": "DeleteObject",
        "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"
    },
    "deleteObjectTagging": {
        "privilege": "DeleteObjectTagging",
        "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
        "accessLevel": "Tagging",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html"
    },
    "deleteObjectVersion": {
        "privilege": "DeleteObjectVersion",
        "description": "Grants permission to remove a specific version of an object",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion",
                    "s3-object-lambda:versionid"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"
    },
    "deleteObjectVersionTagging": {
        "privilege": "DeleteObjectVersionTagging",
        "description": "Grants permission to remove the entire tag set for a specific version of the object",
        "accessLevel": "Tagging",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion",
                    "s3-object-lambda:versionid"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html"
    },
    "getObject": {
        "privilege": "GetObject",
        "description": "Grants permission to retrieve objects from Amazon S3",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html"
    },
    "getObjectAcl": {
        "privilege": "GetObjectAcl",
        "description": "Grants permission to return the access control list (ACL) of an object",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html"
    },
    "getObjectLegalHold": {
        "privilege": "GetObjectLegalHold",
        "description": "Grants permission to get an object's current Legal Hold status",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html"
    },
    "getObjectRetention": {
        "privilege": "GetObjectRetention",
        "description": "Grants permission to retrieve the retention settings for an object",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html"
    },
    "getObjectTagging": {
        "privilege": "GetObjectTagging",
        "description": "Grants permission to return the tag set of an object",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html"
    },
    "getObjectVersion": {
        "privilege": "GetObjectVersion",
        "description": "Grants permission to retrieve a specific version of an object",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion",
                    "s3-object-lambda:versionid"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html"
    },
    "getObjectVersionAcl": {
        "privilege": "GetObjectVersionAcl",
        "description": "Grants permission to return the access control list (ACL) of a specific object version",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion",
                    "s3-object-lambda:versionid"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html"
    },
    "getObjectVersionTagging": {
        "privilege": "GetObjectVersionTagging",
        "description": "Grants permission to return the tag set for a specific version of the object",
        "accessLevel": "Read",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion",
                    "s3-object-lambda:versionid"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/dev/setting-repl-config-perm-overview.html"
    },
    "listBucket": {
        "privilege": "ListBucket",
        "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
        "accessLevel": "List",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html"
    },
    "listBucketMultipartUploads": {
        "privilege": "ListBucketMultipartUploads",
        "description": "Grants permission to list in-progress multipart uploads",
        "accessLevel": "List",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html"
    },
    "listBucketVersions": {
        "privilege": "ListBucketVersions",
        "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
        "accessLevel": "List",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectVersions.html"
    },
    "listMultipartUploadParts": {
        "privilege": "ListMultipartUploadParts",
        "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
        "accessLevel": "List",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html"
    },
    "putObject": {
        "privilege": "PutObject",
        "description": "Grants permission to add an object to a bucket",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html"
    },
    "putObjectAcl": {
        "privilege": "PutObjectAcl",
        "description": "Grants permission to set the access control list (ACL) permissions for new or existing objects in an S3 bucket.",
        "accessLevel": "Permissions management",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"
    },
    "putObjectLegalHold": {
        "privilege": "PutObjectLegalHold",
        "description": "Grants permission to apply a Legal Hold configuration to the specified object",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLegalHold.html"
    },
    "putObjectRetention": {
        "privilege": "PutObjectRetention",
        "description": "Grants permission to place an Object Retention configuration on an object",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectRetention.html"
    },
    "putObjectTagging": {
        "privilege": "PutObjectTagging",
        "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
        "accessLevel": "Tagging",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html"
    },
    "putObjectVersionAcl": {
        "privilege": "PutObjectVersionAcl",
        "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
        "accessLevel": "Permissions management",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion",
                    "s3-object-lambda:versionid"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"
    },
    "putObjectVersionTagging": {
        "privilege": "PutObjectVersionTagging",
        "description": "Grants permission to set the supplied tag-set for a specific version of an object",
        "accessLevel": "Tagging",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion",
                    "s3-object-lambda:versionid"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html"
    },
    "restoreObject": {
        "privilege": "RestoreObject",
        "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html"
    },
    "writeGetObjectResponse": {
        "privilege": "WriteGetObjectResponse",
        "description": "Grants permission to provide data for GetObject requests send to S3 Object Lambda",
        "accessLevel": "Write",
        "resourceTypes": {
            "objectlambdaaccesspoint": {
                "resourceType": "objectlambdaaccesspoint",
                "required": true,
                "conditionKeys": [],
                "dependentActions": []
            },
            "": {
                "resourceType": "",
                "required": false,
                "conditionKeys": [
                    "s3-object-lambda:authType",
                    "s3-object-lambda:signatureAge",
                    "s3-object-lambda:TlsVersion"
                ],
                "dependentActions": []
            }
        },
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_WriteGetObjectResponse.html"
    }
}
{
    "createContainer": {
        "privilege": "CreateContainer",
        "description": "Grants permission to create a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_CreateContainer.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {}
    },
    "deleteContainer": {
        "privilege": "DeleteContainer",
        "description": "Grants permission to delete a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_DeleteContainer.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteContainerPolicy": {
        "privilege": "DeleteContainerPolicy",
        "description": "Grants permission to delete the access policy of a container",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_DeleteContainerPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteCorsPolicy": {
        "privilege": "DeleteCorsPolicy",
        "description": "Grants permission to delete the CORS policy from a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_DeleteCorsPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteLifecyclePolicy": {
        "privilege": "DeleteLifecyclePolicy",
        "description": "Grants permission to delete the lifecycle policy from a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_DeleteLifecyclePolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteMetricPolicy": {
        "privilege": "DeleteMetricPolicy",
        "description": "Grants permission to delete the metric policy from a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_DeleteMetricPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteObject": {
        "privilege": "DeleteObject",
        "description": "Grants permission to delete an object",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_objstore_DeleteObject.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeContainer": {
        "privilege": "DescribeContainer",
        "description": "Grants permission to retrieve details on a container",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_DescribeContainer.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeObject": {
        "privilege": "DescribeObject",
        "description": "Grants permission to retrieve metadata for an object",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_objstore_DescribeObject.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getContainerPolicy": {
        "privilege": "GetContainerPolicy",
        "description": "Grants permission to retrieve the access policy of a container",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_GetContainerPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getCorsPolicy": {
        "privilege": "GetCorsPolicy",
        "description": "Grants permission to retrieve the CORS policy of a container",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_GetCorsPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getLifecyclePolicy": {
        "privilege": "GetLifecyclePolicy",
        "description": "Grants permission to retrieve the lifecycle policy that is assigned to a container",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_GetLifecyclePolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getMetricPolicy": {
        "privilege": "GetMetricPolicy",
        "description": "Grants permission to retrieve the metric policy that is assigned to a container",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_GetMetricPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getObject": {
        "privilege": "GetObject",
        "description": "Grants permission to retrieve an object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_objstore_GetObject.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listContainers": {
        "privilege": "ListContainers",
        "description": "Grants permission to retrieve a list of containers in the current account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_ListContainers.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listItems": {
        "privilege": "ListItems",
        "description": "Grants permission to retrieve a list of objects and subfolders that are stored in a folder",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_objstore_ListItems.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "folder": {
                "resourceName": "folder",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}/${FolderPath}",
                "required": false,
                "resourceConditions": {}
            }
        }
    },
    "listTagsForResource": {
        "privilege": "ListTagsForResource",
        "description": "Grants permission to list tags on a container",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_ListTagsForResource.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putContainerPolicy": {
        "privilege": "PutContainerPolicy",
        "description": "Grants permission to create or replace the access policy of a container",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_PutContainerPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putCorsPolicy": {
        "privilege": "PutCorsPolicy",
        "description": "Grants permission to add or modify the CORS policy of a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_PutCorsPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putLifecyclePolicy": {
        "privilege": "PutLifecyclePolicy",
        "description": "Grants permission to add or modify the lifecycle policy that is assigned to a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_PutLifecyclePolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putMetricPolicy": {
        "privilege": "PutMetricPolicy",
        "description": "Grants permission to add or modify the metric policy that is assigned to a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_PutMetricPolicy.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putObject": {
        "privilege": "PutObject",
        "description": "Grants permission to upload an object",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_objstore_PutObject.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "startAccessLogging": {
        "privilege": "StartAccessLogging",
        "description": "Grants permission to start access logging on a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_StartAccessLogging.html",
        "service": "mediastore",
        "dependentActions": [
            "iam:PassRole"
        ],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "stopAccessLogging": {
        "privilege": "StopAccessLogging",
        "description": "Grants permission to stop access logging on a container",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_StopAccessLogging.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "tagResource": {
        "privilege": "TagResource",
        "description": "Grants permission to add tags to a container",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_TagResource.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "untagResource": {
        "privilege": "UntagResource",
        "description": "Grants permission to remove tags from a container",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/mediastore/latest/apireference/API_UntagResource.html",
        "service": "mediastore",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {
            "container": {
                "resourceName": "container",
                "resourceArn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    }
}
{
    "abortMultipartUpload": {
        "privilege": "AbortMultipartUpload",
        "description": "Grants permission to abort a multipart upload",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "bypassGovernanceRetention": {
        "privilege": "BypassGovernanceRetention",
        "description": "Grants permission to allow circumvention of governance-mode object retention settings",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-bypass",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:RequestObjectTag/<key>": {
                "condition": "s3:RequestObjectTag/<key>",
                "description": "Filters access by the tag keys and values to be added to objects",
                "type": "String"
            },
            "s3:RequestObjectTagKeys": {
                "condition": "s3:RequestObjectTagKeys",
                "description": "Filters access by the tag keys to be added to objects",
                "type": "ArrayOfString"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createAccessPoint": {
        "privilege": "CreateAccessPoint",
        "description": "Grants permission to create a new access point",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:locationconstraint": {
                "condition": "s3:locationconstraint",
                "description": "Filters access by a specific Region",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "accesspoint": {
                "resourceName": "accesspoint",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createAccessPointForObjectLambda": {
        "privilege": "CreateAccessPointForObjectLambda",
        "description": "Grants permission to create an object lambda enabled accesspoint",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createBucket": {
        "privilege": "CreateBucket",
        "description": "Grants permission to create a new bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:locationconstraint": {
                "condition": "s3:locationconstraint",
                "description": "Filters access by a specific Region",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "createJob": {
        "privilege": "CreateJob",
        "description": "Grants permission to create a new Amazon S3 Batch Operations job",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html",
        "service": "s3",
        "dependentActions": [
            "iam:PassRole"
        ],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:RequestJobPriority": {
                "condition": "s3:RequestJobPriority",
                "description": "Filters access by priority range to creating new jobs",
                "type": "Numeric"
            },
            "s3:RequestJobOperation": {
                "condition": "s3:RequestJobOperation",
                "description": "Filters access by operation to creating jobs",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {}
    },
    "createMultiRegionAccessPoint": {
        "privilege": "CreateMultiRegionAccessPoint",
        "description": "Grants permission to create a new multi region access point",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "multiregionaccesspoint": {
                "resourceName": "multiregionaccesspoint",
                "resourceArn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteAccessPoint": {
        "privilege": "DeleteAccessPoint",
        "description": "Grants permission to delete the access point named in the URI",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "accesspoint": {
                "resourceName": "accesspoint",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteAccessPointForObjectLambda": {
        "privilege": "DeleteAccessPointForObjectLambda",
        "description": "Grants permission to delete the object lambda enabled access point named in the URI",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteAccessPointPolicy": {
        "privilege": "DeleteAccessPointPolicy",
        "description": "Grants permission to delete the policy on a specified access point",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "accesspoint": {
                "resourceName": "accesspoint",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteAccessPointPolicyForObjectLambda": {
        "privilege": "DeleteAccessPointPolicyForObjectLambda",
        "description": "Grants permission to delete the policy on a specified object lambda enabled access point",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteBucket": {
        "privilege": "DeleteBucket",
        "description": "Grants permission to delete the bucket named in the URI",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteBucketPolicy": {
        "privilege": "DeleteBucketPolicy",
        "description": "Grants permission to delete the policy on a specified bucket",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteBucketWebsite": {
        "privilege": "DeleteBucketWebsite",
        "description": "Grants permission to remove the website configuration for a bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteJobTagging": {
        "privilege": "DeleteJobTagging",
        "description": "Grants permission to remove tags from an existing Amazon S3 Batch Operations job",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:ExistingJobPriority": {
                "condition": "s3:ExistingJobPriority",
                "description": "Filters access by priority range to cancelling existing jobs",
                "type": "Numeric"
            },
            "s3:ExistingJobOperation": {
                "condition": "s3:ExistingJobOperation",
                "description": "Filters access by operation to updating the job priority",
                "type": "String"
            }
        },
        "resources": {
            "job": {
                "resourceName": "job",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteMultiRegionAccessPoint": {
        "privilege": "DeleteMultiRegionAccessPoint",
        "description": "Grants permission to delete the multi region access point named in the URI",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "multiregionaccesspoint": {
                "resourceName": "multiregionaccesspoint",
                "resourceArn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteObject": {
        "privilege": "DeleteObject",
        "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteObjectTagging": {
        "privilege": "DeleteObjectTagging",
        "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteObjectVersion": {
        "privilege": "DeleteObjectVersion",
        "description": "Grants permission to remove a specific version of an object",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteObjectVersionTagging": {
        "privilege": "DeleteObjectVersionTagging",
        "description": "Grants permission to remove the entire tag set for a specific version of the object",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteStorageLensConfiguration": {
        "privilege": "DeleteStorageLensConfiguration",
        "description": "Grants permission to delete an existing Amazon S3 Storage Lens configuration",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteStorageLensConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "storagelensconfiguration": {
                "resourceName": "storagelensconfiguration",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteStorageLensConfigurationTagging": {
        "privilege": "DeleteStorageLensConfigurationTagging",
        "description": "Grants permission to remove tags from an existing Amazon S3 Storage Lens configuration",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteStorageLensConfigurationTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "storagelensconfiguration": {
                "resourceName": "storagelensconfiguration",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeJob": {
        "privilege": "DescribeJob",
        "description": "Grants permission to retrieve the configuration parameters and status for a batch operations job",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "job": {
                "resourceName": "job",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "describeMultiRegionAccessPointOperation": {
        "privilege": "DescribeMultiRegionAccessPointOperation",
        "description": "Grants permission to retrieve the configurations for a multi region access point",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "multiregionaccesspointrequestarn": {
                "resourceName": "multiregionaccesspointrequestarn",
                "resourceArn": "arn:${Partition}:s3:us-west-2:${Account}:async-request/mrap/${Operation}/${Token}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccelerateConfiguration": {
        "privilege": "GetAccelerateConfiguration",
        "description": "Grants permission to uses the accelerate subresource to return the Transfer Acceleration state of a bucket, which is either Enabled or Suspended",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccessPoint": {
        "privilege": "GetAccessPoint",
        "description": "Grants permission to return configuration information about the specified access point",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "getAccessPointConfigurationForObjectLambda": {
        "privilege": "GetAccessPointConfigurationForObjectLambda",
        "description": "Grants permission to retrieve the configuration of the object lambda enabled access point",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccessPointForObjectLambda": {
        "privilege": "GetAccessPointForObjectLambda",
        "description": "Grants permission to create an object lambda enabled accesspoint",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccessPointPolicy": {
        "privilege": "GetAccessPointPolicy",
        "description": "Grants permission to returns the access point policy associated with the specified access point",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "accesspoint": {
                "resourceName": "accesspoint",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccessPointPolicyForObjectLambda": {
        "privilege": "GetAccessPointPolicyForObjectLambda",
        "description": "Grants permission to returns the access point policy associated with the specified object lambda enabled access point",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccessPointPolicyStatus": {
        "privilege": "GetAccessPointPolicyStatus",
        "description": "Grants permission to return the policy status for a specific access point policy",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyStatus.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "accesspoint": {
                "resourceName": "accesspoint",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccessPointPolicyStatusForObjectLambda": {
        "privilege": "GetAccessPointPolicyStatusForObjectLambda",
        "description": "Grants permission to return the policy status for a specific object lambda access point policy",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyStatusForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getAccountPublicAccessBlock": {
        "privilege": "GetAccountPublicAccessBlock",
        "description": "Grants permission to retrieve the PublicAccessBlock configuration for an AWS account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "getAnalyticsConfiguration": {
        "privilege": "GetAnalyticsConfiguration",
        "description": "Grants permission to get an analytics configuration from an Amazon S3 bucket, identified by the analytics configuration ID",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketAcl": {
        "privilege": "GetBucketAcl",
        "description": "Grants permission to use the acl subresource to return the access control list (ACL) of an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAcl.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketCORS": {
        "privilege": "GetBucketCORS",
        "description": "Grants permission to return the CORS configuration information set for an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketCors.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketLocation": {
        "privilege": "GetBucketLocation",
        "description": "Grants permission to return the Region that an Amazon S3 bucket resides in",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLocation.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketLogging": {
        "privilege": "GetBucketLogging",
        "description": "Grants permission to return the logging status of an Amazon S3 bucket and the permissions users have to view or modify that status",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketNotification": {
        "privilege": "GetBucketNotification",
        "description": "Grants permission to get the notification configuration of an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotification.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketObjectLockConfiguration": {
        "privilege": "GetBucketObjectLockConfiguration",
        "description": "Grants permission to get the Object Lock configuration of an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLockConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketOwnershipControls": {
        "privilege": "GetBucketOwnershipControls",
        "description": "Grants permission to retrieve ownership controls on a bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketOwnershipControls.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketPolicy": {
        "privilege": "GetBucketPolicy",
        "description": "Grants permission to return the policy of the specified bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketPolicyStatus": {
        "privilege": "GetBucketPolicyStatus",
        "description": "Grants permission to retrieve the policy status for a specific Amazon S3 bucket, which indicates whether the bucket is public",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketPublicAccessBlock": {
        "privilege": "GetBucketPublicAccessBlock",
        "description": "Grants permission to retrieve the PublicAccessBlock configuration for an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketRequestPayment": {
        "privilege": "GetBucketRequestPayment",
        "description": "Grants permission to return the request payment configuration for an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketRequestPayment.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketTagging": {
        "privilege": "GetBucketTagging",
        "description": "Grants permission to return the tag set associated with an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketVersioning": {
        "privilege": "GetBucketVersioning",
        "description": "Grants permission to return the versioning state of an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getBucketWebsite": {
        "privilege": "GetBucketWebsite",
        "description": "Grants permission to return the website configuration for an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getEncryptionConfiguration": {
        "privilege": "GetEncryptionConfiguration",
        "description": "Grants permission to return the default encryption configuration an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getIntelligentTieringConfiguration": {
        "privilege": "GetIntelligentTieringConfiguration",
        "description": "Grants permission to get an or list all Amazon S3 Intelligent Tiering configuration in a S3 Bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getInventoryConfiguration": {
        "privilege": "GetInventoryConfiguration",
        "description": "Grants permission to return an inventory configuration from an Amazon S3 bucket, identified by the inventory configuration ID",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getJobTagging": {
        "privilege": "GetJobTagging",
        "description": "Grants permission to return the tag set of an existing Amazon S3 Batch Operations job",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "job": {
                "resourceName": "job",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getLifecycleConfiguration": {
        "privilege": "GetLifecycleConfiguration",
        "description": "Grants permission to return the lifecycle configuration information set on an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getMetricsConfiguration": {
        "privilege": "GetMetricsConfiguration",
        "description": "Grants permission to get a metrics configuration from an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getMultiRegionAccessPoint": {
        "privilege": "GetMultiRegionAccessPoint",
        "description": "Grants permission to return configuration information about the specified multi region access point",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "multiregionaccesspoint": {
                "resourceName": "multiregionaccesspoint",
                "resourceArn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getMultiRegionAccessPointPolicy": {
        "privilege": "GetMultiRegionAccessPointPolicy",
        "description": "Grants permission to returns the access point policy associated with the specified multi region access point",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "multiregionaccesspoint": {
                "resourceName": "multiregionaccesspoint",
                "resourceArn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getMultiRegionAccessPointPolicyStatus": {
        "privilege": "GetMultiRegionAccessPointPolicyStatus",
        "description": "Grants permission to return the policy status for a specific multi region access point policy",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "multiregionaccesspoint": {
                "resourceName": "multiregionaccesspoint",
                "resourceArn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObject": {
        "privilege": "GetObject",
        "description": "Grants permission to retrieve objects from Amazon S3",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectAcl": {
        "privilege": "GetObjectAcl",
        "description": "Grants permission to return the access control list (ACL) of an object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectAttributes": {
        "privilege": "GetObjectAttributes",
        "description": "Grants permission to retrieve attributes related to a specific object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectLegalHold": {
        "privilege": "GetObjectLegalHold",
        "description": "Grants permission to get an object's current Legal Hold status",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectRetention": {
        "privilege": "GetObjectRetention",
        "description": "Grants permission to retrieve the retention settings for an object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectTagging": {
        "privilege": "GetObjectTagging",
        "description": "Grants permission to return the tag set of an object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectTorrent": {
        "privilege": "GetObjectTorrent",
        "description": "Grants permission to return torrent files from an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTorrent.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectVersion": {
        "privilege": "GetObjectVersion",
        "description": "Grants permission to retrieve a specific version of an object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectVersionAcl": {
        "privilege": "GetObjectVersionAcl",
        "description": "Grants permission to return the access control list (ACL) of a specific object version",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectVersionAttributes": {
        "privilege": "GetObjectVersionAttributes",
        "description": "Grants permission to retrieve attributes related to a specific version of an object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectVersionForReplication": {
        "privilege": "GetObjectVersionForReplication",
        "description": "Grants permission to replicate both unencrypted objects and objects encrypted with SSE-S3 or SSE-KMS",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-config-for-kms-objects.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectVersionTagging": {
        "privilege": "GetObjectVersionTagging",
        "description": "Grants permission to return the tag set for a specific version of the object",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getObjectVersionTorrent": {
        "privilege": "GetObjectVersionTorrent",
        "description": "Grants permission to get Torrent files about a different version using the versionId subresource",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTorrent.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getReplicationConfiguration": {
        "privilege": "GetReplicationConfiguration",
        "description": "Grants permission to get the replication configuration information set on an Amazon S3 bucket",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getStorageLensConfiguration": {
        "privilege": "GetStorageLensConfiguration",
        "description": "Grants permission to get an Amazon S3 Storage Lens configuration",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetStorageLensConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "storagelensconfiguration": {
                "resourceName": "storagelensconfiguration",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getStorageLensConfigurationTagging": {
        "privilege": "GetStorageLensConfigurationTagging",
        "description": "Grants permission to get the tag set of an existing Amazon S3 Storage Lens configuration",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetStorageLensConfigurationTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "storagelensconfiguration": {
                "resourceName": "storagelensconfiguration",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getStorageLensDashboard": {
        "privilege": "GetStorageLensDashboard",
        "description": "Grants permission to get an Amazon S3 Storage Lens dashboard",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_dashboard.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "storagelensconfiguration": {
                "resourceName": "storagelensconfiguration",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "initiateReplication": {
        "privilege": "InitiateReplication",
        "description": "Grants permission to initiate the replication process by setting replication status of an object to pending",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listAccessPoints": {
        "privilege": "ListAccessPoints",
        "description": "Grants permission to list access points",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "listAccessPointsForObjectLambda": {
        "privilege": "ListAccessPointsForObjectLambda",
        "description": "Grants permission to list object lambda enabled accesspoints",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "listAllMyBuckets": {
        "privilege": "ListAllMyBuckets",
        "description": "Grants permission to list all buckets owned by the authenticated sender of the request",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "listBucket": {
        "privilege": "ListBucket",
        "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:delimiter": {
                "condition": "s3:delimiter",
                "description": "Filters access by delimiter parameter",
                "type": "String"
            },
            "s3:prefix": {
                "condition": "s3:prefix",
                "description": "Filters access by key name prefix",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listBucketMultipartUploads": {
        "privilege": "ListBucketMultipartUploads",
        "description": "Grants permission to list in-progress multipart uploads",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listBucketVersions": {
        "privilege": "ListBucketVersions",
        "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectVersions.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:delimiter": {
                "condition": "s3:delimiter",
                "description": "Filters access by delimiter parameter",
                "type": "String"
            },
            "s3:prefix": {
                "condition": "s3:prefix",
                "description": "Filters access by key name prefix",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listJobs": {
        "privilege": "ListJobs",
        "description": "Grants permission to list current jobs and jobs that have ended recently",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "listMultiRegionAccessPoints": {
        "privilege": "ListMultiRegionAccessPoints",
        "description": "Grants permission to list multi region access points",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "listMultipartUploadParts": {
        "privilege": "ListMultipartUploadParts",
        "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "listStorageLensConfigurations": {
        "privilege": "ListStorageLensConfigurations",
        "description": "Grants permission to list Amazon S3 Storage Lens configurations",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListStorageLensConfigurations.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "objectOwnerOverrideToBucketOwner": {
        "privilege": "ObjectOwnerOverrideToBucketOwner",
        "description": "Grants permission to change replica ownership",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-change-owner.html#repl-ownership-add-role-permission",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putAccelerateConfiguration": {
        "privilege": "PutAccelerateConfiguration",
        "description": "Grants permission to use the accelerate subresource to set the Transfer Acceleration state of an existing S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putAccessPointConfigurationForObjectLambda": {
        "privilege": "PutAccessPointConfigurationForObjectLambda",
        "description": "Grants permission to set the configuration of the object lambda enabled access point",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putAccessPointPolicy": {
        "privilege": "PutAccessPointPolicy",
        "description": "Grants permission to associate an access policy with a specified access point",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "accesspoint": {
                "resourceName": "accesspoint",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putAccessPointPolicyForObjectLambda": {
        "privilege": "PutAccessPointPolicyForObjectLambda",
        "description": "Grants permission to associate an access policy with a specified object lambda enabled access point",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "objectlambdaaccesspoint": {
                "resourceName": "objectlambdaaccesspoint",
                "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putAccessPointPublicAccessBlock": {
        "privilege": "PutAccessPointPublicAccessBlock",
        "description": "Grants permission to associate public access block configurations with a specified access point, while creating a access point",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html#access-control-block-public-access-examples-access-point",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "putAccountPublicAccessBlock": {
        "privilege": "PutAccountPublicAccessBlock",
        "description": "Grants permission to create or modify the PublicAccessBlock configuration for an AWS account",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {}
    },
    "putAnalyticsConfiguration": {
        "privilege": "PutAnalyticsConfiguration",
        "description": "Grants permission to set an analytics configuration for the bucket, specified by the analytics configuration ID",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketAcl": {
        "privilege": "PutBucketAcl",
        "description": "Grants permission to set the permissions on an existing bucket using access control lists (ACLs)",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketCORS": {
        "privilege": "PutBucketCORS",
        "description": "Grants permission to set the CORS configuration for an Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketLogging": {
        "privilege": "PutBucketLogging",
        "description": "Grants permission to set the logging parameters for an Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLogging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketNotification": {
        "privilege": "PutBucketNotification",
        "description": "Grants permission to receive notifications when certain events happen in an Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotification.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketObjectLockConfiguration": {
        "privilege": "PutBucketObjectLockConfiguration",
        "description": "Grants permission to put Object Lock configuration on a specific bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLockConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketOwnershipControls": {
        "privilege": "PutBucketOwnershipControls",
        "description": "Grants permission to add, replace or delete ownership controls on a bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketOwnershipControls.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketPolicy": {
        "privilege": "PutBucketPolicy",
        "description": "Grants permission to add or replace a bucket policy on a bucket",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketPublicAccessBlock": {
        "privilege": "PutBucketPublicAccessBlock",
        "description": "Grants permission to create or modify the PublicAccessBlock configuration for a specific Amazon S3 bucket",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketRequestPayment": {
        "privilege": "PutBucketRequestPayment",
        "description": "Grants permission to set the request payment configuration of a bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketRequestPayment.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketTagging": {
        "privilege": "PutBucketTagging",
        "description": "Grants permission to add a set of tags to an existing Amazon S3 bucket",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketVersioning": {
        "privilege": "PutBucketVersioning",
        "description": "Grants permission to set the versioning state of an existing Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putBucketWebsite": {
        "privilege": "PutBucketWebsite",
        "description": "Grants permission to set the configuration of the website that is specified in the website subresource",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putEncryptionConfiguration": {
        "privilege": "PutEncryptionConfiguration",
        "description": "Grants permission to set the encryption configuration for an Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putIntelligentTieringConfiguration": {
        "privilege": "PutIntelligentTieringConfiguration",
        "description": "Grants permission to create new or update or delete an existing Amazon S3 Intelligent Tiering configuration",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putInventoryConfiguration": {
        "privilege": "PutInventoryConfiguration",
        "description": "Grants permission to add an inventory configuration to the bucket, identified by the inventory ID",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putJobTagging": {
        "privilege": "PutJobTagging",
        "description": "Grants permission to replace tags on an existing Amazon S3 Batch Operations job",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:ExistingJobPriority": {
                "condition": "s3:ExistingJobPriority",
                "description": "Filters access by priority range to cancelling existing jobs",
                "type": "Numeric"
            },
            "s3:ExistingJobOperation": {
                "condition": "s3:ExistingJobOperation",
                "description": "Filters access by operation to updating the job priority",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {
            "job": {
                "resourceName": "job",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putLifecycleConfiguration": {
        "privilege": "PutLifecycleConfiguration",
        "description": "Grants permission to create a new lifecycle configuration for the bucket or replace an existing lifecycle configuration",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putMetricsConfiguration": {
        "privilege": "PutMetricsConfiguration",
        "description": "Grants permission to set or update a metrics configuration for the CloudWatch request metrics from an Amazon S3 bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putMultiRegionAccessPointPolicy": {
        "privilege": "PutMultiRegionAccessPointPolicy",
        "description": "Grants permission to associate an access policy with a specified multi region access point",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "multiregionaccesspoint": {
                "resourceName": "multiregionaccesspoint",
                "resourceArn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putObject": {
        "privilege": "PutObject",
        "description": "Grants permission to add an object to a bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:RequestObjectTag/<key>": {
                "condition": "s3:RequestObjectTag/<key>",
                "description": "Filters access by the tag keys and values to be added to objects",
                "type": "String"
            },
            "s3:RequestObjectTagKeys": {
                "condition": "s3:RequestObjectTagKeys",
                "description": "Filters access by the tag keys to be added to objects",
                "type": "ArrayOfString"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putObjectAcl": {
        "privilege": "PutObjectAcl",
        "description": "Grants permission to set the access control list (ACL) permissions for new or existing objects in an S3 bucket",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putObjectLegalHold": {
        "privilege": "PutObjectLegalHold",
        "description": "Grants permission to apply a Legal Hold configuration to the specified object",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLegalHold.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putObjectRetention": {
        "privilege": "PutObjectRetention",
        "description": "Grants permission to place an Object Retention configuration on an object",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectRetention.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putObjectTagging": {
        "privilege": "PutObjectTagging",
        "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:RequestObjectTag/<key>": {
                "condition": "s3:RequestObjectTag/<key>",
                "description": "Filters access by the tag keys and values to be added to objects",
                "type": "String"
            },
            "s3:RequestObjectTagKeys": {
                "condition": "s3:RequestObjectTagKeys",
                "description": "Filters access by the tag keys to be added to objects",
                "type": "ArrayOfString"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putObjectVersionAcl": {
        "privilege": "PutObjectVersionAcl",
        "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
        "accessLevel": "Permissions management",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putObjectVersionTagging": {
        "privilege": "PutObjectVersionTagging",
        "description": "Grants permission to set the supplied tag-set for a specific version of an object",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:ExistingObjectTag/<key>": {
                "condition": "s3:ExistingObjectTag/<key>",
                "description": "Filters access by existing object tag key and value",
                "type": "String"
            },
            "s3:RequestObjectTag/<key>": {
                "condition": "s3:RequestObjectTag/<key>",
                "description": "Filters access by the tag keys and values to be added to objects",
                "type": "String"
            },
            "s3:RequestObjectTagKeys": {
                "condition": "s3:RequestObjectTagKeys",
                "description": "Filters access by the tag keys to be added to objects",
                "type": "ArrayOfString"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:versionid": {
                "condition": "s3:versionid",
                "description": "Filters access by a specific object version",
                "type": "String"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putReplicationConfiguration": {
        "privilege": "PutReplicationConfiguration",
        "description": "Grants permission to create a new replication configuration or replace an existing one",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html",
        "service": "s3",
        "dependentActions": [
            "iam:PassRole"
        ],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "bucket": {
                "resourceName": "bucket",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putStorageLensConfiguration": {
        "privilege": "PutStorageLensConfiguration",
        "description": "Grants permission to create or update an Amazon S3 Storage Lens configuration",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutStorageLensConfiguration.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {}
    },
    "putStorageLensConfigurationTagging": {
        "privilege": "PutStorageLensConfigurationTagging",
        "description": "Grants permission to put or replace tags on an existing Amazon S3 Storage Lens configuration",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutStorageLensConfigurationTagging.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access by the tag keys that are passed in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access by the tags that are passed in the request",
                "type": "String"
            }
        },
        "resources": {
            "storagelensconfiguration": {
                "resourceName": "storagelensconfiguration",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "replicateDelete": {
        "privilege": "ReplicateDelete",
        "description": "Grants permission to replicate delete markers to the destination bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "replicateObject": {
        "privilege": "ReplicateObject",
        "description": "Grants permission to replicate objects and object tags to the destination bucket",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "replicateTags": {
        "privilege": "ReplicateTags",
        "description": "Grants permission to replicate object tags to the destination bucket",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "restoreObject": {
        "privilege": "RestoreObject",
        "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:DataAccessPointAccount": {
                "condition": "s3:DataAccessPointAccount",
                "description": "Filters access by the AWS Account ID that owns the access point",
                "type": "String"
            },
            "s3:DataAccessPointArn": {
                "condition": "s3:DataAccessPointArn",
                "description": "Filters access by an access point Amazon Resource Name (ARN)",
                "type": "String"
            },
            "s3:AccessPointNetworkOrigin": {
                "condition": "s3:AccessPointNetworkOrigin",
                "description": "Filters access by the network origin (Internet or VPC)",
                "type": "String"
            },
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            }
        },
        "resources": {
            "object": {
                "resourceName": "object",
                "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateJobPriority": {
        "privilege": "UpdateJobPriority",
        "description": "Grants permission to update the priority of an existing job",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:RequestJobPriority": {
                "condition": "s3:RequestJobPriority",
                "description": "Filters access by priority range to creating new jobs",
                "type": "Numeric"
            },
            "s3:ExistingJobPriority": {
                "condition": "s3:ExistingJobPriority",
                "description": "Filters access by priority range to cancelling existing jobs",
                "type": "Numeric"
            },
            "s3:ExistingJobOperation": {
                "condition": "s3:ExistingJobOperation",
                "description": "Filters access by operation to updating the job priority",
                "type": "String"
            }
        },
        "resources": {
            "job": {
                "resourceName": "job",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "updateJobStatus": {
        "privilege": "UpdateJobStatus",
        "description": "Grants permission to update the status for the specified job",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html",
        "service": "s3",
        "dependentActions": [],
        "privConditions": {
            "s3:authType": {
                "condition": "s3:authType",
                "description": "Filters access by authentication method",
                "type": "String"
            },
            "s3:ResourceAccount": {
                "condition": "s3:ResourceAccount",
                "description": "Filters access by the resource owner AWS account ID",
                "type": "String"
            },
            "s3:signatureAge": {
                "condition": "s3:signatureAge",
                "description": "Filters access by the age in milliseconds of the request signature",
                "type": "Numeric"
            },
            "s3:signatureversion": {
                "condition": "s3:signatureversion",
                "description": "Filters access by the version of AWS Signature used on the request",
                "type": "String"
            },
            "s3:TlsVersion": {
                "condition": "s3:TlsVersion",
                "description": "Filters access by the TLS version used by the client",
                "type": "Numeric"
            },
            "s3:ExistingJobPriority": {
                "condition": "s3:ExistingJobPriority",
                "description": "Filters access by priority range to cancelling existing jobs",
                "type": "Numeric"
            },
            "s3:ExistingJobOperation": {
                "condition": "s3:ExistingJobOperation",
                "description": "Filters access by operation to updating the job priority",
                "type": "String"
            },
            "s3:JobSuspendedCause": {
                "condition": "s3:JobSuspendedCause",
                "description": "Filters access by a specific job suspended cause (for example, AWAITING_CONFIRMATION) to cancelling suspended jobs",
                "type": "String"
            }
        },
        "resources": {
            "job": {
                "resourceName": "job",
                "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
                "required": true,
                "resourceConditions": {}
            }
        }
    }
}
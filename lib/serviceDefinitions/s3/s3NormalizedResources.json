{
    "accesspoint": {
        "resourceName": "accesspoint",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetAccessPointPolicy": {
                "privilege": "GetAccessPointPolicy",
                "description": "Grants permission to returns the access point policy associated with the specified access point",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetAccessPointPolicyStatus": {
                "privilege": "GetAccessPointPolicyStatus",
                "description": "Grants permission to return the policy status for a specific access point policy",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyStatus.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateAccessPoint": {
                "privilege": "CreateAccessPoint",
                "description": "Grants permission to create a new access point",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:locationconstraint": {
                        "condition": "s3:locationconstraint",
                        "description": "Filters access by a specific Region",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteAccessPoint": {
                "privilege": "DeleteAccessPoint",
                "description": "Grants permission to delete the access point named in the URI",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html",
                "privConditions": {
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "DeleteAccessPointPolicy": {
                "privilege": "DeleteAccessPointPolicy",
                "description": "Grants permission to delete the policy on a specified access point",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html",
                "privConditions": {
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutAccessPointPolicy": {
                "privilege": "PutAccessPointPolicy",
                "description": "Grants permission to associate an access policy with a specified access point",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {}
    },
    "bucket": {
        "resourceName": "bucket",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3:::${BucketName}",
        "resourceConditions": {},
        "listPrivileges": {
            "ListBucket": {
                "privilege": "ListBucket",
                "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:delimiter": {
                        "condition": "s3:delimiter",
                        "description": "Filters access by delimiter parameter",
                        "type": "String"
                    },
                    "s3:prefix": {
                        "condition": "s3:prefix",
                        "description": "Filters access by key name prefix",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListBucketMultipartUploads": {
                "privilege": "ListBucketMultipartUploads",
                "description": "Grants permission to list in-progress multipart uploads",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ListBucketVersions": {
                "privilege": "ListBucketVersions",
                "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectVersions.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:delimiter": {
                        "condition": "s3:delimiter",
                        "description": "Filters access by delimiter parameter",
                        "type": "String"
                    },
                    "s3:prefix": {
                        "condition": "s3:prefix",
                        "description": "Filters access by key name prefix",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetAccelerateConfiguration": {
                "privilege": "GetAccelerateConfiguration",
                "description": "Grants permission to uses the accelerate subresource to return the Transfer Acceleration state of a bucket, which is either Enabled or Suspended",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetAnalyticsConfiguration": {
                "privilege": "GetAnalyticsConfiguration",
                "description": "Grants permission to get an analytics configuration from an Amazon S3 bucket, identified by the analytics configuration ID",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketAcl": {
                "privilege": "GetBucketAcl",
                "description": "Grants permission to use the acl subresource to return the access control list (ACL) of an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAcl.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketCORS": {
                "privilege": "GetBucketCORS",
                "description": "Grants permission to return the CORS configuration information set for an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketCors.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketLocation": {
                "privilege": "GetBucketLocation",
                "description": "Grants permission to return the Region that an Amazon S3 bucket resides in",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLocation.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketLogging": {
                "privilege": "GetBucketLogging",
                "description": "Grants permission to return the logging status of an Amazon S3 bucket and the permissions users have to view or modify that status",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketNotification": {
                "privilege": "GetBucketNotification",
                "description": "Grants permission to get the notification configuration of an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotification.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketObjectLockConfiguration": {
                "privilege": "GetBucketObjectLockConfiguration",
                "description": "Grants permission to get the Object Lock configuration of an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLockConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketOwnershipControls": {
                "privilege": "GetBucketOwnershipControls",
                "description": "Grants permission to retrieve ownership controls on a bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketOwnershipControls.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketPolicy": {
                "privilege": "GetBucketPolicy",
                "description": "Grants permission to return the policy of the specified bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketPolicyStatus": {
                "privilege": "GetBucketPolicyStatus",
                "description": "Grants permission to retrieve the policy status for a specific Amazon S3 bucket, which indicates whether the bucket is public",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketPublicAccessBlock": {
                "privilege": "GetBucketPublicAccessBlock",
                "description": "Grants permission to retrieve the PublicAccessBlock configuration for an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketRequestPayment": {
                "privilege": "GetBucketRequestPayment",
                "description": "Grants permission to return the request payment configuration for an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketRequestPayment.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketTagging": {
                "privilege": "GetBucketTagging",
                "description": "Grants permission to return the tag set associated with an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketVersioning": {
                "privilege": "GetBucketVersioning",
                "description": "Grants permission to return the versioning state of an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetBucketWebsite": {
                "privilege": "GetBucketWebsite",
                "description": "Grants permission to return the website configuration for an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetEncryptionConfiguration": {
                "privilege": "GetEncryptionConfiguration",
                "description": "Grants permission to return the default encryption configuration an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetIntelligentTieringConfiguration": {
                "privilege": "GetIntelligentTieringConfiguration",
                "description": "Grants permission to get an or list all Amazon S3 Intelligent Tiering configuration in a S3 Bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetInventoryConfiguration": {
                "privilege": "GetInventoryConfiguration",
                "description": "Grants permission to return an inventory configuration from an Amazon S3 bucket, identified by the inventory configuration ID",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetLifecycleConfiguration": {
                "privilege": "GetLifecycleConfiguration",
                "description": "Grants permission to return the lifecycle configuration information set on an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetMetricsConfiguration": {
                "privilege": "GetMetricsConfiguration",
                "description": "Grants permission to get a metrics configuration from an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetReplicationConfiguration": {
                "privilege": "GetReplicationConfiguration",
                "description": "Grants permission to get the replication configuration information set on an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateBucket": {
                "privilege": "CreateBucket",
                "description": "Grants permission to create a new bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:locationconstraint": {
                        "condition": "s3:locationconstraint",
                        "description": "Filters access by a specific Region",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteBucket": {
                "privilege": "DeleteBucket",
                "description": "Grants permission to delete the bucket named in the URI",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteBucketWebsite": {
                "privilege": "DeleteBucketWebsite",
                "description": "Grants permission to remove the website configuration for a bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutAccelerateConfiguration": {
                "privilege": "PutAccelerateConfiguration",
                "description": "Grants permission to use the accelerate subresource to set the Transfer Acceleration state of an existing S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAccelerateConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutAnalyticsConfiguration": {
                "privilege": "PutAnalyticsConfiguration",
                "description": "Grants permission to set an analytics configuration for the bucket, specified by the analytics configuration ID",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketCORS": {
                "privilege": "PutBucketCORS",
                "description": "Grants permission to set the CORS configuration for an Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketLogging": {
                "privilege": "PutBucketLogging",
                "description": "Grants permission to set the logging parameters for an Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLogging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketNotification": {
                "privilege": "PutBucketNotification",
                "description": "Grants permission to receive notifications when certain events happen in an Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotification.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketObjectLockConfiguration": {
                "privilege": "PutBucketObjectLockConfiguration",
                "description": "Grants permission to put Object Lock configuration on a specific bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLockConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketOwnershipControls": {
                "privilege": "PutBucketOwnershipControls",
                "description": "Grants permission to add, replace or delete ownership controls on a bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketOwnershipControls.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketRequestPayment": {
                "privilege": "PutBucketRequestPayment",
                "description": "Grants permission to set the request payment configuration of a bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketRequestPayment.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketVersioning": {
                "privilege": "PutBucketVersioning",
                "description": "Grants permission to set the versioning state of an existing Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketWebsite": {
                "privilege": "PutBucketWebsite",
                "description": "Grants permission to set the configuration of the website that is specified in the website subresource",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutEncryptionConfiguration": {
                "privilege": "PutEncryptionConfiguration",
                "description": "Grants permission to set the encryption configuration for an Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutIntelligentTieringConfiguration": {
                "privilege": "PutIntelligentTieringConfiguration",
                "description": "Grants permission to create new or update or delete an existing Amazon S3 Intelligent Tiering configuration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutInventoryConfiguration": {
                "privilege": "PutInventoryConfiguration",
                "description": "Grants permission to add an inventory configuration to the bucket, identified by the inventory ID",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutLifecycleConfiguration": {
                "privilege": "PutLifecycleConfiguration",
                "description": "Grants permission to create a new lifecycle configuration for the bucket or replace an existing lifecycle configuration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutMetricsConfiguration": {
                "privilege": "PutMetricsConfiguration",
                "description": "Grants permission to set or update a metrics configuration for the CloudWatch request metrics from an Amazon S3 bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutReplicationConfiguration": {
                "privilege": "PutReplicationConfiguration",
                "description": "Grants permission to create a new replication configuration or replace an existing one",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [
                    "iam:PassRole"
                ],
                "required": true
            }
        },
        "permManPrivileges": {
            "DeleteBucketPolicy": {
                "privilege": "DeleteBucketPolicy",
                "description": "Grants permission to delete the policy on a specified bucket",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketAcl": {
                "privilege": "PutBucketAcl",
                "description": "Grants permission to set the permissions on an existing bucket using access control lists (ACLs)",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketPolicy": {
                "privilege": "PutBucketPolicy",
                "description": "Grants permission to add or replace a bucket policy on a bucket",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutBucketPublicAccessBlock": {
                "privilege": "PutBucketPublicAccessBlock",
                "description": "Grants permission to create or modify the PublicAccessBlock configuration for a specific Amazon S3 bucket",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "PutBucketTagging": {
                "privilege": "PutBucketTagging",
                "description": "Grants permission to add a set of tags to an existing Amazon S3 bucket",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "object": {
        "resourceName": "object",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
        "resourceConditions": {},
        "listPrivileges": {
            "ListMultipartUploadParts": {
                "privilege": "ListMultipartUploadParts",
                "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetObject": {
                "privilege": "GetObject",
                "description": "Grants permission to retrieve objects from Amazon S3",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectAcl": {
                "privilege": "GetObjectAcl",
                "description": "Grants permission to return the access control list (ACL) of an object",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectAttributes": {
                "privilege": "GetObjectAttributes",
                "description": "Grants permission to retrieve attributes related to a specific object",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectLegalHold": {
                "privilege": "GetObjectLegalHold",
                "description": "Grants permission to get an object's current Legal Hold status",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectLegalHold.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectRetention": {
                "privilege": "GetObjectRetention",
                "description": "Grants permission to retrieve the retention settings for an object",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectRetention.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectTagging": {
                "privilege": "GetObjectTagging",
                "description": "Grants permission to return the tag set of an object",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectTorrent": {
                "privilege": "GetObjectTorrent",
                "description": "Grants permission to return torrent files from an Amazon S3 bucket",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTorrent.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectVersion": {
                "privilege": "GetObjectVersion",
                "description": "Grants permission to retrieve a specific version of an object",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectVersionAcl": {
                "privilege": "GetObjectVersionAcl",
                "description": "Grants permission to return the access control list (ACL) of a specific object version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectVersionAttributes": {
                "privilege": "GetObjectVersionAttributes",
                "description": "Grants permission to retrieve attributes related to a specific version of an object",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAttributes.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectVersionForReplication": {
                "privilege": "GetObjectVersionForReplication",
                "description": "Grants permission to replicate both unencrypted objects and objects encrypted with SSE-S3 or SSE-KMS",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-config-for-kms-objects.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectVersionTagging": {
                "privilege": "GetObjectVersionTagging",
                "description": "Grants permission to return the tag set for a specific version of the object",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetObjectVersionTorrent": {
                "privilege": "GetObjectVersionTorrent",
                "description": "Grants permission to get Torrent files about a different version using the versionId subresource",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTorrent.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "AbortMultipartUpload": {
                "privilege": "AbortMultipartUpload",
                "description": "Grants permission to abort a multipart upload",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html",
                "privConditions": {
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteObject": {
                "privilege": "DeleteObject",
                "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteObjectVersion": {
                "privilege": "DeleteObjectVersion",
                "description": "Grants permission to remove a specific version of an object",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "InitiateReplication": {
                "privilege": "InitiateReplication",
                "description": "Grants permission to initiate the replication process by setting replication status of an object to pending",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
                "privConditions": {
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutObject": {
                "privilege": "PutObject",
                "description": "Grants permission to add an object to a bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:RequestObjectTag/<key>": {
                        "condition": "s3:RequestObjectTag/<key>",
                        "description": "Filters access by the tag keys and values to be added to objects",
                        "type": "String"
                    },
                    "s3:RequestObjectTagKeys": {
                        "condition": "s3:RequestObjectTagKeys",
                        "description": "Filters access by the tag keys to be added to objects",
                        "type": "ArrayOfString"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutObjectLegalHold": {
                "privilege": "PutObjectLegalHold",
                "description": "Grants permission to apply a Legal Hold configuration to the specified object",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectLegalHold.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutObjectRetention": {
                "privilege": "PutObjectRetention",
                "description": "Grants permission to place an Object Retention configuration on an object",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectRetention.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplicateDelete": {
                "privilege": "ReplicateDelete",
                "description": "Grants permission to replicate delete markers to the destination bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplicateObject": {
                "privilege": "ReplicateObject",
                "description": "Grants permission to replicate objects and object tags to the destination bucket",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "RestoreObject": {
                "privilege": "RestoreObject",
                "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "BypassGovernanceRetention": {
                "privilege": "BypassGovernanceRetention",
                "description": "Grants permission to allow circumvention of governance-mode object retention settings",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-bypass",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:RequestObjectTag/<key>": {
                        "condition": "s3:RequestObjectTag/<key>",
                        "description": "Filters access by the tag keys and values to be added to objects",
                        "type": "String"
                    },
                    "s3:RequestObjectTagKeys": {
                        "condition": "s3:RequestObjectTagKeys",
                        "description": "Filters access by the tag keys to be added to objects",
                        "type": "ArrayOfString"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ObjectOwnerOverrideToBucketOwner": {
                "privilege": "ObjectOwnerOverrideToBucketOwner",
                "description": "Grants permission to change replica ownership",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-change-owner.html#repl-ownership-add-role-permission",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutObjectAcl": {
                "privilege": "PutObjectAcl",
                "description": "Grants permission to set the access control list (ACL) permissions for new or existing objects in an S3 bucket",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutObjectVersionAcl": {
                "privilege": "PutObjectVersionAcl",
                "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "DeleteObjectTagging": {
                "privilege": "DeleteObjectTagging",
                "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteObjectVersionTagging": {
                "privilege": "DeleteObjectVersionTagging",
                "description": "Grants permission to remove the entire tag set for a specific version of the object",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutObjectTagging": {
                "privilege": "PutObjectTagging",
                "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:RequestObjectTag/<key>": {
                        "condition": "s3:RequestObjectTag/<key>",
                        "description": "Filters access by the tag keys and values to be added to objects",
                        "type": "String"
                    },
                    "s3:RequestObjectTagKeys": {
                        "condition": "s3:RequestObjectTagKeys",
                        "description": "Filters access by the tag keys to be added to objects",
                        "type": "ArrayOfString"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutObjectVersionTagging": {
                "privilege": "PutObjectVersionTagging",
                "description": "Grants permission to set the supplied tag-set for a specific version of an object",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:ExistingObjectTag/<key>": {
                        "condition": "s3:ExistingObjectTag/<key>",
                        "description": "Filters access by existing object tag key and value",
                        "type": "String"
                    },
                    "s3:RequestObjectTag/<key>": {
                        "condition": "s3:RequestObjectTag/<key>",
                        "description": "Filters access by the tag keys and values to be added to objects",
                        "type": "String"
                    },
                    "s3:RequestObjectTagKeys": {
                        "condition": "s3:RequestObjectTagKeys",
                        "description": "Filters access by the tag keys to be added to objects",
                        "type": "ArrayOfString"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:versionid": {
                        "condition": "s3:versionid",
                        "description": "Filters access by a specific object version",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "ReplicateTags": {
                "privilege": "ReplicateTags",
                "description": "Grants permission to replicate object tags to the destination bucket",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "job": {
        "resourceName": "job",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeJob": {
                "privilege": "DescribeJob",
                "description": "Grants permission to retrieve the configuration parameters and status for a batch operations job",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetJobTagging": {
                "privilege": "GetJobTagging",
                "description": "Grants permission to return the tag set of an existing Amazon S3 Batch Operations job",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "UpdateJobPriority": {
                "privilege": "UpdateJobPriority",
                "description": "Grants permission to update the priority of an existing job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:RequestJobPriority": {
                        "condition": "s3:RequestJobPriority",
                        "description": "Filters access by priority range to creating new jobs",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobPriority": {
                        "condition": "s3:ExistingJobPriority",
                        "description": "Filters access by priority range to cancelling existing jobs",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobOperation": {
                        "condition": "s3:ExistingJobOperation",
                        "description": "Filters access by operation to updating the job priority",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateJobStatus": {
                "privilege": "UpdateJobStatus",
                "description": "Grants permission to update the status for the specified job",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobPriority": {
                        "condition": "s3:ExistingJobPriority",
                        "description": "Filters access by priority range to cancelling existing jobs",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobOperation": {
                        "condition": "s3:ExistingJobOperation",
                        "description": "Filters access by operation to updating the job priority",
                        "type": "String"
                    },
                    "s3:JobSuspendedCause": {
                        "condition": "s3:JobSuspendedCause",
                        "description": "Filters access by a specific job suspended cause (for example, AWAITING_CONFIRMATION) to cancelling suspended jobs",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "DeleteJobTagging": {
                "privilege": "DeleteJobTagging",
                "description": "Grants permission to remove tags from an existing Amazon S3 Batch Operations job",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobPriority": {
                        "condition": "s3:ExistingJobPriority",
                        "description": "Filters access by priority range to cancelling existing jobs",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobOperation": {
                        "condition": "s3:ExistingJobOperation",
                        "description": "Filters access by operation to updating the job priority",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutJobTagging": {
                "privilege": "PutJobTagging",
                "description": "Grants permission to replace tags on an existing Amazon S3 Batch Operations job",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobPriority": {
                        "condition": "s3:ExistingJobPriority",
                        "description": "Filters access by priority range to cancelling existing jobs",
                        "type": "Numeric"
                    },
                    "s3:ExistingJobOperation": {
                        "condition": "s3:ExistingJobOperation",
                        "description": "Filters access by operation to updating the job priority",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "storagelensconfiguration": {
        "resourceName": "storagelensconfiguration",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetStorageLensConfiguration": {
                "privilege": "GetStorageLensConfiguration",
                "description": "Grants permission to get an Amazon S3 Storage Lens configuration",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetStorageLensConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetStorageLensConfigurationTagging": {
                "privilege": "GetStorageLensConfigurationTagging",
                "description": "Grants permission to get the tag set of an existing Amazon S3 Storage Lens configuration",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetStorageLensConfigurationTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetStorageLensDashboard": {
                "privilege": "GetStorageLensDashboard",
                "description": "Grants permission to get an Amazon S3 Storage Lens dashboard",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_dashboard.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "DeleteStorageLensConfiguration": {
                "privilege": "DeleteStorageLensConfiguration",
                "description": "Grants permission to delete an existing Amazon S3 Storage Lens configuration",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteStorageLensConfiguration.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "DeleteStorageLensConfigurationTagging": {
                "privilege": "DeleteStorageLensConfigurationTagging",
                "description": "Grants permission to remove tags from an existing Amazon S3 Storage Lens configuration",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteStorageLensConfigurationTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutStorageLensConfigurationTagging": {
                "privilege": "PutStorageLensConfigurationTagging",
                "description": "Grants permission to put or replace tags on an existing Amazon S3 Storage Lens configuration",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutStorageLensConfigurationTagging.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        }
    },
    "objectlambdaaccesspoint": {
        "resourceName": "objectlambdaaccesspoint",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetAccessPointConfigurationForObjectLambda": {
                "privilege": "GetAccessPointConfigurationForObjectLambda",
                "description": "Grants permission to retrieve the configuration of the object lambda enabled access point",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetAccessPointForObjectLambda": {
                "privilege": "GetAccessPointForObjectLambda",
                "description": "Grants permission to create an object lambda enabled accesspoint",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetAccessPointPolicyForObjectLambda": {
                "privilege": "GetAccessPointPolicyForObjectLambda",
                "description": "Grants permission to returns the access point policy associated with the specified object lambda enabled access point",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetAccessPointPolicyStatusForObjectLambda": {
                "privilege": "GetAccessPointPolicyStatusForObjectLambda",
                "description": "Grants permission to return the policy status for a specific object lambda access point policy",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyStatusForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateAccessPointForObjectLambda": {
                "privilege": "CreateAccessPointForObjectLambda",
                "description": "Grants permission to create an object lambda enabled accesspoint",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteAccessPointForObjectLambda": {
                "privilege": "DeleteAccessPointForObjectLambda",
                "description": "Grants permission to delete the object lambda enabled access point named in the URI",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutAccessPointConfigurationForObjectLambda": {
                "privilege": "PutAccessPointConfigurationForObjectLambda",
                "description": "Grants permission to set the configuration of the object lambda enabled access point",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "DeleteAccessPointPolicyForObjectLambda": {
                "privilege": "DeleteAccessPointPolicyForObjectLambda",
                "description": "Grants permission to delete the policy on a specified object lambda enabled access point",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutAccessPointPolicyForObjectLambda": {
                "privilege": "PutAccessPointPolicyForObjectLambda",
                "description": "Grants permission to associate an access policy with a specified object lambda enabled access point",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {}
    },
    "multiregionaccesspoint": {
        "resourceName": "multiregionaccesspoint",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetMultiRegionAccessPoint": {
                "privilege": "GetMultiRegionAccessPoint",
                "description": "Grants permission to return configuration information about the specified multi region access point",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetMultiRegionAccessPointPolicy": {
                "privilege": "GetMultiRegionAccessPointPolicy",
                "description": "Grants permission to returns the access point policy associated with the specified multi region access point",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "GetMultiRegionAccessPointPolicyStatus": {
                "privilege": "GetMultiRegionAccessPointPolicyStatus",
                "description": "Grants permission to return the policy status for a specific multi region access point policy",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateMultiRegionAccessPoint": {
                "privilege": "CreateMultiRegionAccessPoint",
                "description": "Grants permission to create a new multi region access point",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteMultiRegionAccessPoint": {
                "privilege": "DeleteMultiRegionAccessPoint",
                "description": "Grants permission to delete the multi region access point named in the URI",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "PutMultiRegionAccessPointPolicy": {
                "privilege": "PutMultiRegionAccessPointPolicy",
                "description": "Grants permission to associate an access policy with a specified multi region access point",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html",
                "privConditions": {
                    "s3:DataAccessPointAccount": {
                        "condition": "s3:DataAccessPointAccount",
                        "description": "Filters access by the AWS Account ID that owns the access point",
                        "type": "String"
                    },
                    "s3:DataAccessPointArn": {
                        "condition": "s3:DataAccessPointArn",
                        "description": "Filters access by an access point Amazon Resource Name (ARN)",
                        "type": "String"
                    },
                    "s3:AccessPointNetworkOrigin": {
                        "condition": "s3:AccessPointNetworkOrigin",
                        "description": "Filters access by the network origin (Internet or VPC)",
                        "type": "String"
                    },
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {}
    },
    "multiregionaccesspointrequestarn": {
        "resourceName": "multiregionaccesspointrequestarn",
        "service": "s3",
        "resourceArn": "arn:${Partition}:s3:us-west-2:${Account}:async-request/mrap/${Operation}/${Token}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "DescribeMultiRegionAccessPointOperation": {
                "privilege": "DescribeMultiRegionAccessPointOperation",
                "description": "Grants permission to retrieve the configurations for a multi region access point",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html",
                "privConditions": {
                    "s3:authType": {
                        "condition": "s3:authType",
                        "description": "Filters access by authentication method",
                        "type": "String"
                    },
                    "s3:ResourceAccount": {
                        "condition": "s3:ResourceAccount",
                        "description": "Filters access by the resource owner AWS account ID",
                        "type": "String"
                    },
                    "s3:signatureversion": {
                        "condition": "s3:signatureversion",
                        "description": "Filters access by the version of AWS Signature used on the request",
                        "type": "String"
                    },
                    "s3:signatureAge": {
                        "condition": "s3:signatureAge",
                        "description": "Filters access by the age in milliseconds of the request signature",
                        "type": "Numeric"
                    },
                    "s3:TlsVersion": {
                        "condition": "s3:TlsVersion",
                        "description": "Filters access by the TLS version used by the client",
                        "type": "Numeric"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {},
        "permManPrivileges": {},
        "tagPrivileges": {}
    }
}
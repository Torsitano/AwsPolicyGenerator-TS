{
    "deleteAlarms": {
        "privilege": "DeleteAlarms",
        "description": "Grants permission to delete a collection of alarms",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DeleteAlarms.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteAnomalyDetector": {
        "privilege": "DeleteAnomalyDetector",
        "description": "Grants permission to delete the specified anomaly detection model from your account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DeleteAnomalyDetector.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "deleteDashboards": {
        "privilege": "DeleteDashboards",
        "description": "Grants permission to delete all CloudWatch dashboards that you specify",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DeleteDashboards.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dashboard": {
                "resourceName": "dashboard",
                "resourceArn": "arn:${Partition}:cloudwatch::${Account}:dashboard/${DashboardName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "deleteInsightRules": {
        "privilege": "DeleteInsightRules",
        "description": "Grants permission to delete a collection of insight rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DeleteInsightRules.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteMetricStream": {
        "privilege": "DeleteMetricStream",
        "description": "Grants permission to delete the CloudWatch metric stream that you specify",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DeleteMetricStream.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "metricStream": {
                "resourceName": "metric-stream",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:metric-stream/${MetricStreamName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeAlarmHistory": {
        "privilege": "DescribeAlarmHistory",
        "description": "Grants permission to retrieve the history for the specified alarm",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarmHistory.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeAlarms": {
        "privilege": "DescribeAlarms",
        "description": "Grants permission to describe all alarms, currently owned by the user's account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarms.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeAlarmsForMetric": {
        "privilege": "DescribeAlarmsForMetric",
        "description": "Grants permission to describe all alarms configured on the specified metric, currently owned by the user's account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarmsForMetric.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describeAnomalyDetectors": {
        "privilege": "DescribeAnomalyDetectors",
        "description": "Grants permission to list the anomaly detection models that you have created in your account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAnomalyDetectors.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describeInsightRules": {
        "privilege": "DescribeInsightRules",
        "description": "Grants permission to describe all insight rules, currently owned by the user's account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeInsightRules.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "disableAlarmActions": {
        "privilege": "DisableAlarmActions",
        "description": "Grants permission to disable actions for a collection of alarms",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DisableAlarmActions.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "disableInsightRules": {
        "privilege": "DisableInsightRules",
        "description": "Grants permission to disable a collection of insight rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DisableInsightRules.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableAlarmActions": {
        "privilege": "EnableAlarmActions",
        "description": "Grants permission to enable actions for a collection of alarms",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_EnableAlarmActions.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "enableInsightRules": {
        "privilege": "EnableInsightRules",
        "description": "Grants permission to enable a collection of insight rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_EnableInsightRules.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getDashboard": {
        "privilege": "GetDashboard",
        "description": "Grants permission to display the details of the CloudWatch dashboard you specify",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetDashboard.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dashboard": {
                "resourceName": "dashboard",
                "resourceArn": "arn:${Partition}:cloudwatch::${Account}:dashboard/${DashboardName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "getInsightRuleReport": {
        "privilege": "GetInsightRuleReport",
        "description": "Grants permission to return the top-N report of unique contributors over a time range for a given insight rule",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetInsightRuleReport.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getMetricData": {
        "privilege": "GetMetricData",
        "description": "Grants permission to retrieve batch amounts of CloudWatch metric data and perform metric math on retrieved data",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "getMetricStatistics": {
        "privilege": "GetMetricStatistics",
        "description": "Grants permission to retrieve statistics for the specified metric",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "getMetricStream": {
        "privilege": "GetMetricStream",
        "description": "Grants permission to return the details of a CloudWatch metric stream",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStream.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "metricStream": {
                "resourceName": "metric-stream",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:metric-stream/${MetricStreamName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getMetricWidgetImage": {
        "privilege": "GetMetricWidgetImage",
        "description": "Grants permission to retrieve snapshots of metric widgets",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricWidgetImage.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listDashboards": {
        "privilege": "ListDashboards",
        "description": "Grants permission to return a list of all CloudWatch dashboards in your account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListDashboards.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listManagedInsightRules": {
        "privilege": "ListManagedInsightRules",
        "description": "Grants permission to list available managed Insight Rules for a given Resource ARN",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListManagedInsightRules.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            },
            "cloudwatch:requestManagedResourceARNs": {
                "condition": "cloudwatch:requestManagedResourceARNs",
                "description": "Filters access by the Resource ARNs specified in a managed Insight Rule",
                "type": "ArrayOfString"
            }
        },
        "resources": {}
    },
    "listMetricStreams": {
        "privilege": "ListMetricStreams",
        "description": "Grants permission to return a list of all CloudWatch metric streams in your account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetricStreams.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listMetrics": {
        "privilege": "ListMetrics",
        "description": "Grants permission to retrieve a list of valid metrics stored for the AWS account owner",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listTagsForResource": {
        "privilege": "ListTagsForResource",
        "description": "Grants permission to list tags for an Amazon CloudWatch resource",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListTagsForResource.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            },
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putAnomalyDetector": {
        "privilege": "PutAnomalyDetector",
        "description": "Grants permission to create or update an anomaly detection model for a CloudWatch metric",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutAnomalyDetector.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "putCompositeAlarm": {
        "privilege": "PutCompositeAlarm",
        "description": "Grants permission to create or update a composite alarm",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutCompositeAlarm.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            },
            "cloudwatch:AlarmActions": {
                "condition": "cloudwatch:AlarmActions",
                "description": "Filters actions based on defined alarm actions",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putDashboard": {
        "privilege": "PutDashboard",
        "description": "Grants permission to create a CloudWatch dashboard, or update an existing dashboard if it already exists",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutDashboard.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dashboard": {
                "resourceName": "dashboard",
                "resourceArn": "arn:${Partition}:cloudwatch::${Account}:dashboard/${DashboardName}",
                "required": true,
                "resourceConditions": {}
            }
        }
    },
    "putInsightRule": {
        "privilege": "PutInsightRule",
        "description": "Grants permission to create a new insight rule or replace an existing insight rule",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutInsightRule.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            },
            "cloudwatch:requestInsightRuleLogGroups": {
                "condition": "cloudwatch:requestInsightRuleLogGroups",
                "description": "Filters actions based on the Log Groups specified in an Insight Rule",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putManagedInsightRules": {
        "privilege": "PutManagedInsightRules",
        "description": "Grants permission to create managed Insight Rules",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutManagedInsightRules.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            },
            "cloudwatch:requestManagedResourceARNs": {
                "condition": "cloudwatch:requestManagedResourceARNs",
                "description": "Filters access by the Resource ARNs specified in a managed Insight Rule",
                "type": "ArrayOfString"
            }
        },
        "resources": {}
    },
    "putMetricAlarm": {
        "privilege": "PutMetricAlarm",
        "description": "Grants permission to create or update an alarm and associates it with the specified Amazon CloudWatch metric",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            },
            "cloudwatch:AlarmActions": {
                "condition": "cloudwatch:AlarmActions",
                "description": "Filters actions based on defined alarm actions",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putMetricData": {
        "privilege": "PutMetricData",
        "description": "Grants permission to publish metric data points to Amazon CloudWatch",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricData.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "cloudwatch:namespace": {
                "condition": "cloudwatch:namespace",
                "description": "Filters actions based on the presence of optional namespace values",
                "type": "String"
            }
        },
        "resources": {}
    },
    "putMetricStream": {
        "privilege": "PutMetricStream",
        "description": "Grants permission to create a CloudWatch metric stream, or update an existing metric stream if it already exists",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricStream.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "metricStream": {
                "resourceName": "metric-stream",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:metric-stream/${MetricStreamName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "setAlarmState": {
        "privilege": "SetAlarmState",
        "description": "Grants permission to temporarily set the state of an alarm for testing purposes",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_SetAlarmState.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "startMetricStreams": {
        "privilege": "StartMetricStreams",
        "description": "Grants permission to start all CloudWatch metric streams that you specify",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_StartMetricStreams.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "metricStream": {
                "resourceName": "metric-stream",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:metric-stream/${MetricStreamName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "stopMetricStreams": {
        "privilege": "StopMetricStreams",
        "description": "Grants permission to stop all CloudWatch metric streams that you specify",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_StopMetricStreams.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "metricStream": {
                "resourceName": "metric-stream",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:metric-stream/${MetricStreamName}",
                "required": true,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "tagResource": {
        "privilege": "TagResource",
        "description": "Grants permission to add tags to an Amazon CloudWatch resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            },
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters actions based on the allowed set of values for each of the tags",
                "type": "String"
            }
        },
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            },
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "untagResource": {
        "privilege": "UntagResource",
        "description": "Grants permission to remove a tag from an Amazon CloudWatch resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_UntagResource.html",
        "service": "cloudwatch",
        "dependentActions": [],
        "privConditions": {
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters actions based on the presence of mandatory tags in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "alarm": {
                "resourceName": "alarm",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            },
            "insightRule": {
                "resourceName": "insight-rule",
                "resourceArn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
                "required": false,
                "resourceConditions": {
                    "aws:ResourceTag/${TagKey}": {
                        "condition": "aws:ResourceTag/${TagKey}",
                        "description": "Filters actions based on tag-value associated with the resource",
                        "type": "String"
                    }
                }
            }
        }
    }
}
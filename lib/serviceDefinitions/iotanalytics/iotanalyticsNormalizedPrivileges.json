{
    "batchPutMessage": {
        "privilege": "BatchPutMessage",
        "description": "Puts a batch of messages into the specified channel",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "cancelPipelineReprocessing": {
        "privilege": "CancelPipelineReprocessing",
        "description": "Cancels reprocessing for the specified pipeline",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_CancelPipelineReprocessing.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createChannel": {
        "privilege": "CreateChannel",
        "description": "Creates a channel",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_CreateChannel.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access based on the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createDataset": {
        "privilege": "CreateDataset",
        "description": "Creates a dataset",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_CreateDataset.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access based on the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createDatasetContent": {
        "privilege": "CreateDatasetContent",
        "description": "Generates content from the specified dataset (by executing the dataset actions)",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_CreateDatasetContent.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createDatastore": {
        "privilege": "CreateDatastore",
        "description": "Creates a datastore",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_CreateDatastore.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access based on the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "datastore": {
                "resourceName": "datastore",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "createPipeline": {
        "privilege": "CreatePipeline",
        "description": "Creates a pipeline",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_CreatePipeline.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access based on the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteChannel": {
        "privilege": "DeleteChannel",
        "description": "Deletes the specified channel",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeleteChannel.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteDataset": {
        "privilege": "DeleteDataset",
        "description": "Deletes the specified dataset",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeleteDataset.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteDatasetContent": {
        "privilege": "DeleteDatasetContent",
        "description": "Deletes the content of the specified dataset",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeleteDatasetContent.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deleteDatastore": {
        "privilege": "DeleteDatastore",
        "description": "Deletes the specified datastore",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeleteDatastore.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "datastore": {
                "resourceName": "datastore",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "deletePipeline": {
        "privilege": "DeletePipeline",
        "description": "Deletes the specified pipeline",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeletePipeline.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeChannel": {
        "privilege": "DescribeChannel",
        "description": "Describes the specified channel",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DescribeChannel.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeDataset": {
        "privilege": "DescribeDataset",
        "description": "Describes the specified dataset",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DescribeDataset.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeDatastore": {
        "privilege": "DescribeDatastore",
        "description": "Describes the specified datastore",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DescribeDatastore.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "datastore": {
                "resourceName": "datastore",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "describeLoggingOptions": {
        "privilege": "DescribeLoggingOptions",
        "description": "Describes logging options for the the account",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DescribeLoggingOptions.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "describePipeline": {
        "privilege": "DescribePipeline",
        "description": "Describes the specified pipeline",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DescribePipeline.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "getDatasetContent": {
        "privilege": "GetDatasetContent",
        "description": "Gets the content of the specified dataset",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_GetDatasetContent.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listChannels": {
        "privilege": "ListChannels",
        "description": "Lists the channels for the account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_ListChannels.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listDatasetContents": {
        "privilege": "ListDatasetContents",
        "description": "Lists information about dataset contents that have been created",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_ListDatasetContents.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "listDatasets": {
        "privilege": "ListDatasets",
        "description": "Lists the datasets for the account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_ListDatasets.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listDatastores": {
        "privilege": "ListDatastores",
        "description": "Lists the datastores for the account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_ListDatastores.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listPipelines": {
        "privilege": "ListPipelines",
        "description": "Lists the pipelines for the account",
        "accessLevel": "List",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_ListPipelines.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "listTagsForResource": {
        "privilege": "ListTagsForResource",
        "description": "Lists the tags (metadata) which you have assigned to the resource",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_ListTagsForResource.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "datastore": {
                "resourceName": "datastore",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "putLoggingOptions": {
        "privilege": "PutLoggingOptions",
        "description": "Puts logging options for the the account",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_PutLoggingOptions.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "runPipelineActivity": {
        "privilege": "RunPipelineActivity",
        "description": "Runs the specified pipeline activity",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_RunPipelineActivity.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {}
    },
    "sampleChannelData": {
        "privilege": "SampleChannelData",
        "description": "Samples the specified channel's data",
        "accessLevel": "Read",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_SampleChannelData.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "startPipelineReprocessing": {
        "privilege": "StartPipelineReprocessing",
        "description": "Starts reprocessing for the specified pipeline",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_StartPipelineReprocessing.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "tagResource": {
        "privilege": "TagResource",
        "description": "Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_TagResource.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access based on the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "datastore": {
                "resourceName": "datastore",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "untagResource": {
        "privilege": "UntagResource",
        "description": "Removes the given tags (metadata) from the resource",
        "accessLevel": "Tagging",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_UntagResource.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {
            "aws:RequestTag/${TagKey}": {
                "condition": "aws:RequestTag/${TagKey}",
                "description": "Filters access based on the tags that are passed in the request",
                "type": "String"
            },
            "aws:TagKeys": {
                "condition": "aws:TagKeys",
                "description": "Filters access based on the presence of tag keys in the request",
                "type": "ArrayOfString"
            }
        },
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "datastore": {
                "resourceName": "datastore",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            },
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": false,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateChannel": {
        "privilege": "UpdateChannel",
        "description": "Updates the specified channel",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_UpdateChannel.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "channel": {
                "resourceName": "channel",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateDataset": {
        "privilege": "UpdateDataset",
        "description": "Updates the specified dataset",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_UpdateDataset.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "dataset": {
                "resourceName": "dataset",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updateDatastore": {
        "privilege": "UpdateDatastore",
        "description": "Updates the specified datastore",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_UpdateDatastore.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "datastore": {
                "resourceName": "datastore",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    },
    "updatePipeline": {
        "privilege": "UpdatePipeline",
        "description": "Updates the specified pipeline",
        "accessLevel": "Write",
        "apiDocumentationLink": "https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_UpdatePipeline.html",
        "service": "iotanalytics",
        "dependentActions": [],
        "privConditions": {},
        "resources": {
            "pipeline": {
                "resourceName": "pipeline",
                "resourceArn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                "required": true,
                "resourceConditions": {
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access based on the tags that are passed in the request",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access based on the presence of tag keys in the request",
                        "type": "ArrayOfString"
                    },
                    "iotanalytics:ResourceTag/${TagKey}": {
                        "condition": "iotanalytics:ResourceTag/${TagKey}",
                        "description": "Filters access by the tag key-value pairs attached to the resource",
                        "type": "String"
                    }
                }
            }
        }
    }
}
{
    "project": {
        "resourceName": "Project",
        "service": "evidently",
        "resourceArn": "arn:${Partition}:evidently:${Region}:${OwnerAccountId}:project/${ProjectName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource that make the request on behalf of the IAM principal",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetProject": {
                "privilege": "GetProject",
                "description": "Grants permission to get project details",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_GetProject.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "DeleteProject": {
                "privilege": "DeleteProject",
                "description": "Grants permission to delete a project",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_DeleteProject.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutProjectEvents": {
                "privilege": "PutProjectEvents",
                "description": "Grants permission to send performance events",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_PutProjectEvents.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateProject": {
                "privilege": "UpdateProject",
                "description": "Grants permission to update project",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateProject.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateProjectDataDelivery": {
                "privilege": "UpdateProjectDataDelivery",
                "description": "Grants permission to update project data delivery",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateProjectDataDelivery.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "feature": {
        "resourceName": "Feature",
        "service": "evidently",
        "resourceArn": "arn:${Partition}:evidently:${Region}:${OwnerAccountId}:project/${ProjectName}/feature/${FeatureName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource that make the request on behalf of the IAM principal",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetFeature": {
                "privilege": "GetFeature",
                "description": "Grants permission to get feature details",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_GetFeature.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "BatchEvaluateFeature": {
                "privilege": "BatchEvaluateFeature",
                "description": "Grants permission to send a batched evaluate feature request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_BatchEvaluateFeature.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteFeature": {
                "privilege": "DeleteFeature",
                "description": "Grants permission to delete a feature",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_DeleteFeature.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "EvaluateFeature": {
                "privilege": "EvaluateFeature",
                "description": "Grants permission to send an evaluate feature request",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateFeature": {
                "privilege": "UpdateFeature",
                "description": "Grants permission to update feature",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateFeature.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "experiment": {
        "resourceName": "Experiment",
        "service": "evidently",
        "resourceArn": "arn:${Partition}:evidently:${Region}:${OwnerAccountId}:project/${ProjectName}/experiment/${ExperimentName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource that make the request on behalf of the IAM principal",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetExperiment": {
                "privilege": "GetExperiment",
                "description": "Grants permission to get experiment details",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_GetExperiment.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetExperimentResults": {
                "privilege": "GetExperimentResults",
                "description": "Grants permission to get experiment result",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_GetExperimentResults.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "DeleteExperiment": {
                "privilege": "DeleteExperiment",
                "description": "Grants permission to delete an experiment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_DeleteExperiment.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartExperiment": {
                "privilege": "StartExperiment",
                "description": "Grants permission to start an experiment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StartExperiment.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StopExperiment": {
                "privilege": "StopExperiment",
                "description": "Grants permission to stop an experiment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StopExperiment.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateExperiment": {
                "privilege": "UpdateExperiment",
                "description": "Grants permission to update experiment",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateExperiment.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "launch": {
        "resourceName": "Launch",
        "service": "evidently",
        "resourceArn": "arn:${Partition}:evidently:${Region}:${OwnerAccountId}:project/${ProjectName}/launch/${LaunchName}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource that make the request on behalf of the IAM principal",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {
            "GetLaunch": {
                "privilege": "GetLaunch",
                "description": "Grants permission to get launch details",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_GetLaunch.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "DeleteLaunch": {
                "privilege": "DeleteLaunch",
                "description": "Grants permission to delete a launch",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_DeleteLaunch.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StartLaunch": {
                "privilege": "StartLaunch",
                "description": "Grants permission to start a launch",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StartLaunch.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "StopLaunch": {
                "privilege": "StopLaunch",
                "description": "Grants permission to stop a launch",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StopLaunch.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateLaunch": {
                "privilege": "UpdateLaunch",
                "description": "Grants permission to update a launch",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateLaunch.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    }
}
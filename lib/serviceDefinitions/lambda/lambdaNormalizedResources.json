{
    "codeSigningConfig": {
        "resourceName": "code signing config",
        "service": "lambda",
        "resourceArn": "arn:${Partition}:lambda:${Region}:${Account}:code-signing-config:${CodeSigningConfigId}",
        "resourceConditions": {},
        "listPrivileges": {
            "ListFunctionsByCodeSigningConfig": {
                "privilege": "ListFunctionsByCodeSigningConfig",
                "description": "Grants permission to retrieve a list of AWS Lambda functions by the code signing config assigned",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_ListFunctionsByCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetCodeSigningConfig": {
                "privilege": "GetCodeSigningConfig",
                "description": "Grants permission to view details about an AWS Lambda code signing config",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "DeleteCodeSigningConfig": {
                "privilege": "DeleteCodeSigningConfig",
                "description": "Grants permission to delete an AWS Lambda code signing config",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutFunctionCodeSigningConfig": {
                "privilege": "PutFunctionCodeSigningConfig",
                "description": "Grants permission to attach a code signing config to an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PutFunctionCodeSigningConfig.html",
                "privConditions": {
                    "lambda:CodeSigningConfigArn": {
                        "condition": "lambda:CodeSigningConfigArn",
                        "description": "Filters access by the ARN of an AWS Lambda code signing config",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateCodeSigningConfig": {
                "privilege": "UpdateCodeSigningConfig",
                "description": "Grants permission to update an AWS Lambda code signing config",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateFunctionCodeSigningConfig": {
                "privilege": "UpdateFunctionCodeSigningConfig",
                "description": "Grants permission to update the code signing config of an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "eventSourceMapping": {
        "resourceName": "eventSourceMapping",
        "service": "lambda",
        "resourceArn": "arn:${Partition}:lambda:${Region}:${Account}:event-source-mapping:${UUID}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetEventSourceMapping": {
                "privilege": "GetEventSourceMapping",
                "description": "Grants permission to view details about an AWS Lambda event source mapping",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetEventSourceMapping.html",
                "privConditions": {
                    "lambda:FunctionArn": {
                        "condition": "lambda:FunctionArn",
                        "description": "Filters access by the ARN of an AWS Lambda function",
                        "type": "ARN"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "DeleteEventSourceMapping": {
                "privilege": "DeleteEventSourceMapping",
                "description": "Grants permission to delete an AWS Lambda event source mapping",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteEventSourceMapping.html",
                "privConditions": {
                    "lambda:FunctionArn": {
                        "condition": "lambda:FunctionArn",
                        "description": "Filters access by the ARN of an AWS Lambda function",
                        "type": "ARN"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateEventSourceMapping": {
                "privilege": "UpdateEventSourceMapping",
                "description": "Grants permission to update the configuration of an AWS Lambda event source mapping",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateEventSourceMapping.html",
                "privConditions": {
                    "lambda:FunctionArn": {
                        "condition": "lambda:FunctionArn",
                        "description": "Filters access by the ARN of an AWS Lambda function",
                        "type": "ARN"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "function": {
        "resourceName": "function",
        "service": "lambda",
        "resourceArn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}",
        "resourceConditions": {},
        "listPrivileges": {
            "ListAliases": {
                "privilege": "ListAliases",
                "description": "Grants permission to retrieve a list of aliases for an AWS Lambda function",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_ListAliases.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListFunctionEventInvokeConfigs": {
                "privilege": "ListFunctionEventInvokeConfigs",
                "description": "Grants permission to retrieve a list of configurations for asynchronous invocation for a function",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_ListFunctionEventInvokeConfigs.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListProvisionedConcurrencyConfigs": {
                "privilege": "ListProvisionedConcurrencyConfigs",
                "description": "Grants permission to retrieve a list of provisioned concurrency configurations for an AWS Lambda function",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_ListProvisionedConcurrencyConfigs.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListVersionsByFunction": {
                "privilege": "ListVersionsByFunction",
                "description": "Grants permission to retrieve a list of versions for an AWS Lambda function",
                "accessLevel": "List",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_ListVersionsByFunction.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "readPrivileges": {
            "GetAlias": {
                "privilege": "GetAlias",
                "description": "Grants permission to view details about an AWS Lambda function alias",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetAlias.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetFunction": {
                "privilege": "GetFunction",
                "description": "Grants permission to view details about an AWS Lambda function",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunction.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetFunctionCodeSigningConfig": {
                "privilege": "GetFunctionCodeSigningConfig",
                "description": "Grants permission to view the code signing config arn attached to an AWS Lambda function",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetFunctionConcurrency": {
                "privilege": "GetFunctionConcurrency",
                "description": "Grants permission to view details about the reserved concurrency configuration for a function",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionConcurrency.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetFunctionConfiguration": {
                "privilege": "GetFunctionConfiguration",
                "description": "Grants permission to view details about the version-specific settings of an AWS Lambda function or version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionConfiguration.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetFunctionEventInvokeConfig": {
                "privilege": "GetFunctionEventInvokeConfig",
                "description": "Grants permission to view the configuration for asynchronous invocation for a function, version, or alias",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionEventInvokeConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetPolicy": {
                "privilege": "GetPolicy",
                "description": "Grants permission to view the resource-based policy for an AWS Lambda function, version, or alias",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "ListTags": {
                "privilege": "ListTags",
                "description": "Grants permission to retrieve a list of tags for an AWS Lambda function",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_ListTags.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "CreateAlias": {
                "privilege": "CreateAlias",
                "description": "Grants permission to create an alias for a Lambda function version",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_CreateAlias.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "CreateFunction": {
                "privilege": "CreateFunction",
                "description": "Grants permission to create an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html",
                "privConditions": {
                    "lambda:Layer": {
                        "condition": "lambda:Layer",
                        "description": "Filters access by the ARN of a version of an AWS Lambda layer",
                        "type": "ArrayOfString"
                    },
                    "lambda:VpcIds": {
                        "condition": "lambda:VpcIds",
                        "description": "Filters access by the ID of the VPC configured for the AWS Lambda function",
                        "type": "String"
                    },
                    "lambda:SubnetIds": {
                        "condition": "lambda:SubnetIds",
                        "description": "Filters access by the ID of subnets configured for the AWS Lambda function",
                        "type": "ArrayOfString"
                    },
                    "lambda:SecurityGroupIds": {
                        "condition": "lambda:SecurityGroupIds",
                        "description": "Filters access by the ID of security groups configured for the AWS Lambda function",
                        "type": "ArrayOfString"
                    },
                    "lambda:CodeSigningConfigArn": {
                        "condition": "lambda:CodeSigningConfigArn",
                        "description": "Filters access by the ARN of an AWS Lambda code signing config",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DeleteAlias": {
                "privilege": "DeleteAlias",
                "description": "Grants permission to delete an AWS Lambda function alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteAlias.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteFunction": {
                "privilege": "DeleteFunction",
                "description": "Grants permission to delete an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunction.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteFunctionCodeSigningConfig": {
                "privilege": "DeleteFunctionCodeSigningConfig",
                "description": "Grants permission to detach a code signing config from an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunctionCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteFunctionConcurrency": {
                "privilege": "DeleteFunctionConcurrency",
                "description": "Grants permission to remove a concurrent execution limit from an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunctionConcurrency.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "DeleteFunctionEventInvokeConfig": {
                "privilege": "DeleteFunctionEventInvokeConfig",
                "description": "Grants permission to delete the configuration for asynchronous invocation for an AWS Lambda function, version, or alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunctionEventInvokeConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "InvokeAsync": {
                "privilege": "InvokeAsync",
                "description": "Grants permission to invoke a function asynchronously (Deprecated)",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_InvokeAsync.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "InvokeFunction": {
                "privilege": "InvokeFunction",
                "description": "Grants permission to invoke an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PublishVersion": {
                "privilege": "PublishVersion",
                "description": "Grants permission to create an AWS Lambda function version",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PublishVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutFunctionCodeSigningConfig": {
                "privilege": "PutFunctionCodeSigningConfig",
                "description": "Grants permission to attach a code signing config to an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PutFunctionCodeSigningConfig.html",
                "privConditions": {
                    "lambda:CodeSigningConfigArn": {
                        "condition": "lambda:CodeSigningConfigArn",
                        "description": "Filters access by the ARN of an AWS Lambda code signing config",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "PutFunctionConcurrency": {
                "privilege": "PutFunctionConcurrency",
                "description": "Grants permission to configure reserved concurrency for an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PutFunctionConcurrency.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "PutFunctionEventInvokeConfig": {
                "privilege": "PutFunctionEventInvokeConfig",
                "description": "Grants permission to configures options for asynchronous invocation on an AWS Lambda function, version, or alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PutFunctionEventInvokeConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateAlias": {
                "privilege": "UpdateAlias",
                "description": "Grants permission to update the configuration of an AWS Lambda function's alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateAlias.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateFunctionCode": {
                "privilege": "UpdateFunctionCode",
                "description": "Grants permission to update the code of an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionCode.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateFunctionCodeSigningConfig": {
                "privilege": "UpdateFunctionCodeSigningConfig",
                "description": "Grants permission to update the code signing config of an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionCodeSigningConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UpdateFunctionConfiguration": {
                "privilege": "UpdateFunctionConfiguration",
                "description": "Grants permission to modify the version-specific settings of an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html",
                "privConditions": {
                    "lambda:Layer": {
                        "condition": "lambda:Layer",
                        "description": "Filters access by the ARN of a version of an AWS Lambda layer",
                        "type": "ArrayOfString"
                    },
                    "lambda:VpcIds": {
                        "condition": "lambda:VpcIds",
                        "description": "Filters access by the ID of the VPC configured for the AWS Lambda function",
                        "type": "String"
                    },
                    "lambda:SubnetIds": {
                        "condition": "lambda:SubnetIds",
                        "description": "Filters access by the ID of subnets configured for the AWS Lambda function",
                        "type": "ArrayOfString"
                    },
                    "lambda:SecurityGroupIds": {
                        "condition": "lambda:SecurityGroupIds",
                        "description": "Filters access by the ID of security groups configured for the AWS Lambda function",
                        "type": "ArrayOfString"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "UpdateFunctionEventInvokeConfig": {
                "privilege": "UpdateFunctionEventInvokeConfig",
                "description": "Grants permission to modify the configuration for asynchronous invocation for an AWS Lambda function, version, or alias",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionEventInvokeConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "AddPermission": {
                "privilege": "AddPermission",
                "description": "Grants permission to give an AWS service or another account permission to use an AWS Lambda function",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html",
                "privConditions": {
                    "lambda:Principal": {
                        "condition": "lambda:Principal",
                        "description": "Filters access by restricting the AWS service or account that can invoke a function",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "DisableReplication": {
                "privilege": "DisableReplication",
                "description": "Grants permission to disable replication for a Lambda@Edge function",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": null,
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "EnableReplication": {
                "privilege": "EnableReplication",
                "description": "Grants permission to enable replication for a Lambda@Edge function",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": null,
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemovePermission": {
                "privilege": "RemovePermission",
                "description": "Grants permission to revoke function-use permission from an AWS service or another account",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_RemovePermission.html",
                "privConditions": {
                    "lambda:Principal": {
                        "condition": "lambda:Principal",
                        "description": "Filters access by restricting the AWS service or account that can invoke a function",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {
            "TagResource": {
                "privilege": "TagResource",
                "description": "Grants permission to add tags to an AWS Lambda function",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_TagResources.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "UntagResource": {
                "privilege": "UntagResource",
                "description": "Grants permission to remove tags from an AWS Lambda function",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_UntagResource.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        }
    },
    "functionAlias": {
        "resourceName": "function alias",
        "service": "lambda",
        "resourceArn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}:${Alias}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetProvisionedConcurrencyConfig": {
                "privilege": "GetProvisionedConcurrencyConfig",
                "description": "Grants permission to view the provisioned concurrency configuration for an AWS Lambda function's alias or version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetProvisionedConcurrencyConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteProvisionedConcurrencyConfig": {
                "privilege": "DeleteProvisionedConcurrencyConfig",
                "description": "Grants permission to delete the provisioned concurrency configuration for an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteProvisionedConcurrencyConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "PutProvisionedConcurrencyConfig": {
                "privilege": "PutProvisionedConcurrencyConfig",
                "description": "Grants permission to configure provisioned concurrency for an AWS Lambda function's alias or version",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PutProvisionedConcurrencyConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "functionVersion": {
        "resourceName": "function version",
        "service": "lambda",
        "resourceArn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}:${Version}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetProvisionedConcurrencyConfig": {
                "privilege": "GetProvisionedConcurrencyConfig",
                "description": "Grants permission to view the provisioned concurrency configuration for an AWS Lambda function's alias or version",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetProvisionedConcurrencyConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "DeleteProvisionedConcurrencyConfig": {
                "privilege": "DeleteProvisionedConcurrencyConfig",
                "description": "Grants permission to delete the provisioned concurrency configuration for an AWS Lambda function",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteProvisionedConcurrencyConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            },
            "PutProvisionedConcurrencyConfig": {
                "privilege": "PutProvisionedConcurrencyConfig",
                "description": "Grants permission to configure provisioned concurrency for an AWS Lambda function's alias or version",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PutProvisionedConcurrencyConfig.html",
                "privConditions": {},
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "layer": {
        "resourceName": "layer",
        "service": "lambda",
        "resourceArn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "PublishLayerVersion": {
                "privilege": "PublishLayerVersion",
                "description": "Grants permission to create an AWS Lambda layer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {}
    },
    "layerVersion": {
        "resourceName": "layerVersion",
        "service": "lambda",
        "resourceArn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}:${LayerVersion}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetLayerVersion": {
                "privilege": "GetLayerVersion",
                "description": "Grants permission to view details about a version of an AWS Lambda layer. Note this action also supports GetLayerVersionByArn API",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetLayerVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "GetLayerVersionPolicy": {
                "privilege": "GetLayerVersionPolicy",
                "description": "Grants permission to view the resource-based policy for a version of an AWS Lambda layer",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_GetLayerVersionPolicy.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "writePrivileges": {
            "DeleteLayerVersion": {
                "privilege": "DeleteLayerVersion",
                "description": "Grants permission to delete a version of an AWS Lambda layer",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteLayerVersion.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "permManPrivileges": {
            "AddLayerVersionPermission": {
                "privilege": "AddLayerVersionPermission",
                "description": "Grants permission to add permissions to the resource-based policy of a version of an AWS Lambda layer",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_AddLayerVersionPermission.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            },
            "RemoveLayerVersionPermission": {
                "privilege": "RemoveLayerVersionPermission",
                "description": "Grants permission to remove a statement from the permissions policy for a version of an AWS Lambda layer",
                "accessLevel": "Permissions management",
                "apiDocumentationLink": "https://docs.aws.amazon.com/lambda/latest/dg/API_RemoveLayerVersionPermission.html",
                "privConditions": {},
                "dependentActions": [],
                "required": true
            }
        },
        "tagPrivileges": {}
    }
}
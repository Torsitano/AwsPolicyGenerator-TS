{
    "accounts.google.com:aud": {
        "condition": "accounts.google.com:aud",
        "description": "Filters access by the Google application ID",
        "type": "String"
    },
    "accounts.google.com:oaud": {
        "condition": "accounts.google.com:oaud",
        "description": "Filters access by the Google audience",
        "type": "String"
    },
    "accounts.google.com:sub": {
        "condition": "accounts.google.com:sub",
        "description": "Filters access by the subject of the claim (the Google user ID)",
        "type": "String"
    },
    "aws:RequestTag/${TagKey}": {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by the tags that are passed in the request",
        "type": "String"
    },
    "aws:ResourceTag/${TagKey}": {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by the tags associated with the resource",
        "type": "String"
    },
    "aws:TagKeys": {
        "condition": "aws:TagKeys",
        "description": "Filters access by the tag keys that are passed in the request",
        "type": "ArrayOfString"
    },
    "cognitoIdentity.amazonaws.com:amr": {
        "condition": "cognito-identity.amazonaws.com:amr",
        "description": "Filters access by the login information for Amazon Cognito",
        "type": "String"
    },
    "cognitoIdentity.amazonaws.com:aud": {
        "condition": "cognito-identity.amazonaws.com:aud",
        "description": "Filters access by the Amazon Cognito identity pool ID",
        "type": "String"
    },
    "cognitoIdentity.amazonaws.com:sub": {
        "condition": "cognito-identity.amazonaws.com:sub",
        "description": "Filters access by the subject of the claim (the Amazon Cognito user ID)",
        "type": "String"
    },
    "graph.facebook.com:appId": {
        "condition": "graph.facebook.com:app_id",
        "description": "Filters access by the Facebook application ID",
        "type": "String"
    },
    "graph.facebook.com:id": {
        "condition": "graph.facebook.com:id",
        "description": "Filters access by the Facebook user ID",
        "type": "String"
    },
    "iam:ResourceTag/${TagKey}": {
        "condition": "iam:ResourceTag/${TagKey}",
        "description": "Filters access by the tags that are attached to the role that is being assumed",
        "type": "String"
    },
    "saml:aud": {
        "condition": "saml:aud",
        "description": "Filters access by the endpoint URL to which SAML assertions are presented",
        "type": "String"
    },
    "saml:cn": {
        "condition": "saml:cn",
        "description": "Filters access by the eduOrg attribute",
        "type": "ArrayOfString"
    },
    "saml:commonName": {
        "condition": "saml:commonName",
        "description": "Filters access by the commonName attribute",
        "type": "String"
    },
    "saml:doc": {
        "condition": "saml:doc",
        "description": "Filters access by on the principal that was used to assume the role",
        "type": "String"
    },
    "saml:eduorghomepageuri": {
        "condition": "saml:eduorghomepageuri",
        "description": "Filters access by the eduOrg attribute",
        "type": "ArrayOfString"
    },
    "saml:eduorgidentityauthnpolicyuri": {
        "condition": "saml:eduorgidentityauthnpolicyuri",
        "description": "Filters access by the eduOrg attribute",
        "type": "ArrayOfString"
    },
    "saml:eduorglegalname": {
        "condition": "saml:eduorglegalname",
        "description": "Filters access by the eduOrg attribute",
        "type": "ArrayOfString"
    },
    "saml:eduorgsuperioruri": {
        "condition": "saml:eduorgsuperioruri",
        "description": "Filters access by the eduOrg attribute",
        "type": "ArrayOfString"
    },
    "saml:eduorgwhitepagesuri": {
        "condition": "saml:eduorgwhitepagesuri",
        "description": "Filters access by the eduOrg attribute",
        "type": "ArrayOfString"
    },
    "saml:edupersonaffiliation": {
        "condition": "saml:edupersonaffiliation",
        "description": "Filters access by the eduPerson attribute",
        "type": "ArrayOfString"
    },
    "saml:edupersonassurance": {
        "condition": "saml:edupersonassurance",
        "description": "Filters access by the eduPerson attribute",
        "type": "ArrayOfString"
    },
    "saml:edupersonentitlement": {
        "condition": "saml:edupersonentitlement",
        "description": "Filters access by the eduPerson attribute",
        "type": "ArrayOfString"
    },
    "saml:edupersonnickname": {
        "condition": "saml:edupersonnickname",
        "description": "Filters access by the eduPerson attribute",
        "type": "ArrayOfString"
    },
    "saml:edupersonorgdn": {
        "condition": "saml:edupersonorgdn",
        "description": "Filters access by the eduPerson attribute",
        "type": "String"
    },
    "saml:edupersonorgunitdn": {
        "condition": "saml:edupersonorgunitdn",
        "description": "Filters access by the eduPerson attribute",
        "type": "ArrayOfString"
    },
    "saml:edupersonprimaryaffiliation": {
        "condition": "saml:edupersonprimaryaffiliation",
        "description": "Filters access by the eduPerson attribute",
        "type": "String"
    },
    "saml:edupersonprimaryorgunitdn": {
        "condition": "saml:edupersonprimaryorgunitdn",
        "description": "Filters access by the eduPerson attribute",
        "type": "String"
    },
    "saml:edupersonprincipalname": {
        "condition": "saml:edupersonprincipalname",
        "description": "Filters access by the eduPerson attribute",
        "type": "String"
    },
    "saml:edupersonscopedaffiliation": {
        "condition": "saml:edupersonscopedaffiliation",
        "description": "Filters access by the eduPerson attribute",
        "type": "ArrayOfString"
    },
    "saml:edupersontargetedid": {
        "condition": "saml:edupersontargetedid",
        "description": "Filters access by the eduPerson attribute",
        "type": "ArrayOfString"
    },
    "saml:givenName": {
        "condition": "saml:givenName",
        "description": "Filters access by the givenName attribute",
        "type": "String"
    },
    "saml:iss": {
        "condition": "saml:iss",
        "description": "Filters access by on the issuer, which is represented by a URN",
        "type": "String"
    },
    "saml:mail": {
        "condition": "saml:mail",
        "description": "Filters access by the mail attribute",
        "type": "String"
    },
    "saml:name": {
        "condition": "saml:name",
        "description": "Filters access by the name attribute",
        "type": "String"
    },
    "saml:namequalifier": {
        "condition": "saml:namequalifier",
        "description": "Filters access by the hash value of the issuer, account ID, and friendly name",
        "type": "String"
    },
    "saml:organizationStatus": {
        "condition": "saml:organizationStatus",
        "description": "Filters access by the organizationStatus attribute",
        "type": "String"
    },
    "saml:primaryGroupSID": {
        "condition": "saml:primaryGroupSID",
        "description": "Filters access by the primaryGroupSID attribute",
        "type": "String"
    },
    "saml:sub": {
        "condition": "saml:sub",
        "description": "Filters access by the subject of the claim (the SAML user ID)",
        "type": "String"
    },
    "saml:subType": {
        "condition": "saml:sub_type",
        "description": "Filters access by the value persistent, transient, or the full Format URI",
        "type": "String"
    },
    "saml:surname": {
        "condition": "saml:surname",
        "description": "Filters access by the surname attribute",
        "type": "String"
    },
    "saml:uid": {
        "condition": "saml:uid",
        "description": "Filters access by the uid attribute",
        "type": "String"
    },
    "saml:x500UniqueIdentifier": {
        "condition": "saml:x500UniqueIdentifier",
        "description": "Filters access by the uid attribute",
        "type": "String"
    },
    "sts:AWSServiceName": {
        "condition": "sts:AWSServiceName",
        "description": "Filters access by the service that is obtaining a bearer token",
        "type": "String"
    },
    "sts:ExternalId": {
        "condition": "sts:ExternalId",
        "description": "Filters access by the unique identifier required when you assume a role in another account",
        "type": "String"
    },
    "sts:RoleSessionName": {
        "condition": "sts:RoleSessionName",
        "description": "Filters access by the role session name required when you assume a role",
        "type": "String"
    },
    "sts:SourceIdentity": {
        "condition": "sts:SourceIdentity",
        "description": "Filters access by the source identity that is passed in the request",
        "type": "String"
    },
    "sts:TransitiveTagKeys": {
        "condition": "sts:TransitiveTagKeys",
        "description": "Filters access by the transitive tag keys that are passed in the request",
        "type": "String"
    },
    "www.amazon.com:appId": {
        "condition": "www.amazon.com:app_id",
        "description": "Filters access by the Login with Amazon application ID",
        "type": "String"
    },
    "www.amazon.com:userId": {
        "condition": "www.amazon.com:user_id",
        "description": "Filters access by the Login with Amazon user ID",
        "type": "String"
    }
}
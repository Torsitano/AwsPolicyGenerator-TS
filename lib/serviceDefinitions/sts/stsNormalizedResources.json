{
    "role": {
        "resourceName": "role",
        "service": "sts",
        "resourceArn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
        "resourceConditions": {
            "aws:ResourceTag/${TagKey}": {
                "condition": "aws:ResourceTag/${TagKey}",
                "description": "Filters access by the tags associated with the resource",
                "type": "String"
            }
        },
        "listPrivileges": {},
        "readPrivileges": {},
        "writePrivileges": {
            "AssumeRole": {
                "privilege": "AssumeRole",
                "description": "Grants permission to obtain a set of temporary security credentials that you can use to access AWS resources that you might not normally have access to",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    },
                    "sts:TransitiveTagKeys": {
                        "condition": "sts:TransitiveTagKeys",
                        "description": "Filters access by the transitive tag keys that are passed in the request",
                        "type": "String"
                    },
                    "sts:ExternalId": {
                        "condition": "sts:ExternalId",
                        "description": "Filters access by the unique identifier required when you assume a role in another account",
                        "type": "String"
                    },
                    "sts:RoleSessionName": {
                        "condition": "sts:RoleSessionName",
                        "description": "Filters access by the role session name required when you assume a role",
                        "type": "String"
                    },
                    "iam:ResourceTag/${TagKey}": {
                        "condition": "iam:ResourceTag/${TagKey}",
                        "description": "Filters access by the tags that are attached to the role that is being assumed",
                        "type": "String"
                    },
                    "sts:SourceIdentity": {
                        "condition": "sts:SourceIdentity",
                        "description": "Filters access by the source identity that is passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssumeRoleWithSAML": {
                "privilege": "AssumeRoleWithSAML",
                "description": "Grants permission to obtain a set of temporary security credentials for users who have been authenticated via a SAML authentication response",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html",
                "privConditions": {
                    "saml:namequalifier": {
                        "condition": "saml:namequalifier",
                        "description": "Filters access by the hash value of the issuer, account ID, and friendly name",
                        "type": "String"
                    },
                    "saml:sub": {
                        "condition": "saml:sub",
                        "description": "Filters access by the subject of the claim (the SAML user ID)",
                        "type": "String"
                    },
                    "saml:aud": {
                        "condition": "saml:aud",
                        "description": "Filters access by the endpoint URL to which SAML assertions are presented",
                        "type": "String"
                    },
                    "saml:iss": {
                        "condition": "saml:iss",
                        "description": "Filters access by on the issuer, which is represented by a URN",
                        "type": "String"
                    },
                    "saml:doc": {
                        "condition": "saml:doc",
                        "description": "Filters access by on the principal that was used to assume the role",
                        "type": "String"
                    },
                    "saml:cn": {
                        "condition": "saml:cn",
                        "description": "Filters access by the eduOrg attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:commonName": {
                        "condition": "saml:commonName",
                        "description": "Filters access by the commonName attribute",
                        "type": "String"
                    },
                    "saml:eduorghomepageuri": {
                        "condition": "saml:eduorghomepageuri",
                        "description": "Filters access by the eduOrg attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:eduorgidentityauthnpolicyuri": {
                        "condition": "saml:eduorgidentityauthnpolicyuri",
                        "description": "Filters access by the eduOrg attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:eduorglegalname": {
                        "condition": "saml:eduorglegalname",
                        "description": "Filters access by the eduOrg attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:eduorgsuperioruri": {
                        "condition": "saml:eduorgsuperioruri",
                        "description": "Filters access by the eduOrg attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:eduorgwhitepagesuri": {
                        "condition": "saml:eduorgwhitepagesuri",
                        "description": "Filters access by the eduOrg attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:edupersonaffiliation": {
                        "condition": "saml:edupersonaffiliation",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:edupersonassurance": {
                        "condition": "saml:edupersonassurance",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:edupersonentitlement": {
                        "condition": "saml:edupersonentitlement",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:edupersonnickname": {
                        "condition": "saml:edupersonnickname",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:edupersonorgdn": {
                        "condition": "saml:edupersonorgdn",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "String"
                    },
                    "saml:edupersonorgunitdn": {
                        "condition": "saml:edupersonorgunitdn",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:edupersonprimaryaffiliation": {
                        "condition": "saml:edupersonprimaryaffiliation",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "String"
                    },
                    "saml:edupersonprimaryorgunitdn": {
                        "condition": "saml:edupersonprimaryorgunitdn",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "String"
                    },
                    "saml:edupersonprincipalname": {
                        "condition": "saml:edupersonprincipalname",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "String"
                    },
                    "saml:edupersonscopedaffiliation": {
                        "condition": "saml:edupersonscopedaffiliation",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:edupersontargetedid": {
                        "condition": "saml:edupersontargetedid",
                        "description": "Filters access by the eduPerson attribute",
                        "type": "ArrayOfString"
                    },
                    "saml:givenName": {
                        "condition": "saml:givenName",
                        "description": "Filters access by the givenName attribute",
                        "type": "String"
                    },
                    "saml:mail": {
                        "condition": "saml:mail",
                        "description": "Filters access by the mail attribute",
                        "type": "String"
                    },
                    "saml:name": {
                        "condition": "saml:name",
                        "description": "Filters access by the name attribute",
                        "type": "String"
                    },
                    "saml:organizationStatus": {
                        "condition": "saml:organizationStatus",
                        "description": "Filters access by the organizationStatus attribute",
                        "type": "String"
                    },
                    "saml:primaryGroupSID": {
                        "condition": "saml:primaryGroupSID",
                        "description": "Filters access by the primaryGroupSID attribute",
                        "type": "String"
                    },
                    "saml:surname": {
                        "condition": "saml:surname",
                        "description": "Filters access by the surname attribute",
                        "type": "String"
                    },
                    "saml:uid": {
                        "condition": "saml:uid",
                        "description": "Filters access by the uid attribute",
                        "type": "String"
                    },
                    "saml:x500UniqueIdentifier": {
                        "condition": "saml:x500UniqueIdentifier",
                        "description": "Filters access by the uid attribute",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    },
                    "sts:TransitiveTagKeys": {
                        "condition": "sts:TransitiveTagKeys",
                        "description": "Filters access by the transitive tag keys that are passed in the request",
                        "type": "String"
                    },
                    "sts:SourceIdentity": {
                        "condition": "sts:SourceIdentity",
                        "description": "Filters access by the source identity that is passed in the request",
                        "type": "String"
                    },
                    "sts:RoleSessionName": {
                        "condition": "sts:RoleSessionName",
                        "description": "Filters access by the role session name required when you assume a role",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "AssumeRoleWithWebIdentity": {
                "privilege": "AssumeRoleWithWebIdentity",
                "description": "Grants permission to obtain a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web identity provider",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html",
                "privConditions": {
                    "graph.facebook.com:id": {
                        "condition": "graph.facebook.com:id",
                        "description": "Filters access by the Facebook user ID",
                        "type": "String"
                    },
                    "accounts.google.com:aud": {
                        "condition": "accounts.google.com:aud",
                        "description": "Filters access by the Google application ID",
                        "type": "String"
                    },
                    "accounts.google.com:oaud": {
                        "condition": "accounts.google.com:oaud",
                        "description": "Filters access by the Google audience",
                        "type": "String"
                    },
                    "accounts.google.com:sub": {
                        "condition": "accounts.google.com:sub",
                        "description": "Filters access by the subject of the claim (the Google user ID)",
                        "type": "String"
                    },
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    },
                    "sts:TransitiveTagKeys": {
                        "condition": "sts:TransitiveTagKeys",
                        "description": "Filters access by the transitive tag keys that are passed in the request",
                        "type": "String"
                    },
                    "sts:SourceIdentity": {
                        "condition": "sts:SourceIdentity",
                        "description": "Filters access by the source identity that is passed in the request",
                        "type": "String"
                    },
                    "sts:RoleSessionName": {
                        "condition": "sts:RoleSessionName",
                        "description": "Filters access by the role session name required when you assume a role",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": true
            },
            "SetSourceIdentity": {
                "privilege": "SetSourceIdentity",
                "description": "Grants permission to set a source identity on a STS session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html#id_credentials_temp_control-access_monitor-perms",
                "privConditions": {
                    "sts:SourceIdentity": {
                        "condition": "sts:SourceIdentity",
                        "description": "Filters access by the source identity that is passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagSession": {
                "privilege": "TagSession",
                "description": "Grants permission to add tags to a STS session",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    },
                    "sts:TransitiveTagKeys": {
                        "condition": "sts:TransitiveTagKeys",
                        "description": "Filters access by the transitive tag keys that are passed in the request",
                        "type": "String"
                    },
                    "saml:aud": {
                        "condition": "saml:aud",
                        "description": "Filters access by the endpoint URL to which SAML assertions are presented",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    },
    "user": {
        "resourceName": "user",
        "service": "sts",
        "resourceArn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}",
        "resourceConditions": {},
        "listPrivileges": {},
        "readPrivileges": {
            "GetFederationToken": {
                "privilege": "GetFederationToken",
                "description": "Grants permission to obtain a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a federated user",
                "accessLevel": "Read",
                "apiDocumentationLink": "https://docs.aws.amazon.com/STS/latest/APIReference/API_GetFederationToken.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "writePrivileges": {
            "SetSourceIdentity": {
                "privilege": "SetSourceIdentity",
                "description": "Grants permission to set a source identity on a STS session",
                "accessLevel": "Write",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html#id_credentials_temp_control-access_monitor-perms",
                "privConditions": {
                    "sts:SourceIdentity": {
                        "condition": "sts:SourceIdentity",
                        "description": "Filters access by the source identity that is passed in the request",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        },
        "permManPrivileges": {},
        "tagPrivileges": {
            "TagSession": {
                "privilege": "TagSession",
                "description": "Grants permission to add tags to a STS session",
                "accessLevel": "Tagging",
                "apiDocumentationLink": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html",
                "privConditions": {
                    "aws:TagKeys": {
                        "condition": "aws:TagKeys",
                        "description": "Filters access by the tag keys that are passed in the request",
                        "type": "ArrayOfString"
                    },
                    "aws:RequestTag/${TagKey}": {
                        "condition": "aws:RequestTag/${TagKey}",
                        "description": "Filters access by the tags that are passed in the request",
                        "type": "String"
                    },
                    "sts:TransitiveTagKeys": {
                        "condition": "sts:TransitiveTagKeys",
                        "description": "Filters access by the transitive tag keys that are passed in the request",
                        "type": "String"
                    },
                    "saml:aud": {
                        "condition": "saml:aud",
                        "description": "Filters access by the endpoint URL to which SAML assertions are presented",
                        "type": "String"
                    }
                },
                "dependentActions": [],
                "required": false
            }
        }
    }
}